From b607623477f6a1ffdaafbb1f25c6c1ad8255411e Mon Sep 17 00:00:00 2001
From: Jakub Palider <jpalider@marvell.com>
Date: Wed, 24 Mar 2021 05:37:13 +0530
Subject: [PATCH 11/13] misc: bphy: Fix resource release sequence

commit a80c91d3cadc260dac54c894d2acb4bf59c77900 from
git@git.assembla.com:cavium/WindRiver.linux.git

Dynamically allocated structures were freed during first interrupt
cleanup cycle. When the same procedure was requested from another
context these object were no longer present which caused hard
page faults. Moving the cleanup to ultimate release call resolves
this problem.

Change-Id: Ib2776b8939f9f21559cb72384e3f76da783afc25
Signed-off-by: Jakub Palider <jpalider@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/48478
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Radha Chintakuntla <radhac@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/misc/otx_bphy_ctr.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/drivers/misc/otx_bphy_ctr.c b/drivers/misc/otx_bphy_ctr.c
index 218fa8f9671c..59d6a482e5b7 100644
--- a/drivers/misc/otx_bphy_ctr.c
+++ b/drivers/misc/otx_bphy_ctr.c
@@ -191,10 +191,6 @@ static void cleanup_el3_irqs(struct task_struct *task)
 				pr_alert("Exiting, thread info matches, not removing handler for BPHY IRQ %d\n", i);
 		}
 	}
-
-	kfree(irq_installed);
-	kfree(irq_installed_threads);
-	kfree(irq_installed_tasks);
 }
 
 static int otx_dev_open(struct inode *inode, struct file *fp)
@@ -219,6 +215,11 @@ static int otx_dev_release(struct inode *inode, struct file *fp)
 {
 	if (in_use == 0)
 		return -EINVAL;
+
+	kfree(irq_installed);
+	kfree(irq_installed_threads);
+	kfree(irq_installed_tasks);
+
 	in_use = 0;
 	return 0;
 }
-- 
2.17.0

