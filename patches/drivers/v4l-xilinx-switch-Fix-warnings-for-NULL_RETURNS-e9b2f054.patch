From b49ce111162764b857e236eca03a6b418e254eda Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Tue, 22 Sep 2020 12:24:30 -0700
Subject: [PATCH 1654/1851] v4l: xilinx: switch: Fix warnings for NULL_RETURNS

commit f1b6af7c0a802914b8a3acee9b4c97e0e02a28b4 from
https://github.com/Xilinx/linux-xlnx.git

This patch fix the warnings for the NULL_RETURNS type.

The actual warnings are:

For xsw_get_pad_format():
Event return_null: 	Explicitly returning null.

For xsw_get_format():
Event returned_null: 	"xsw_get_pad_format" returns "NULL".
Event dereference: 	Dereferencing "xsw_get_pad_format(xsw, cfg, pad,
fmt->which)", which is known to be "NULL".

For xsw_set_format():
Event returned_null: 	"xsw_get_pad_format" returns "NULL".
Event var_assigned: 	Assigning: "format" = "NULL" return value from
"xsw_get_pad_format".
Event dereference: 	Dereferencing "format", which is known to be
"NULL".

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-switch.c | 23 +++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-switch.c b/drivers/media/platform/xilinx/xilinx-switch.c
index b0052a76c65d..354428f7bcfb 100644
--- a/drivers/media/platform/xilinx/xilinx-switch.c
+++ b/drivers/media/platform/xilinx/xilinx-switch.c
@@ -119,14 +119,22 @@ xsw_get_pad_format(struct xswitch_device *xsw,
 		   struct v4l2_subdev_pad_config *cfg,
 		   unsigned int pad, u32 which)
 {
+	struct v4l2_mbus_framefmt *format;
+
 	switch (which) {
 	case V4L2_SUBDEV_FORMAT_TRY:
-		return v4l2_subdev_get_try_format(&xsw->xvip.subdev, cfg, pad);
+		format = v4l2_subdev_get_try_format(&xsw->xvip.subdev,
+						    cfg, pad);
+		break;
 	case V4L2_SUBDEV_FORMAT_ACTIVE:
-		return &xsw->formats[pad];
+		format = &xsw->formats[pad];
+		break;
 	default:
-		return NULL;
+		format = NULL;
+		break;
 	}
+
+	return format;
 }
 
 static int xsw_get_format(struct v4l2_subdev *subdev,
@@ -135,6 +143,7 @@ static int xsw_get_format(struct v4l2_subdev *subdev,
 {
 	struct xswitch_device *xsw = to_xsw(subdev);
 	int pad = fmt->pad;
+	struct v4l2_mbus_framefmt *format;
 
 	if (pad >= xsw->nsinks) {
 		pad = xsw->routing[pad - xsw->nsinks];
@@ -144,7 +153,11 @@ static int xsw_get_format(struct v4l2_subdev *subdev,
 		}
 	}
 
-	fmt->format = *xsw_get_pad_format(xsw, cfg, pad, fmt->which);
+	format = xsw_get_pad_format(xsw, cfg, pad, fmt->which);
+	if (!format)
+		return -EINVAL;
+
+	fmt->format = *format;
 
 	return 0;
 }
@@ -163,6 +176,8 @@ static int xsw_set_format(struct v4l2_subdev *subdev,
 		return xsw_get_format(subdev, cfg, fmt);
 
 	format = xsw_get_pad_format(xsw, cfg, fmt->pad, fmt->which);
+	if (!format)
+		return -EINVAL;
 
 	format->code = fmt->format.code;
 	format->width = clamp_t(unsigned int, fmt->format.width,
-- 
2.31.1

