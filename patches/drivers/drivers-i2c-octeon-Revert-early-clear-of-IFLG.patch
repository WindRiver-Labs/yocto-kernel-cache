From 57f106ca36ff58e8a5286051bed1904a58bfc80b Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@marvell.com>
Date: Mon, 2 Nov 2020 19:41:02 -0800
Subject: [PATCH 676/767] drivers: i2c: octeon: Revert early clear of IFLG

commit 0c7a3a973b18b9ce988402591f40b53d051ab81f from
git@git.assembla.com:cavium/WindRiver.linux.git

Early clear of IFLG bit breaks the protocol and
does not help with timing gain either. This was just
a suggestion from design team in order to reduce delay.
Remove it as its ineffective.

Change-Id: I0e26bfac24f38178af9d0910484aa30b8fd2a464
Signed-off-by: Suneel Garapati <sgarapati@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/39990
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
---
 drivers/i2c/busses/i2c-octeon-core.c | 17 -----------------
 1 file changed, 17 deletions(-)

diff --git a/drivers/i2c/busses/i2c-octeon-core.c b/drivers/i2c/busses/i2c-octeon-core.c
index 1f37e3e6dae2..80a719c9e34b 100644
--- a/drivers/i2c/busses/i2c-octeon-core.c
+++ b/drivers/i2c/busses/i2c-octeon-core.c
@@ -32,14 +32,6 @@ irqreturn_t octeon_i2c_isr(int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
-static void octeon_i2c_clear_iflg(struct octeon_i2c *i2c)
-{
-	int ctl = octeon_i2c_ctl_read(i2c);
-
-	ctl &= (~TWSI_CTL_IFLG);
-	octeon_i2c_ctl_write(i2c, ctl);
-}
-
 static bool octeon_i2c_test_iflg(struct octeon_i2c *i2c)
 {
 	return (octeon_i2c_ctl_read(i2c) & TWSI_CTL_IFLG);
@@ -337,9 +329,6 @@ static int octeon_i2c_read(struct octeon_i2c *i2c, int target,
 	result = octeon_i2c_check_status(i2c, false);
 	if (result)
 		return result;
-	/* Clear IFLG bit early incase of HS Mode */
-	if (i2c->twsi_freq > FREQ_400KHZ)
-		octeon_i2c_clear_iflg(i2c);
 
 	for (i = 0; i < length; i++) {
 		/*
@@ -375,9 +364,6 @@ static int octeon_i2c_read(struct octeon_i2c *i2c, int target,
 		result = octeon_i2c_check_status(i2c, final_read);
 		if (result)
 			return result;
-		/* Clear IFLG bit early incase of HS Mode */
-		if (i2c->twsi_freq > FREQ_400KHZ)
-			octeon_i2c_clear_iflg(i2c);
 	}
 	*rlength = length;
 	return 0;
@@ -410,9 +396,6 @@ static int octeon_i2c_write(struct octeon_i2c *i2c, int target,
 		result = octeon_i2c_check_status(i2c, false);
 		if (result)
 			return result;
-		/* Clear IFLG bit early incase of HS Mode */
-		if (i2c->twsi_freq > FREQ_400KHZ)
-			octeon_i2c_clear_iflg(i2c);
 
 		octeon_i2c_data_write(i2c, data[i]);
 		octeon_i2c_ctl_write(i2c, TWSI_CTL_ENAB);
-- 
2.31.1

