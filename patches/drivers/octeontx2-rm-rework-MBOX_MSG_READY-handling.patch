From 68e2d301b187ddccc5ac3ed0c0aad4eefac25d99 Mon Sep 17 00:00:00 2001
From: Stanislaw Kardach <skardach@marvell.com>
Date: Wed, 24 Jul 2019 16:57:32 +0200
Subject: [PATCH 296/767] octeontx2-rm: rework MBOX_MSG_READY handling

commit 630709c4cb084f3e65b1947e4a732d6e30816686 from
git@git.assembla.com:cavium/WindRiver.linux.git

Forward the MBOX_MSG_READY to the kernel after intercepting in order
to propagate RCLK/SCLK values read by the octeontx2-af driver.

Change-Id: I1733401870040ec1efd97fd42dd7eddab485aad1
Signed-off-by: Stanislaw Kardach <skardach@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/13260
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
(cherry picked from commit c07823a8497516b0d55427890593275b11f7f9ee)
Reviewed-on: https://sj1git1.cavium.com/13535
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/octeontx2-rm/otx2_rm.c | 23 ++--------------------
 1 file changed, 2 insertions(+), 21 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2-rm/otx2_rm.c b/drivers/soc/marvell/octeontx2-rm/otx2_rm.c
index 12ff0ef92305..bf0e023abdda 100644
--- a/drivers/soc/marvell/octeontx2-rm/otx2_rm.c
+++ b/drivers/soc/marvell/octeontx2-rm/otx2_rm.c
@@ -320,24 +320,6 @@ check_attach_rsrcs_req(struct rm_dev *rm, struct rvu_vf *vf,
 	return forward_to_mbox(rm, &rm->afpf_mbox, 0, req, size, "AF");
 }
 
-static int
-reply_ready_msg(struct otx2_mbox *mbox, int devid, u16 pcifunc)
-{
-	struct ready_msg_rsp *rsp;
-
-	rsp = (struct ready_msg_rsp *)otx2_mbox_alloc_msg(mbox, devid,
-							  sizeof(*rsp));
-	if (!rsp)
-		return -ENOMEM;
-
-	rsp->hdr.id = MBOX_MSG_READY;
-	rsp->hdr.sig = OTX2_MBOX_RSP_SIG;
-	/* Tell the receiver, his identity */
-	rsp->hdr.pcifunc = pcifunc;
-
-	return 0;
-}
-
 static int
 handle_vf_req(struct rm_dev *rm, struct rvu_vf *vf, struct mbox_msghdr *req,
 	      int size)
@@ -360,9 +342,8 @@ handle_vf_req(struct rm_dev *rm, struct rvu_vf *vf, struct mbox_msghdr *req,
 				req->ver, OTX2_MBOX_VERSION);
 			return -EINVAL;
 		}
-		err = reply_ready_msg(&rm->pfvf_mbox, vf->vf_id, req->pcifunc);
-		if (!err)
-			vf->in_use = true;
+		vf->in_use = true;
+		err = forward_to_mbox(rm, &rm->afpf_mbox, 0, req, size, "AF");
 		break;
 	case MBOX_MSG_FREE_RSRC_CNT:
 		if (req->ver < OTX2_MBOX_VERSION) {
-- 
2.31.1

