From f0cb4eb08cc9bc9e8983efa8d9c42e64356ed349 Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Thu, 26 Nov 2020 13:36:59 +0800
Subject: [PATCH] driver: regulator: core: remove the redundant memory release
 operation

There is  a commit 419a38608c17("regulator: core: free
memory of rdev->dev.kobj.name to fix kmemleak ") that is
used to fix a memory leak issue by releasing the memory of
object name. But after the upstream commit 9177514ce349
("regulator: fix memory leak on error path of regulator_register()")
is involved, the memory of object name is also released in
put_device() function. Executing 2 times memory release
operation causes kernel abnormally, so remove the internal
fixing code, and use the upstream code.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/regulator/core.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index 0442926b8b4e..31dd3e565d43 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -5159,7 +5159,6 @@ regulator_register(const struct regulator_desc *regulator_desc,
 	regulator_remove_coupling(rdev);
 	mutex_unlock(&regulator_list_mutex);
 wash:
-	kfree(rdev->dev.kobj.name);
 	kfree(rdev->coupling_desc.coupled_rdevs);
 	mutex_lock(&regulator_list_mutex);
 	regulator_ena_gpio_free(rdev);
-- 
2.26.1

