From 703d5556e8eabadf79d9267a1318a1599d8fd4dc Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Wed, 17 Mar 2021 15:37:09 -0600
Subject: [PATCH 1746/1852] spi: spi-zynqmp-gqspi: Avoid multiple writes to
 tapdelay registers

commit 8540825db3d5519ef205a710515b7819b95eeb4f from
https://github.com/Xilinx/linux-xlnx.git

During multiple transfers when the requested spi frequency is different
from the max spi frequency, at which the qspi controller can operate
(i.e., qspi ref_clk / 2), then the driver was setting the tapdelay for
every qspi transfer, by writing to the tapdelay registers. Due to multiple
register writes the qspi erase/read/write performance degraded.
This patch fixes the issue by setting the tapdpdelay only once during
multiple transfers.

Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Acked-by: Tony McDowell <tmcdowe@xilinx.com>
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/spi/spi-zynqmp-gqspi.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/spi/spi-zynqmp-gqspi.c b/drivers/spi/spi-zynqmp-gqspi.c
index 5eec2abd70d9..a4d2d6bcc325 100644
--- a/drivers/spi/spi-zynqmp-gqspi.c
+++ b/drivers/spi/spi-zynqmp-gqspi.c
@@ -196,6 +196,7 @@ struct qspi_platform_data {
  * @speed_hz:		Current SPI bus clock speed in hz
  * @io_mode:		Defines the operating mode, either IO or dma
  * @has_tapdelay:	Used for tapdelay register available in qspi
+ * @set_tapdelay:	Used to avoid setting tapdelay multiple times
  */
 struct zynqmp_qspi {
 	void __iomem *regs;
@@ -219,6 +220,7 @@ struct zynqmp_qspi {
 	u32 speed_hz;
 	bool io_mode;
 	bool has_tapdelay;
+	bool set_tapdelay;
 };
 
 /**
@@ -348,6 +350,7 @@ static void zynqmp_qspi_set_tapdelay(struct zynqmp_qspi *xqspi, u32 baudrateval)
 
 	zynqmp_gqspi_write(xqspi, GQSPI_LPBK_DLY_ADJ_OFST, lpbkdlyadj);
 	zynqmp_gqspi_write(xqspi, GQSPI_DATA_DLY_ADJ_OFST, datadlyadj);
+	xqspi->set_tapdelay = true;
 }
 
 static u32 zynqmp_disable_intr(struct zynqmp_qspi *xqspi)
@@ -591,7 +594,7 @@ static int zynqmp_qspi_setup_transfer(struct spi_device *qspi,
 	else
 		req_hz = qspi->max_speed_hz;
 
-	if (xqspi->speed_hz != req_hz) {
+	if (xqspi->speed_hz != req_hz && xqspi->set_tapdelay != true) {
 		/* Set the clock frequency */
 		/* If req_hz == 0, default to lowest speed */
 		clk_rate = clk_get_rate(xqspi->refclk);
-- 
2.31.1

