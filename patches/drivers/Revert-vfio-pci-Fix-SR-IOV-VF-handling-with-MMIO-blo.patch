From f80441c9291ff68c2891b1a9cb039eeff4201fae Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <bbhushan2@marvell.com>
Date: Wed, 24 Feb 2021 09:31:56 +0530
Subject: [PATCH 1273/1921] Revert "vfio/pci: Fix SR-IOV VF handling with MMIO
 blocking"

This reverts commit 894a6f0be372df98f394b316202a7d1d56b745ce.

Change-Id: I22c044ab2ddc976c10fcad1cee8a05bbd73b075b
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/46587
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/vfio/pci/vfio_pci_config.c | 19 +------------------
 1 file changed, 1 insertion(+), 18 deletions(-)

diff --git a/drivers/vfio/pci/vfio_pci_config.c b/drivers/vfio/pci/vfio_pci_config.c
index bf32997c557f..a13135bb464c 100644
--- a/drivers/vfio/pci/vfio_pci_config.c
+++ b/drivers/vfio/pci/vfio_pci_config.c
@@ -398,15 +398,9 @@ static inline void p_setd(struct perm_bits *p, int off, u32 virt, u32 write)
 /* Caller should hold memory_lock semaphore */
 bool __vfio_pci_memory_enabled(struct vfio_pci_device *vdev)
 {
-	struct pci_dev *pdev = vdev->pdev;
 	u16 cmd = le16_to_cpu(*(__le16 *)&vdev->vconfig[PCI_COMMAND]);
 
-	/*
-	 * SR-IOV VF memory enable is handled by the MSE bit in the
-	 * PF SR-IOV capability, there's therefore no need to trigger
-	 * faults based on the virtual value.
-	 */
-	return pdev->no_command_memory || (cmd & PCI_COMMAND_MEMORY);
+	return cmd & PCI_COMMAND_MEMORY;
 }
 
 /*
@@ -1735,17 +1729,6 @@ int vfio_config_init(struct vfio_pci_device *vdev)
 
 		vconfig[PCI_INTERRUPT_PIN] = 0; /* Gratuitous for good VFs */
 	}
-	if (pdev->no_command_memory) {
-		/*
-		 * VFs and devices that set pdev->no_command_memory do not
-		 * implement the memory enable bit of the COMMAND register
-		 * therefore we'll not have it set in our initial copy of
-		 * config space after pci_enable_device().  For consistency
-		 * with PFs, set the virtual enable bit here.
-		 */
-		*(__le16 *)&vconfig[PCI_COMMAND] |=
-					cpu_to_le16(PCI_COMMAND_MEMORY);
-	}
 
 	if (!IS_ENABLED(CONFIG_VFIO_PCI_INTX) || vdev->nointx)
 		vconfig[PCI_INTERRUPT_PIN] = 0;
-- 
2.31.1

