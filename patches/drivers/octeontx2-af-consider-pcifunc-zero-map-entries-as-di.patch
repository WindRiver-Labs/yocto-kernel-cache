From 00838741e61fc47bba63153cd7bb5ef83bffe1ac Mon Sep 17 00:00:00 2001
From: Nithin Dabilpuram <ndabilpuram@marvell.com>
Date: Wed, 14 Apr 2021 17:09:47 +0530
Subject: [PATCH 4/7] octeontx2-af: consider pcifunc zero map entries as
 disabled

commit 4adb23bcbe0007ac9544f8fe3d79579925b1b009 from
git@git.assembla.com:cavium/WindRiver.linux.git

While counting LF's allocated for a pcifunc, consider the fact
that pcifunc 0 means LF is not attached and not that LF is attached
to AF. Without this change, resource policy check fails always
as while counting LF's attached to PF of LBK VF, current code counts
even disabled LF's because LBK VF's PF pcifunc is 0.

This patch also fixes buffer overflow while printing debugfs
string.

Change-Id: I8477e4e452d8b7a282cbf1eb5c6dfea86b261d49
Signed-off-by: Nithin Dabilpuram <ndabilpuram@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/51636
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/rvu_debugfs.c | 13 ++++++++++++-
 .../ethernet/marvell/octeontx2/af/rvu_validation.c  |  3 ++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
index 598def0691f0..1614775b75e0 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
@@ -203,6 +203,8 @@ static ssize_t rvu_dbg_rsrc_attach_status(struct file *filp,
 			}
 
 			for (index = 0; index < BLK_COUNT; index++) {
+				int lfs_off;
+
 				block = rvu->hw->block[index];
 				if (!strlen(block.name))
 					continue;
@@ -212,7 +214,16 @@ static ssize_t rvu_dbg_rsrc_attach_status(struct file *filp,
 					if (block.fn_map[lf] != pcifunc)
 						continue;
 					flag = 1;
-					len += sprintf(&lfs[len], "%d,", lf);
+					lfs_off = scnprintf(&lfs[len],
+							    lf_str_size - len,
+							    "%d,", lf);
+					if (lfs_off <= 0) {
+						len = len > 1 ? len : 1;
+						lfs[len - 1] = '!';
+						len++;
+						break;
+					}
+					len += lfs_off;
 				}
 
 				if (flag && len)
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
index 8c42b0951e0a..c847a1d2f860 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
@@ -200,7 +200,8 @@ static int rvu_blk_count_rsrc(struct rvu_block *block, u16 pcifunc, u8 rshift)
 	int count = 0, lf;
 
 	for (lf = 0; lf < block->lf.max; lf++)
-		if ((block->fn_map[lf] >> rshift) == (pcifunc >> rshift))
+		if ((block->fn_map[lf] >> rshift) == (pcifunc >> rshift) &&
+		    block->fn_map[lf] != 0)
 			count++;
 
 	return count;
-- 
2.31.1

