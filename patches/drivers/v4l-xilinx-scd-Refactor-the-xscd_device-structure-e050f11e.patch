From 2f3c3a67e16c3d32c93db7d75b4d12f5a388d2fe Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Wed, 3 Apr 2019 13:01:49 -0700
Subject: [PATCH 0601/1851] v4l: xilinx: scd: Refactor the xscd_device
 structure

commit c93ecf2b56bc611efdd0f5e09a3168a339826bce from
https://github.com/Xilinx/linux-xlnx.git

Reorder fields to group them by category (system resources,
configuration V4L2 channels, DMA channels), squash the xscd_shared_data
structure with xscd_device and remove duplicated fields.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../xilinx/xilinx-scenechange-channel.c       | 27 +++++++-------
 .../platform/xilinx/xilinx-scenechange-dma.c  | 22 +++++-------
 .../platform/xilinx/xilinx-scenechange.c      | 18 ++++------
 .../platform/xilinx/xilinx-scenechange.h      | 36 +++++++------------
 4 files changed, 40 insertions(+), 63 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-scenechange-channel.c b/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
index 232716bfa062..6f60a38cfe63 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
+++ b/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
@@ -168,7 +168,7 @@ static void xscd_chan_configure_params(struct xscd_chan *chan,
 		   chan->format.width);
 
 	/* Stride is required only for memory based IP, not for streaming IP */
-	if (chan->xscd->shared_data.memory_based) {
+	if (chan->xscd->memory_based) {
 		stride = roundup(chan->format.width, XSCD_BYTE_ALIGN);
 		xscd_write(chan->iomem, XSCD_STRIDE_OFFSET + chan_offset,
 			   stride);
@@ -179,7 +179,7 @@ static void xscd_chan_configure_params(struct xscd_chan *chan,
 
 	/* Hardware video format */
 	vid_fmt = xscd_chan_get_vid_fmt(chan->format.code,
-					chan->xscd->shared_data.memory_based);
+					chan->xscd->memory_based);
 	xscd_write(chan->iomem, XSCD_VID_FMT_OFFSET + chan_offset, vid_fmt);
 
 	/*
@@ -197,33 +197,31 @@ static void xscd_chan_configure_params(struct xscd_chan *chan,
 static int xscd_s_stream(struct v4l2_subdev *subdev, int enable)
 {
 	struct xscd_chan *chan = to_xscd_chan(subdev);
-	struct xscd_shared_data *shared_data;
 	unsigned long flags;
 	u32 chan_offset;
 
 	/* TODO: Re-organise shared data in a better way */
-	shared_data = &chan->xscd->shared_data;
 	chan->dmachan.en = enable;
 
 	spin_lock_irqsave(&chan->dmachan.lock, flags);
 
-	if (shared_data->memory_based) {
+	if (chan->xscd->memory_based) {
 		chan_offset = chan->id * XSCD_CHAN_OFFSET;
 		xscd_chan_configure_params(chan, chan_offset);
 		if (enable) {
-			if (!shared_data->active_streams) {
+			if (!chan->xscd->active_streams) {
 				chan->dmachan.valid_interrupt = true;
-				shared_data->active_streams++;
+				chan->xscd->active_streams++;
 				xscd_dma_start_transfer(&chan->dmachan);
 				xscd_dma_reset(&chan->dmachan);
 				xscd_dma_chan_enable(&chan->dmachan,
 						     BIT(chan->id));
 				xscd_dma_start(&chan->dmachan);
 			} else {
-				shared_data->active_streams++;
+				chan->xscd->active_streams++;
 			}
 		} else {
-			shared_data->active_streams--;
+			chan->xscd->active_streams--;
 		}
 	} else {
 		/* Streaming based */
@@ -345,11 +343,10 @@ static void xscd_event_notify(struct xscd_chan *chan)
 
 void xscd_chan_irq_handler(struct xscd_chan *chan)
 {
-	struct xscd_shared_data *shared_data = &chan->xscd->shared_data;
 	spin_lock(&chan->dmachan.lock);
 
-	if ((shared_data->memory_based && chan->dmachan.valid_interrupt) ||
-	    !shared_data->memory_based) {
+	if ((chan->xscd->memory_based && chan->dmachan.valid_interrupt) ||
+	    !chan->xscd->memory_based) {
 		spin_unlock(&chan->dmachan.lock);
 		xscd_event_notify(chan);
 		return;
@@ -387,7 +384,7 @@ int xscd_chan_init(struct xscd_device *xscd, unsigned int chan_id,
 	chan->dmachan.id = chan->id;
 	chan->dmachan.iomem = chan->xscd->iomem;
 
-	xscd->shared_data.dma_chan_list[chan->id] = &chan->dmachan;
+	xscd->channels[chan->id] = &chan->dmachan;
 
 	/* Initialize V4L2 subdevice and media entity */
 	subdev = &chan->subdev;
@@ -407,7 +404,7 @@ int xscd_chan_init(struct xscd_device *xscd, unsigned int chan_id,
 	chan->format.height = XSCD_MAX_HEIGHT;
 
 	/* Initialize media pads */
-	num_pads = xscd->shared_data.memory_based ? 1 : 2;
+	num_pads = xscd->memory_based ? 1 : 2;
 	chan->pad = devm_kzalloc(chan->xscd->dev,
 				 sizeof(struct media_pad) * num_pads,
 				 GFP_KERNEL);
@@ -415,7 +412,7 @@ int xscd_chan_init(struct xscd_device *xscd, unsigned int chan_id,
 		return -ENOMEM;
 
 	chan->pad[XVIP_PAD_SINK].flags = MEDIA_PAD_FL_SINK;
-	if (!xscd->shared_data.memory_based)
+	if (!xscd->memory_based)
 		chan->pad[XVIP_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
 
 	ret = media_entity_pads_init(&subdev->entity, num_pads, chan->pad);
diff --git a/drivers/media/platform/xilinx/xilinx-scenechange-dma.c b/drivers/media/platform/xilinx/xilinx-scenechange-dma.c
index 3156eaa10150..6f94582d60fc 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-scenechange-dma.c
@@ -34,10 +34,10 @@ void xscd_dma_irq_handler(struct xscd_device *xscd)
 {
 	struct xscd_dma_chan *chan;
 
-	if (xscd->shared_data.memory_based) {
+	if (xscd->memory_based) {
 		u32 chan_en = 0, id;
 
-		for (id = 0; id < xscd->numchannels; id++) {
+		for (id = 0; id < xscd->num_streams; id++) {
 			chan = xscd->channels[id];
 			spin_lock(&chan->lock);
 			chan->idle = true;
@@ -59,7 +59,7 @@ void xscd_dma_irq_handler(struct xscd_device *xscd)
 			xscd_dma_start(chan);
 		}
 
-		for (id = 0; id < xscd->numchannels; id++) {
+		for (id = 0; id < xscd->num_streams; id++) {
 			chan = xscd->channels[id];
 			tasklet_schedule(&chan->tasklet);
 		}
@@ -317,7 +317,7 @@ static void xscd_dma_issue_pending(struct dma_chan *dchan)
 	struct xscd_device *xscd = chan->xscd;
 	u32 chan_en = 0, id;
 
-	for (id = 0; id < xscd->numchannels; id++) {
+	for (id = 0; id < xscd->num_streams; id++) {
 		chan = xscd->channels[id];
 		spin_lock(&chan->lock);
 		chan->idle = true;
@@ -355,7 +355,7 @@ void xscd_dma_halt(struct xscd_dma_chan *chan)
 {
 	struct xscd_device *xscd = chan->xscd;
 
-	if (xscd->shared_data.memory_based)
+	if (xscd->memory_based)
 		xscd_clr(chan->iomem, XSCD_CTRL_OFFSET, XSCD_CTRL_AP_START);
 	else
 		/* Streaming based */
@@ -373,7 +373,7 @@ void xscd_dma_start(struct xscd_dma_chan *chan)
 {
 	struct xscd_device *xscd = chan->xscd;
 
-	if (xscd->shared_data.memory_based)
+	if (xscd->memory_based)
 		xscd_set(chan->iomem, XSCD_CTRL_OFFSET, XSCD_CTRL_AP_START);
 	else
 		/* Streaming based */
@@ -440,7 +440,7 @@ static struct dma_chan *of_scdma_xilinx_xlate(struct of_phandle_args *dma_spec,
 	struct xscd_device *xscd = ofdma->of_dma_data;
 	u32 chan_id = dma_spec->args[0];
 
-	if (chan_id >= xscd->numchannels)
+	if (chan_id >= xscd->num_streams)
 		return NULL;
 
 	if (!xscd->channels[chan_id])
@@ -476,7 +476,6 @@ xscd_dma_chan_probe(struct xscd_device *xscd, int chan_id)
  */
 int xscd_dma_init(struct xscd_device *xscd)
 {
-	struct device_node *node = xscd->dev->of_node;
 	struct dma_device *ddev = &xscd->dma_device;
 	struct xscd_dma_chan *chan;
 	unsigned int chan_id;
@@ -486,9 +485,6 @@ int xscd_dma_init(struct xscd_device *xscd)
 	ddev->dev = xscd->dev;
 	dma_set_mask(xscd->dev, DMA_BIT_MASK(32));
 
-	ret = of_property_read_u32(node, "xlnx,numstreams",
-				   &xscd->numchannels);
-
 	INIT_LIST_HEAD(&ddev->channels);
 	dma_cap_set(DMA_SLAVE, ddev->cap_mask);
 	dma_cap_set(DMA_PRIVATE, ddev->cap_mask);
@@ -499,7 +495,7 @@ int xscd_dma_init(struct xscd_device *xscd)
 	ddev->device_terminate_all = xscd_dma_terminate_all;
 	ddev->device_prep_interleaved_dma = xscd_dma_prep_interleaved;
 
-	for (chan_id = 0; chan_id < xscd->numchannels; chan_id++) {
+	for (chan_id = 0; chan_id < xscd->num_streams; chan_id++) {
 		chan = xscd_dma_chan_probe(xscd, chan_id);
 		if (IS_ERR(chan)) {
 			dev_err(xscd->dev, "failed to probe a channel\n");
@@ -528,7 +524,7 @@ int xscd_dma_init(struct xscd_device *xscd)
 	dma_async_device_unregister(ddev);
 
 error:
-	for (chan_id = 0; chan_id < xscd->numchannels; chan_id++) {
+	for (chan_id = 0; chan_id < xscd->num_streams; chan_id++) {
 		if (xscd->channels[chan_id])
 			xscd_dma_chan_remove(xscd->channels[chan_id]);
 	}
diff --git a/drivers/media/platform/xilinx/xilinx-scenechange.c b/drivers/media/platform/xilinx/xilinx-scenechange.c
index eb4564bf4385..9d9d400cb889 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange.c
+++ b/drivers/media/platform/xilinx/xilinx-scenechange.c
@@ -25,7 +25,7 @@ static irqreturn_t xscd_irq_handler(int irq, void *data)
 
 	xscd_write(xscd->iomem, XSCD_ISR_OFFSET, XSCD_IE_AP_DONE);
 
-	for (i = 0; i < xscd->numstreams; ++i)
+	for (i = 0; i < xscd->num_streams; ++i)
 		xscd_chan_irq_handler(xscd->chans[i]);
 
 	xscd_dma_irq_handler(xscd);
@@ -57,8 +57,7 @@ static int xscd_parse_of(struct xscd_device *xscd)
 	struct device_node *node = xscd->dev->of_node;
 	int ret;
 
-	xscd->shared_data.memory_based =
-			of_property_read_bool(node, "xlnx,memorybased");
+	xscd->memory_based = of_property_read_bool(node, "xlnx,memorybased");
 	xscd->rst_gpio = devm_gpiod_get(dev, "reset", GPIOD_OUT_HIGH);
 	if (IS_ERR(xscd->rst_gpio)) {
 		if (PTR_ERR(xscd->rst_gpio) != -EPROBE_DEFER)
@@ -68,11 +67,11 @@ static int xscd_parse_of(struct xscd_device *xscd)
 	}
 
 	ret = of_property_read_u32(node, "xlnx,numstreams",
-				   &xscd->numstreams);
+				   &xscd->num_streams);
 	if (ret < 0)
 		return ret;
 
-	if (!xscd->shared_data.memory_based && xscd->numstreams != 1) {
+	if (!xscd->memory_based && xscd->num_streams != 1) {
 		dev_err(dev, "Stream-based mode only supports one stream\n");
 		return -EINVAL;
 	}
@@ -101,6 +100,7 @@ static int xscd_probe(struct platform_device *pdev)
 		return -ENOMEM;
 
 	xscd->dev = &pdev->dev;
+	platform_set_drvdata(pdev, xscd);
 
 	ret = xscd_parse_of(xscd);
 	if (ret < 0)
@@ -114,16 +114,12 @@ static int xscd_probe(struct platform_device *pdev)
 	gpiod_set_value_cansleep(xscd->rst_gpio, XSCD_RESET_ASSERT);
 	gpiod_set_value_cansleep(xscd->rst_gpio, XSCD_RESET_DEASSERT);
 
-	xscd->shared_data.iomem = xscd->iomem;
-	xscd->shared_data.dma_chan_list = xscd->channels;
-	platform_set_drvdata(pdev, (void *)&xscd->shared_data);
-
 	id = 0;
 	for_each_child_of_node(xscd->dev->of_node, subdev_node) {
-		if (id >= xscd->numstreams) {
+		if (id >= xscd->num_streams) {
 			dev_warn(&pdev->dev,
 				 "Too many channels, limiting to %u\n",
-				 xscd->numstreams);
+				 xscd->num_streams);
 			of_node_put(subdev_node);
 			break;
 		}
diff --git a/drivers/media/platform/xilinx/xilinx-scenechange.h b/drivers/media/platform/xilinx/xilinx-scenechange.h
index 0c7e7cd0e9cd..89b51d8622a0 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange.h
+++ b/drivers/media/platform/xilinx/xilinx-scenechange.h
@@ -172,47 +172,35 @@ static inline struct xscd_chan *to_xscd_chan(struct v4l2_subdev *subdev)
 	return container_of(subdev, struct xscd_chan, subdev);
 }
 
-/**
- * struct xscd_shared_data - Data to be shared among v4l subdev and DMA engine
- * @iomem: device I/O register space remapped to kernel virtual memory
- * @dma_chan_list: List of DMA channels available
- * @active_streams: Number of active streams
- * @memory_based: Flag to identify memory based mode
- */
-struct xscd_shared_data {
-	void __iomem *iomem;
-	struct xscd_dma_chan **dma_chan_list;
-	u8 active_streams;
-	u8 memory_based;
-};
-
 /**
  * struct xscd_device - Xilinx Scene Change Detection device structure
- * @iomem: device I/O register space remapped to kernel virtual memory
- * @numstreams: Number of streams in the design
- * @irq: Device IRQ
  * @dev: (OF) device
+ * @iomem: device I/O register space remapped to kernel virtual memory
  * @rst_gpio: reset GPIO
  * @clk: video core clock
- * @shared_data: Data Shared across devices
+ * @irq: Device IRQ
+ * @memory_based: Flag to identify memory based mode
+ * @num_streams: Number of streams in the design
  * @chans: video stream instances
  * @dma_device: DMA device structure
  * @channels: DMA channels
- * @numchannels: Total number of channels
+ * @active_streams: Number of active streams
  */
 struct xscd_device {
-	void __iomem *iomem;
-	int numstreams;
-	int irq;
 	struct device *dev;
+	void __iomem *iomem;
 	struct gpio_desc *rst_gpio;
 	struct clk *clk;
-	struct xscd_shared_data shared_data;
+	int irq;
+
+	u8 memory_based;
+	int num_streams;
+
 	struct xscd_chan *chans[XSCD_MAX_CHANNELS];
 
 	struct dma_device dma_device;
 	struct xscd_dma_chan *channels[XSCD_MAX_CHANNELS];
-	u32 numchannels;
+	u8 active_streams;
 };
 
 /*
-- 
2.31.1

