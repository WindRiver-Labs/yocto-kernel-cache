From 93b2b43be36f6daeae372e3b565b606c4690508b Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Mon, 9 Mar 2020 15:06:00 +0100
Subject: [PATCH 1263/1851] dma: xilinx: Replace dma_zalloc_coherent API with
 dma_alloc_coherent

commit 94605a179d164463698d426ebdf58b3c4f7a50a5 from
https://github.com/Xilinx/linux-xlnx.git

This patch replaces "dma_zalloc_coherent" API with "dma_alloc_coherent"
as it was deprecated in 5.4 kernel by commit 750afb08ca71
("cross-tree: phase out dma_zalloc_coherent()").

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/dma/xilinx/xilinx_ps_pcie_platform.c | 24 ++++++++++----------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_ps_pcie_platform.c b/drivers/dma/xilinx/xilinx_ps_pcie_platform.c
index fffebc921174..94dd895a590f 100644
--- a/drivers/dma/xilinx/xilinx_ps_pcie_platform.c
+++ b/drivers/dma/xilinx/xilinx_ps_pcie_platform.c
@@ -2430,8 +2430,8 @@ static int dma_alloc_descriptors_two_queues(struct ps_pcie_dma_chan *chan)
 	size = chan->total_descriptors *
 		sizeof(struct SOURCE_DMA_DESCRIPTOR);
 
-	sgl_base = dma_zalloc_coherent(chan->dev, size, &phy_addr_sglbase,
-				       GFP_KERNEL);
+	sgl_base = dma_alloc_coherent(chan->dev, size, &phy_addr_sglbase,
+				      GFP_KERNEL);
 
 	if (!sgl_base) {
 		dev_err(chan->dev,
@@ -2441,8 +2441,8 @@ static int dma_alloc_descriptors_two_queues(struct ps_pcie_dma_chan *chan)
 	}
 
 	size = chan->total_descriptors * sizeof(struct STATUS_DMA_DESCRIPTOR);
-	sta_base = dma_zalloc_coherent(chan->dev, size, &phy_addr_stabase,
-				       GFP_KERNEL);
+	sta_base = dma_alloc_coherent(chan->dev, size, &phy_addr_stabase,
+				      GFP_KERNEL);
 
 	if (!sta_base) {
 		dev_err(chan->dev,
@@ -2506,8 +2506,8 @@ static int dma_alloc_decriptors_all_queues(struct ps_pcie_dma_chan *chan)
 	size = chan->total_descriptors *
 		sizeof(struct SOURCE_DMA_DESCRIPTOR);
 	chan->psrc_sgl_bd =
-		dma_zalloc_coherent(chan->dev, size, &chan->src_sgl_bd_pa,
-				    GFP_KERNEL);
+		dma_alloc_coherent(chan->dev, size, &chan->src_sgl_bd_pa,
+				   GFP_KERNEL);
 
 	if (!chan->psrc_sgl_bd) {
 		dev_err(chan->dev,
@@ -2518,8 +2518,8 @@ static int dma_alloc_decriptors_all_queues(struct ps_pcie_dma_chan *chan)
 
 	size = chan->total_descriptors * sizeof(struct DEST_DMA_DESCRIPTOR);
 	chan->pdst_sgl_bd =
-		dma_zalloc_coherent(chan->dev, size, &chan->dst_sgl_bd_pa,
-				    GFP_KERNEL);
+		dma_alloc_coherent(chan->dev, size, &chan->dst_sgl_bd_pa,
+				   GFP_KERNEL);
 
 	if (!chan->pdst_sgl_bd) {
 		dev_err(chan->dev,
@@ -2530,8 +2530,8 @@ static int dma_alloc_decriptors_all_queues(struct ps_pcie_dma_chan *chan)
 
 	size = chan->total_descriptors * sizeof(struct STATUS_DMA_DESCRIPTOR);
 	chan->psrc_sta_bd =
-		dma_zalloc_coherent(chan->dev, size, &chan->src_sta_bd_pa,
-				    GFP_KERNEL);
+		dma_alloc_coherent(chan->dev, size, &chan->src_sta_bd_pa,
+				   GFP_KERNEL);
 
 	if (!chan->psrc_sta_bd) {
 		dev_err(chan->dev,
@@ -2541,8 +2541,8 @@ static int dma_alloc_decriptors_all_queues(struct ps_pcie_dma_chan *chan)
 	}
 
 	chan->pdst_sta_bd =
-		dma_zalloc_coherent(chan->dev, size, &chan->dst_sta_bd_pa,
-				    GFP_KERNEL);
+		dma_alloc_coherent(chan->dev, size, &chan->dst_sta_bd_pa,
+				   GFP_KERNEL);
 
 	if (!chan->pdst_sta_bd) {
 		dev_err(chan->dev,
-- 
2.31.1

