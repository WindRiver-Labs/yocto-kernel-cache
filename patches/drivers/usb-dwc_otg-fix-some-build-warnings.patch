From 761243cb453bc34b94949834d4e3802aeee4d4e0 Mon Sep 17 00:00:00 2001
From: Wenlin Kang <wenlin.kang@windriver.com>
Date: Fri, 8 Jan 2021 05:01:56 +0000
Subject: [PATCH] usb: dwc_otg: fix some build warnings

Fix some build warnings as below:

usb/host/dwc_otg/dwc_otg_fiq_fsm.c: In function 'fiq_iso_out_advance':
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c:304:14: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
  hcdma.d32 = (uint32_t) &blob->channel[n].index[i].buf[0];
              ^
In file included from drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c:53:
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c: In function 'dwc_otg_fiq_fsm':
  AR      drivers/video/fbdev/built-in.a
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c:1350:38: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
   FIQ_WRITE(state->mphi_regs.outdda, (int) state->dummy_send);
                                      ^
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.h:80:74: note: in definition of macro 'FIQ_WRITE'
 #define FIQ_WRITE(_addr_,_data_) (*(volatile unsigned int *) (_addr_) = (_data_))
                                                                          ^~~~~~
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c: In function 'dwc_otg_fiq_nop':
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c:1411:38: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
   FIQ_WRITE(state->mphi_regs.outdda, (int) state->dummy_send);
                                      ^
drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.h:80:74: note: in definition of macro 'FIQ_WRITE'
 #define FIQ_WRITE(_addr_,_data_) (*(volatile unsigned int *) (_addr_) = (_data_))
                                                                          ^~~~~~
...

Some codes references https://github.com/raspberrypi/linux.git

Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/usb/host/dwc_otg/dwc_otg_driver.c    | 4 ++--
 drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c   | 6 +++---
 drivers/usb/host/dwc_otg/dwc_otg_hcd.c       | 8 ++++----
 drivers/usb/host/dwc_otg/dwc_otg_hcd_linux.c | 2 +-
 4 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/drivers/usb/host/dwc_otg/dwc_otg_driver.c b/drivers/usb/host/dwc_otg/dwc_otg_driver.c
index e945900c503c..c4077fdbe8db 100644
--- a/drivers/usb/host/dwc_otg/dwc_otg_driver.c
+++ b/drivers/usb/host/dwc_otg/dwc_otg_driver.c
@@ -837,8 +837,8 @@ static int dwc_otg_driver_probe(
 		retval = -ENOMEM;
 		goto fail;
 	}
-	dev_dbg(&_dev->dev, "base=0x%08x\n",
-                (unsigned)dwc_otg_device->os_dep.base);
+	dev_dbg(&_dev->dev, "base=0x%px\n",
+                dwc_otg_device->os_dep.base);
 #endif
 
 	/*
diff --git a/drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c b/drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c
index 2e644e4e3691..a39748ab16a0 100644
--- a/drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c
+++ b/drivers/usb/host/dwc_otg/dwc_otg_fiq_fsm.c
@@ -301,7 +301,7 @@ static int notrace fiq_iso_out_advance(struct fiq_state *st, int num_channels, i
 		last = 1;
 
 	/* New DMA address - address of bounce buffer referred to in index */
-	hcdma.d32 = (uint32_t) &blob->channel[n].index[i].buf[0];
+	hcdma.d32 = (uint32_t)(uintptr_t)blob->channel[n].index[i].buf;
 	//hcdma.d32 = FIQ_READ(st->dwc_regs_base + HC_START + (HC_OFFSET * n) + HC_DMA);
 	//hcdma.d32 += st->channel[n].dma_info.slot_len[i];
 	fiq_print(FIQDBG_INT, st, "LAST: %01d ", last);
@@ -1347,7 +1347,7 @@ void notrace dwc_otg_fiq_fsm(struct fiq_state *state, int num_channels)
 	/* We got an interrupt, didn't handle it. */
 	if (kick_irq) {
 		state->mphi_int_count++;
-		FIQ_WRITE(state->mphi_regs.outdda, (int) state->dummy_send);
+		FIQ_WRITE(state->mphi_regs.outdda, (int)(uintptr_t)state->dummy_send);
 		FIQ_WRITE(state->mphi_regs.outddb, (1<<29));
 
 	}
@@ -1408,7 +1408,7 @@ void notrace dwc_otg_fiq_nop(struct fiq_state *state)
 		FIQ_WRITE(state->dwc_regs_base + GINTMSK, gintmsk.d32);
 		/* Force a clear before another dummy send */
 		FIQ_WRITE(state->mphi_regs.intstat, (1<<29));
-		FIQ_WRITE(state->mphi_regs.outdda, (int) state->dummy_send);
+		FIQ_WRITE(state->mphi_regs.outdda, (int)(uintptr_t)state->dummy_send);
 		FIQ_WRITE(state->mphi_regs.outddb, (1<<29));
 
 	}
diff --git a/drivers/usb/host/dwc_otg/dwc_otg_hcd.c b/drivers/usb/host/dwc_otg/dwc_otg_hcd.c
index e59747cee7ab..1963f1a83d0e 100644
--- a/drivers/usb/host/dwc_otg/dwc_otg_hcd.c
+++ b/drivers/usb/host/dwc_otg/dwc_otg_hcd.c
@@ -1041,8 +1041,8 @@ int dwc_otg_hcd_init(dwc_otg_hcd_t * hcd, dwc_otg_core_if_t * core_if)
 		 * moderately readable array casts.
 		 */
 		hcd->fiq_dmab = DWC_DMA_ALLOC(dev, (sizeof(struct fiq_dma_channel) * num_channels), &hcd->fiq_state->dma_base);
-		DWC_WARN("FIQ DMA bounce buffers: virt = 0x%08x dma = 0x%08x len=%d",
-				(unsigned int)hcd->fiq_dmab, (unsigned int)hcd->fiq_state->dma_base,
+		DWC_WARN("FIQ DMA bounce buffers: virt = %px dma = %pad len=%zu",
+				hcd->fiq_dmab, &hcd->fiq_state->dma_base,
 				sizeof(struct fiq_dma_channel) * num_channels);
 
 		DWC_MEMSET(hcd->fiq_dmab, 0x6b, 9024);
@@ -1524,7 +1524,7 @@ int fiq_fsm_setup_periodic_dma(dwc_otg_hcd_t *hcd, struct fiq_channel_state *st,
 		 * state depending on transaction progress.
 		 */
 		blob = (struct fiq_dma_blob *) hcd->fiq_state->dma_base;
-		st->hcdma_copy.d32 = (uint32_t) &blob->channel[hc->hc_num].index[0].buf[0];
+		st->hcdma_copy.d32 = (uint32_t)(uintptr_t)blob->channel[hc->hc_num].index[0].buf;
 		/* Calculate the max number of CSPLITS such that the FIQ can time out
 		 * a transaction if it fails.
 		 */
@@ -1573,7 +1573,7 @@ int fiq_fsm_setup_periodic_dma(dwc_otg_hcd_t *hcd, struct fiq_channel_state *st,
 			ptr = qtd->urb->buf + frame_desc->offset;
 			/* Point the HC at the DMA address of the bounce buffers */
 			blob = (struct fiq_dma_blob *) hcd->fiq_state->dma_base;
-			st->hcdma_copy.d32 = (uint32_t) &blob->channel[hc->hc_num].index[0].buf[0];
+			st->hcdma_copy.d32 = (uint32_t)(uintptr_t)blob->channel[hc->hc_num].index[0].buf;
 
 			/* fixup xfersize to the actual packet size */
 			st->hctsiz_copy.b.pid = 0;
diff --git a/drivers/usb/host/dwc_otg/dwc_otg_hcd_linux.c b/drivers/usb/host/dwc_otg/dwc_otg_hcd_linux.c
index 1bb34eca60ff..3f352b831e19 100644
--- a/drivers/usb/host/dwc_otg/dwc_otg_hcd_linux.c
+++ b/drivers/usb/host/dwc_otg/dwc_otg_hcd_linux.c
@@ -483,7 +483,7 @@ static void hcd_init_fiq(void *cookie)
 	dwc_otg_hcd->fiq_state->mphi_regs.outddb  = otg_dev->os_dep.mphi_base + 0x2c;
 	dwc_otg_hcd->fiq_state->mphi_regs.intstat = otg_dev->os_dep.mphi_base + 0x50;
 	dwc_otg_hcd->fiq_state->dwc_regs_base = otg_dev->os_dep.base;
-	DWC_WARN("MPHI regs_base at 0x%08x", (int)dwc_otg_hcd->fiq_state->mphi_regs.base);
+	DWC_WARN("MPHI regs_base at %px", dwc_otg_hcd->fiq_state->mphi_regs.base);
 	//Enable mphi peripheral
 	writel((1<<31),dwc_otg_hcd->fiq_state->mphi_regs.ctrl);
 #ifdef DEBUG
-- 
2.26.1

