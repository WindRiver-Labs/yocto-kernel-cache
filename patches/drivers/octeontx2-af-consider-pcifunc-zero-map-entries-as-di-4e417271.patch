From f2cd74e3467bb9b82badfacafb59b57755e4a653 Mon Sep 17 00:00:00 2001
From: Nithin Dabilpuram <ndabilpuram@marvell.com>
Date: Wed, 14 Apr 2021 17:09:47 +0530
Subject: [PATCH 1529/1921] octeontx2-af: consider pcifunc zero map entries as
 disabled

While counting LF's allocated for a pcifunc, consider the fact
that pcifunc 0 means LF is not attached and not that LF is attached
to AF. Without this change, resource policy check fails always
as while counting LF's attached to PF of LBK VF, current code counts
even disabled LF's because LBK VF's PF pcifunc is 0.

This patch also fixes buffer overflow while printing debugfs
string.

Change-Id: I8477e4e452d8b7a282cbf1eb5c6dfea86b261d49
Signed-off-by: Nithin Dabilpuram <ndabilpuram@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/51634
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/rvu_debugfs.c | 13 ++++++++++++-
 .../ethernet/marvell/octeontx2/af/rvu_validation.c  |  3 ++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
index e2879b205b26..6189ccf967b3 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
@@ -287,6 +287,8 @@ static ssize_t rvu_dbg_rsrc_attach_status(struct file *filp,
 			}
 
 			for (index = 0; index < BLK_COUNT; index++) {
+				int lfs_off;
+
 				block = rvu->hw->block[index];
 				if (!strlen(block.name))
 					continue;
@@ -296,7 +298,16 @@ static ssize_t rvu_dbg_rsrc_attach_status(struct file *filp,
 					if (block.fn_map[lf] != pcifunc)
 						continue;
 					flag = 1;
-					len += sprintf(&lfs[len], "%d,", lf);
+					lfs_off = scnprintf(&lfs[len],
+							    lf_str_size - len,
+							    "%d,", lf);
+					if (lfs_off <= 0) {
+						len = len > 1 ? len : 1;
+						lfs[len - 1] = '!';
+						len++;
+						break;
+					}
+					len += lfs_off;
 				}
 
 				if (flag && len)
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
index 7406503e584b..e126b6f5af71 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
@@ -201,7 +201,8 @@ static int rvu_blk_count_rsrc(struct rvu_block *block, u16 pcifunc, u8 rshift)
 	int count = 0, lf;
 
 	for (lf = 0; lf < block->lf.max; lf++)
-		if ((block->fn_map[lf] >> rshift) == (pcifunc >> rshift))
+		if ((block->fn_map[lf] >> rshift) == (pcifunc >> rshift) &&
+		    block->fn_map[lf] != 0)
 			count++;
 
 	return count;
-- 
2.31.1

