From fb9d86de9f68dde6f5d9101b3ff26da10ce1f63e Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveenm@marvell.com>
Date: Wed, 2 Jun 2021 12:40:36 +0530
Subject: [PATCH 21/23] octeontx2-bphy-netdev: don't process a packet when psw
 indicates error

commit 4873b1e74e50734aabc172392561b74043ea8ca7 from
git@git.assembla.com:cavium/WindRiver.linux.git

Don't process a packet when psw indicates error.

Change-Id: Id385a6f723eaca5c9ee8142a5296b11b11135fff
Signed-off-by: Naveen Mamindlapalli <naveenm@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/53665
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 .../marvell/octeontx2/bphy/otx2_rfoe.c        | 25 +++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
index 44a933e74c15..f1d6a19bda32 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
@@ -476,6 +476,19 @@ static void otx2_rfoe_process_rx_pkt(struct otx2_rfoe_ndev_priv *priv,
 #endif
 	if (pkt_type != PACKET_TYPE_ECPRI) {
 		psw0 = (struct rfoe_psw0_s *)buf_ptr;
+		if (psw0->pkt_err_sts || psw0->dma_error) {
+			net_warn_ratelimited("%s: psw0 pkt_err_sts = 0x%x, dma_err=0x%x\n",
+					     priv->netdev->name,
+					     psw0->pkt_err_sts,
+					     psw0->dma_error);
+			return;
+		}
+		/* check that the psw type is correct: */
+		if (unlikely(psw0->pswt == ECPRI_TYPE)) {
+			net_warn_ratelimited("%s: pswt is eCPRI for pkt_type = %d\n",
+					     priv->netdev->name, pkt_type);
+			return;
+		}
 		lmac_id = psw0->lmac_id;
 		jdt_iova_addr = (u64)psw0->jd_ptr;
 		psw1 = (struct rfoe_psw1_s *)(buf_ptr + 16);
@@ -483,6 +496,18 @@ static void otx2_rfoe_process_rx_pkt(struct otx2_rfoe_ndev_priv *priv,
 			tstamp = psw1->ptp_timestamp;
 	} else {
 		ecpri_psw0 = (struct rfoe_ecpri_psw0_s *)buf_ptr;
+		if (ecpri_psw0->err_sts & 0x1F) {
+			net_warn_ratelimited("%s: ecpri_psw0 err_sts = 0x%x\n",
+					     priv->netdev->name,
+					     ecpri_psw0->err_sts);
+			return;
+		}
+		/* check that the psw type is correct: */
+		if (unlikely(ecpri_psw0->pswt != ECPRI_TYPE)) {
+			net_warn_ratelimited("%s: pswt is not eCPRI for pkt_type = %d\n",
+					     priv->netdev->name, pkt_type);
+			return;
+		}
 		lmac_id = ecpri_psw0->src_id & 0x3;
 		jdt_iova_addr = (u64)ecpri_psw0->jd_ptr;
 		ecpri_psw1 = (struct rfoe_ecpri_psw1_s *)(buf_ptr + 16);
-- 
2.31.1

