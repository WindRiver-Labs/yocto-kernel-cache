From 07170a56ce15b65ae296a0ea79a3740c57dfe789 Mon Sep 17 00:00:00 2001
From: Hariprasad Kelam <hkelam@marvell.com>
Date: Sun, 7 Mar 2021 18:13:51 +0530
Subject: [PATCH 1303/1921] octeontx2-af: Backport ethtool link modes

Update current link modes such that cgx modes chip-to-chip(c2c)
maps with SR_Full_BIT and chip-to-module(c2m) maps with LR_Full_BIT.

Change-Id: Ic016fef1d2ba943a679fa7e52b8cdf5cc21434f9
Signed-off-by: Hariprasad Kelam <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/47351
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/cgx.c    | 18 +++++++++---------
 .../marvell/octeontx2/nic/otx2_ethtool.c       | 16 ++++++++--------
 2 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
index 67da88e129de..a2424c7ecc91 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
@@ -1066,10 +1066,10 @@ static void otx2_map_ethtool_link_modes(u64 bitmask,
 	case  ETHTOOL_LINK_MODE_10000baseT_Full_BIT:
 		set_mod_args(args, 1000, 0, 1, BIT_ULL(CGX_MODE_QSGMII));
 		break;
-	case  ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT:
+	case  ETHTOOL_LINK_MODE_10000baseSR_Full_BIT:
 		set_mod_args(args, 10000, 0, 0, BIT_ULL(CGX_MODE_10G_C2C));
 		break;
-	case  ETHTOOL_LINK_MODE_10000baseR_FEC_BIT:
+	case  ETHTOOL_LINK_MODE_10000baseLR_Full_BIT:
 		set_mod_args(args, 10000, 0, 0, BIT_ULL(CGX_MODE_10G_C2M));
 		break;
 	case  ETHTOOL_LINK_MODE_10000baseKR_Full_BIT:
@@ -1078,10 +1078,10 @@ static void otx2_map_ethtool_link_modes(u64 bitmask,
 	case  ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT:
 		set_mod_args(args, 20000, 0, 0, BIT_ULL(CGX_MODE_20G_C2C));
 		break;
-	case  ETHTOOL_LINK_MODE_10000baseCR_Full_BIT:
+	case  ETHTOOL_LINK_MODE_25000baseSR_Full_BIT:
 		set_mod_args(args, 25000, 0, 0, BIT_ULL(CGX_MODE_25G_C2C));
 		break;
-	case  ETHTOOL_LINK_MODE_25000baseSR_Full_BIT:
+	case  ETHTOOL_LINK_MODE_10000baseR_FEC_BIT:
 		set_mod_args(args, 25000, 0, 0, BIT_ULL(CGX_MODE_25G_C2M));
 		break;
 	case  ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT:
@@ -1105,22 +1105,22 @@ static void otx2_map_ethtool_link_modes(u64 bitmask,
 	case  ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT:
 		set_mod_args(args, 40000, 0, 1, BIT_ULL(CGX_MODE_40G_KR4));
 		break;
-	case  ETHTOOL_LINK_MODE_10000baseSR_Full_BIT:
+	case  ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT:
 		set_mod_args(args, 40000, 0, 0, BIT_ULL(CGX_MODE_40GAUI_C2C));
 		break;
-	case  ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT:
+	case  ETHTOOL_LINK_MODE_50000baseSR_Full_BIT:
 		set_mod_args(args, 50000, 0, 0, BIT_ULL(CGX_MODE_50G_C2C));
 		break;
 	case  ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT:
 		set_mod_args(args, 50000, 0, 0, BIT_ULL(CGX_MODE_50G_4_C2C));
 		break;
-	case  ETHTOOL_LINK_MODE_10000baseLR_Full_BIT:
+	case  ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT:
 		set_mod_args(args, 50000, 0, 0, BIT_ULL(CGX_MODE_50G_C2M));
 		break;
-	case  ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT:
+	case  ETHTOOL_LINK_MODE_50000baseCR_Full_BIT:
 		set_mod_args(args, 50000, 0, 1, BIT_ULL(CGX_MODE_50G_CR));
 		break;
-	case  ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT:
+	case  ETHTOOL_LINK_MODE_50000baseKR_Full_BIT:
 		set_mod_args(args, 50000, 0, 1, BIT_ULL(CGX_MODE_50G_KR));
 		break;
 	case  ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT:
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index c19fb9ee6c27..9522c18f11bf 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -1113,12 +1113,12 @@ static void otx2_get_link_mode_info(u64 link_mode_bmap,
 		0, /*SGMII Mode */
 		ETHTOOL_LINK_MODE_1000baseX_Full_BIT,
 		ETHTOOL_LINK_MODE_10000baseT_Full_BIT,
-		ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT,
-		ETHTOOL_LINK_MODE_10000baseR_FEC_BIT,
+		ETHTOOL_LINK_MODE_10000baseSR_Full_BIT,
+		ETHTOOL_LINK_MODE_10000baseLR_Full_BIT,
 		ETHTOOL_LINK_MODE_10000baseKR_Full_BIT,
 		ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT,
-		ETHTOOL_LINK_MODE_10000baseCR_Full_BIT,
 		ETHTOOL_LINK_MODE_25000baseSR_Full_BIT,
+		ETHTOOL_LINK_MODE_10000baseR_FEC_BIT,
 		ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT,
 		ETHTOOL_LINK_MODE_25000baseCR_Full_BIT,
 		ETHTOOL_LINK_MODE_25000baseKR_Full_BIT,
@@ -1126,12 +1126,12 @@ static void otx2_get_link_mode_info(u64 link_mode_bmap,
 		ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT,
 		ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT,
 		ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT,
-		ETHTOOL_LINK_MODE_10000baseSR_Full_BIT,
-		ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT,
-		ETHTOOL_LINK_MODE_10000baseLR_Full_BIT,
+		ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT,
+		ETHTOOL_LINK_MODE_50000baseSR_Full_BIT,
 		ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT,
-		ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT,
-		ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT,
+		ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT,
+		ETHTOOL_LINK_MODE_50000baseCR_Full_BIT,
+		ETHTOOL_LINK_MODE_50000baseKR_Full_BIT,
 		ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT,
 		ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT,
 		ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT,
-- 
2.31.1

