From d0c36a2b915eb78b98cc793106a0946c8b5e887f Mon Sep 17 00:00:00 2001
From: Srinivas Neeli <srinivas.neeli@xilinx.com>
Date: Mon, 10 Aug 2020 15:54:29 +0530
Subject: [PATCH 1504/1852] watchdog: of_xilinx_wdt: Use a proper variable to
 handle overflow

commit 212c4d10eb82d8fed17e1f503b6353804863154d from
https://github.com/Xilinx/linux-xlnx.git

Multiplication of clk_get_rate() output and wdd->timeout results
more than 32-bit value, so assigning the output of clk_get_rate in u64
variable.

Addresses-Coverity:"OVERFLOW_BEFORE_WIDEN"
Signed-off-by: Srinivas Neeli <srinivas.neeli@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/watchdog/of_xilinx_wdt.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/watchdog/of_xilinx_wdt.c b/drivers/watchdog/of_xilinx_wdt.c
index 81ef064ce046..8dd6712d3c64 100644
--- a/drivers/watchdog/of_xilinx_wdt.c
+++ b/drivers/watchdog/of_xilinx_wdt.c
@@ -181,10 +181,12 @@ static int xilinx_wwdt_start(struct watchdog_device *wdd)
 	struct xwdt_device *xdev = watchdog_get_drvdata(wdd);
 	struct watchdog_device *xilinx_wdt_wdd = &xdev->xilinx_wdt_wdd;
 
-	unsigned long clock_f = clk_get_rate(xdev->clk);
+	count = clk_get_rate(xdev->clk);
+	if (!count)
+		return -EINVAL;
 
 	/* Calculate timeout count */
-	count = wdd->timeout * clock_f;
+	count *= wdd->timeout;
 	ret  = clk_enable(xdev->clk);
 	if (ret) {
 		dev_err(wdd->parent, "Failed to enable clock\n");
-- 
2.31.1

