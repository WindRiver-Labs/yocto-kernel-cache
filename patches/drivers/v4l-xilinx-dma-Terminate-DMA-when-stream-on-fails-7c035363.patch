From ba95ca7f5cda63a6b7dd644b046d8b4378084741 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Fri, 30 Jun 2017 16:39:08 -0700
Subject: [PATCH 0212/1851] v4l: xilinx: dma: Terminate DMA when stream on
 fails

commit 49694639ec0218d79650e93007125ab0220abd01 from
https://github.com/Xilinx/linux-xlnx.git

The dma descriptors are submitted in the buffer queue operation,
and if the following stream-on fails, the queued descriptor would
still remain in the dmaengine queue, while pointing to the invalid
resource (released video buffer). Upon next stream on request,
the stale descriptor gets scheduled first and then generate
an exception from invalid resource pointer. This patch makes sure
that there's no remaining resource on stream-on error by calling
dmaengine_terminate_all().

Reported-by: Jeffrey Mouroux <jmouroux@xilinx.com>
Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index 35a1e6b01175..098c69bfe5c7 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -432,6 +432,7 @@ static int xvip_dma_start_streaming(struct vb2_queue *vq, unsigned int count)
 	return 0;
 
 error_stop:
+	dmaengine_terminate_all(dma->dma);
 	media_pipeline_stop(&dma->video.entity);
 
 error:
-- 
2.31.1

