From 46418f686c922ef516576e4d130d8f2beeb62a4c Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Tue, 7 May 2019 21:28:38 -0700
Subject: [PATCH 171/767] gpio: thunderx: Adjust the msi base for cn96xx gpio

commit d8bd7fa4cd7af949e9b4427b84a5dc8b72670eb7 from
git@git.assembla.com:cavium/WindRiver.linux.git

The number of cores is discovered via GPIO_CONST[PP], so formally
INTR_PIN should be at the values GPIO_CONST[PP]..GPIO_CONST[PP]+
GPIO_CONST[GPIOS]*2-1. GPIO_INT_VEC_E's INTR_PIN(0) value starts
at 0x036, leaving a gap from the last used MC_INTR_PP(23). SW
Driver compatibility expects it to start at 0x018, corresponding
to no gap. The patch addresses the inconsistency and adds
adjustment to calculate appropriate msi base for gpio for cn96xx.


Change-Id: Idb53e11ed71b76bf5c33ce7a963f992621c74cb3
Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Signed-off-by: Sujeet Kumar Baranwal <sbaranwal@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8765
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/gpio/gpio-thunderx.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/gpio/gpio-thunderx.c b/drivers/gpio/gpio-thunderx.c
index f3140eecc8ca..e573e469d429 100644
--- a/drivers/gpio/gpio-thunderx.c
+++ b/drivers/gpio/gpio-thunderx.c
@@ -26,7 +26,6 @@
 #include <linux/fs.h>
 #endif
 
-
 #define GPIO_RX_DAT	0x0
 #define GPIO_TX_SET	0x8
 #define GPIO_TX_CLR	0x10
@@ -48,6 +47,8 @@
 #define  GPIO_INTR_ENA_W1C		BIT(2)
 #define  GPIO_INTR_ENA_W1S		BIT(3)
 #define GPIO_2ND_BANK	0x1400
+#define MRVL_OCTEONTX2_96XX_PARTNUM	0xB2
+
 
 #define GLITCH_FILTER_400NS ((4u << GPIO_BIT_CFG_FIL_SEL_SHIFT) | \
 			     (9u << GPIO_BIT_CFG_FIL_CNT_SHIFT))
@@ -705,7 +706,13 @@ static int thunderx_gpio_probe(struct pci_dev *pdev,
 		u64 c = readq(txgpio->register_base + GPIO_CONST);
 
 		ngpio = c & GPIO_CONST_GPIOS_MASK;
-		txgpio->base_msi = (c >> 8) & 0xff;
+
+		/* Workaround for all passes of T96xx */
+		if (((pdev->subsystem_device >> 8) & 0xFF) == MRVL_OCTEONTX2_96XX_PARTNUM) {
+			txgpio->base_msi = 0x36;
+		} else {
+			txgpio->base_msi = (c >> 8) & 0xff;
+		}
 	}
 
 	txgpio->msix_entries = devm_kcalloc(dev,
-- 
2.31.1

