From 46cbb636ccb94b5f2fa3a654a9c3c318a7c2bb71 Mon Sep 17 00:00:00 2001
From: Satha Rao <skoteshwar@marvell.com>
Date: Mon, 11 Jan 2021 11:51:40 -0500
Subject: [PATCH 3/4] octeontx2-af: Fix channel verification and sdp vf mcam

commit 9703117273e60fbbc3dd4dfb274bfd424de83b32 from
git@git.assembla.com:cavium/WindRiver.linux.git

npc_mcam_verify_channel function is considering only LBK and NIX
channel verification. Exteneded this api to consider SDP channels.

Each SDP VF needs its own promiscuous entry in mcam table to support
different use cases. Reserved mcam for SDP VF is used to install
promiscuous entry, so unicast entry is not allowed for SDP VF.

Change-Id: Ic2e6670ff88e791f7c4668662726d7e0822eff62
Signed-off-by: Satha Rao <skoteshwar@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/43398
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/49815
Reviewed-by: Radha Chintakuntla <radhac@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <SunilKovvuri.Goutham@cavium.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/common.h  | 1 +
 drivers/net/ethernet/marvell/octeontx2/af/rvu.h     | 1 +
 drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c | 7 +++++--
 3 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/common.h b/drivers/net/ethernet/marvell/octeontx2/af/common.h
index b89b6fdeb947..770fa4bf00d7 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/common.h
@@ -194,6 +194,7 @@ enum nix_scheduler {
 #define NIX_CHAN_LBK_CHX(a, b)		(0 + 0x100 * (a) + (b))
 #define NIX_CHAN_SDP_CH_START          (0x700ull)
 #define NIX_CHAN_SDP_CHX(a)            (NIX_CHAN_SDP_CH_START + (a))
+#define NIX_CHAN_SDP_NUM_CHANS		256
 
 /* NIX LSO format indices.
  * As of now TSO is the only one using, so statically assigning indices.
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
index e1045bd82db6..be7c815f54c2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
@@ -755,6 +755,7 @@ int rvu_tim_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot);
 
 /* SDP APIs */
 int rvu_sdp_init(struct rvu *rvu);
+bool is_sdp_pfvf(u16 pcifunc);
 bool is_sdp_pf(u16 pcifunc);
 bool is_sdp_vf(u16 pcifunc);
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c
index b4af5f1440ac..cf452314f8bc 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c
@@ -96,6 +96,9 @@ int npc_mcam_verify_channel(struct rvu *rvu, u16 pcifunc, u8 intf, u16 channel)
 		if (end < 0)
 			return -EINVAL;
 		end = NIX_CHAN_LBK_CHX(max_lbkid, end);
+	} else if (is_sdp_pfvf(pcifunc)) {
+		base = NIX_CHAN_SDP_CH_START;
+		end = NIX_CHAN_SDP_CHX((NIX_CHAN_SDP_NUM_CHANS - 1));
 	} else {
 		rvu_get_cgx_lmac_id(rvu->pf2cgxlmac_map[pf], &cgx_id, &lmac_id);
 		base = NIX_CHAN_CGX_LMAC_CHX(cgx_id, lmac_id, 0x0);
@@ -599,8 +602,8 @@ void rvu_npc_install_ucast_entry(struct rvu *rvu, u16 pcifunc,
 	struct nix_rx_action action;
 	int blkaddr, index;
 
-	/* AF's VFs work in promiscuous mode */
-	if (is_afvf(pcifunc))
+	/* AF's and SDP VFs work in promiscuous mode */
+	if (is_afvf(pcifunc) || is_sdp_vf(pcifunc))
 		return;
 
 	blkaddr = rvu_get_blkaddr(rvu, BLKTYPE_NPC, 0);
-- 
2.31.1

