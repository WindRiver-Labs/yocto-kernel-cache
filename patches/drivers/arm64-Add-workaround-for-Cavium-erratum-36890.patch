From c6ee22cb718a19513e935ee80ce40a8dfb7d7602 Mon Sep 17 00:00:00 2001
From: Andrew Pinski <apinski@marvell.com>
Date: Tue, 21 May 2019 17:46:41 +0000
Subject: [PATCH 367/767] arm64: Add workaround for Cavium erratum 36890

commit 8aa39af7f78e6283cb4e82cd08f506fa5aa5a132 from
git@git.assembla.com:cavium/WindRiver.linux.git

On all ThunderX T88 passes, all OcteonTX T81 and T83 passes,
and some OcteonTX2 passes (some T96xx and F95XX), the "dc zva"
instruction has issues where old data would be in the cache in
some cases.  This happens when there are two different VAs
pointing to the same PA; even with different asids.

Change-Id: Ife8671af41822c4d6d6e4e7a24d005ee29d9dd17
Signed-off-by: Andrew Pinski <apinski@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/17082
Reviewed-by: Linu Cherian <lcherian@marvell.com>
Tested-by: Linu Cherian <lcherian@marvell.com>
[Kevin: Replace the config_sctlr_el1() with sysreg_clear_set(), and
use ERRATA_MIDR_RANGE_LIST macro to fix the duplicate entry warning
for capability.]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 arch/arm64/Kconfig               | 12 ++++++++++
 arch/arm64/include/asm/cpucaps.h |  3 ++-
 arch/arm64/kernel/cpu_errata.c   | 41 ++++++++++++++++++++++++++++++++
 3 files changed, 55 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index 0bac1e830464..153fdf69d3f5 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -597,6 +597,18 @@ config CAVIUM_ERRATUM_30115
 
 	  If unsure, say Y.
 
+config CAVIUM_ERRATUM_36890
+	bool "Cavium erratum 36890"
+	default y
+	help
+	  Enable workaround for erratum 36890.  On all ThunderX T88xx and
+	  OcteonTX1 T81/T83 and some OcteonTX2 chips, the "dc zva" instruction
+	  does not work all the time.  This happens when there are two VAs
+	  that match up with one PA; including when the two VAs match but have
+	  different asids.  The fix is to disable "dc zva" in userspace.
+
+	  If unsure, say Y.
+
 config QCOM_FALKOR_ERRATUM_1003
 	bool "Falkor E1003: Incorrect translation due to ASID change"
 	default y
diff --git a/arch/arm64/include/asm/cpucaps.h b/arch/arm64/include/asm/cpucaps.h
index f19fe4b9acc4..f78f309da11f 100644
--- a/arch/arm64/include/asm/cpucaps.h
+++ b/arch/arm64/include/asm/cpucaps.h
@@ -52,7 +52,8 @@
 #define ARM64_HAS_IRQ_PRIO_MASKING		42
 #define ARM64_HAS_DCPODP			43
 #define ARM64_WORKAROUND_1463225		44
+#define ARM64_WORKAROUND_CAVIUM_36890		45
 
-#define ARM64_NCAPS				45
+#define ARM64_NCAPS				46
 
 #endif /* __ASM_CPUCAPS_H */
diff --git a/arch/arm64/kernel/cpu_errata.c b/arch/arm64/kernel/cpu_errata.c
index ca11ff7bf55e..1c99122c413e 100644
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@ -97,6 +97,23 @@ cpu_enable_trap_ctr_access(const struct arm64_cpu_capabilities *__unused)
 		sysreg_clear_set(sctlr_el1, SCTLR_EL1_UCT, 0);
 }
 
+#ifdef CONFIG_CAVIUM_ERRATUM_36890
+static void
+cpu_enable_trap_zva_access(const struct arm64_cpu_capabilities *__unused)
+{
+	/*
+	 * Clear SCTLR_EL2.DZE or SCTLR_EL1.DZE depending
+	 * on if we are in EL2.
+	 */
+	if (!is_kernel_in_hyp_mode())
+		sysreg_clear_set(sctlr_el1, SCTLR_EL1_DZE, 0);
+	else
+		sysreg_clear_set(sctlr_el2, SCTLR_EL1_DZE, 0);
+
+	return;
+}
+#endif
+
 atomic_t arm64_el2_vector_last_slot = ATOMIC_INIT(-1);
 
 #include <asm/mmu_context.h>
@@ -658,6 +675,22 @@ static const struct midr_range cavium_erratum_30115_cpus[] = {
 };
 #endif
 
+#ifdef CONFIG_CAVIUM_ERRATUM_36890
+static const struct midr_range cavium_erratum_36890_cpus[] = {
+	/* Cavium ThunderX, T88 all passes */
+	MIDR_ALL_VERSIONS(MIDR_THUNDERX),
+	/* Cavium ThunderX, T81 all passes */
+	MIDR_ALL_VERSIONS(MIDR_THUNDERX_81XX),
+	/* Cavium ThunderX, T83 all passes */
+	MIDR_ALL_VERSIONS(MIDR_THUNDERX_83XX),
+	/* Marvell OcteonTX 2, 96xx pass A0, A1, and B0 */
+	MIDR_RANGE(MIDR_MRVL_OCTEONTX2_96XX, 0, 0, 1, 0),
+	/* Marvell OcteonTX 2, 95 pass A0/A1 */
+	MIDR_RANGE(MIDR_MRVL_OCTEONTX2_95XX, 0, 0, 0, 1),
+	{},
+};
+#endif
+
 #ifdef CONFIG_QCOM_FALKOR_ERRATUM_1003
 static const struct arm64_cpu_capabilities qcom_erratum_1003_list[] = {
 	{
@@ -768,6 +801,14 @@ const struct arm64_cpu_capabilities arm64_errata[] = {
 		.capability = ARM64_WORKAROUND_CAVIUM_30115,
 		ERRATA_MIDR_RANGE_LIST(cavium_erratum_30115_cpus),
 	},
+#endif
+#ifdef CONFIG_CAVIUM_ERRATUM_36890
+	{
+		.desc = "Cavium erratum 36890",
+		.capability = ARM64_WORKAROUND_CAVIUM_36890,
+		ERRATA_MIDR_RANGE_LIST(cavium_erratum_36890_cpus),
+		.cpu_enable = cpu_enable_trap_zva_access,
+	},
 #endif
 	{
 		.desc = "Mismatched cache type (CTR_EL0)",
-- 
2.31.1

