From 385697b89ba6ebf35ffae682181cc67cc3d40320 Mon Sep 17 00:00:00 2001
From: Suresh Gupta <suresh.gupta@xilinx.com>
Date: Fri, 5 Oct 2018 19:43:06 +0530
Subject: [PATCH 0459/1852] v4l: xilinx-multi-scaler: Check any channel is
 still running in streamoff

commit f6e25f4a6aaccf061269a12416962bf7040134aa from
https://github.com/Xilinx/linux-xlnx.git

If an application queued buffer while the device is busy in processing
of previous buffer, the application will not call device_run () again.
And at this point if some application running higher channel stops stream,
the device_run () return as there is no buffere for stopping channel.
In this situation the first channel does not get chance to call
device_run() again and will wait for infinite time.

This patch checks if there is/are any continues channels are still running
and if running, start the process again.

Signed-off-by: Suresh Gupta <suresh.gupta@xilinx.com>
Reviewed-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-multi-scaler.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/xilinx/xilinx-multi-scaler.c b/drivers/media/platform/xilinx/xilinx-multi-scaler.c
index c7ff99f76747..751f6b147071 100644
--- a/drivers/media/platform/xilinx/xilinx-multi-scaler.c
+++ b/drivers/media/platform/xilinx/xilinx-multi-scaler.c
@@ -1065,8 +1065,13 @@ static int xm2msc_streamoff(struct file *file, void *fh,
 			    enum v4l2_buf_type type)
 {
 	struct xm2msc_chan_ctx *chan_ctx = fh_to_chanctx(fh);
+	int ret;
+
+	ret = v4l2_m2m_streamoff(file, chan_ctx->m2m_ctx, type);
 
-	return v4l2_m2m_streamoff(file, chan_ctx->m2m_ctx, type);
+	/* Check if any channel is still running */
+	xm2msc_device_run(chan_ctx);
+	return ret;
 }
 
 static int xm2msc_qbuf(struct file *file, void *fh, struct v4l2_buffer *buf)
-- 
2.31.1

