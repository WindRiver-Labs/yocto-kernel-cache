From ccb392407f18329314ff1c9f2436b6f8d819268d Mon Sep 17 00:00:00 2001
From: hariprasad <hkelam@marvell.com>
Date: Tue, 15 Oct 2019 15:41:28 +0530
Subject: [PATCH 0296/1921] octeontx2-af : handle rvu pfvf mac address

Update rvu pfvf mac address in below cases
        * when fwdata has invalid mac
        * pf/vf request change in mac address

Change-Id: I7d9da0e5aa810175c1aa6438c787e9f525c66942
Signed-off-by: hariprasad <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/17411
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu.c   |  4 ++++
 .../net/ethernet/marvell/octeontx2/af/rvu_nix.c   |  6 +++++-
 .../ethernet/marvell/octeontx2/af/rvu_npc_fs.c    | 15 ++++++++++++---
 3 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index 4cfb4bed5bee..2af28094b6f6 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -702,6 +702,8 @@ static void rvu_setup_pfvf_macaddress(struct rvu *rvu)
 			mac = &rvu->fwdata->pf_macs[pf];
 			if (*mac)
 				u64_to_ether_addr(*mac, pfvf->mac_addr);
+			else
+				eth_random_addr(pfvf->mac_addr);
 		} else {
 			eth_random_addr(pfvf->mac_addr);
 		}
@@ -714,6 +716,8 @@ static void rvu_setup_pfvf_macaddress(struct rvu *rvu)
 				mac = &rvu->fwdata->vf_macs[hwvf];
 				if (*mac)
 					u64_to_ether_addr(*mac, pfvf->mac_addr);
+				else
+					eth_random_addr(pfvf->mac_addr);
 			} else {
 				eth_random_addr(pfvf->mac_addr);
 			}
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
index ed5d42491d4b..e6f7c66277f6 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
@@ -2882,6 +2882,7 @@ int rvu_mbox_handler_nix_set_mac_addr(struct rvu *rvu,
 				      struct nix_set_mac_addr *req,
 				      struct msg_rsp *rsp)
 {
+	bool from_vf = !!(req->hdr.pcifunc & RVU_PFVF_FUNC_MASK);
 	struct rvu_hwinfo *hw = rvu->hw;
 	u16 pcifunc = req->hdr.pcifunc;
 	struct rvu_pfvf *pfvf;
@@ -2896,7 +2897,10 @@ int rvu_mbox_handler_nix_set_mac_addr(struct rvu *rvu,
 	if (nixlf < 0)
 		return NIX_AF_ERR_AF_LF_INVALID;
 
-	ether_addr_copy(pfvf->mac_addr, req->mac_addr);
+	/* Skip updating mac addr if request is from vf */
+	if (!from_vf)
+		ether_addr_copy(pfvf->mac_addr, req->mac_addr);
+
 
 	rvu_npc_install_ucast_entry(rvu, pcifunc, nixlf,
 				    pfvf->rx_chan_base, req->mac_addr);
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc_fs.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc_fs.c
index ce0eab703e54..6d5b5d8de477 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc_fs.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc_fs.c
@@ -856,7 +856,8 @@ static void npc_update_tx_entry(struct rvu *rvu, struct rvu_pfvf *pfvf,
 static int npc_install_flow(struct rvu *rvu, int blkaddr, u16 target,
 			       int nixlf, struct rvu_pfvf *pfvf,
 			       struct npc_install_flow_req *req,
-			       struct npc_install_flow_rsp *rsp, bool enable)
+			       struct npc_install_flow_rsp *rsp, bool enable,
+			       bool pf_set_vfs_mac)
 {
 	u64 features, installed_features, missing_features = 0;
 	struct rvu_npc_mcam_rule *def_rule = pfvf->def_rule;
@@ -975,6 +976,10 @@ static int npc_install_flow(struct rvu *rvu, int blkaddr, u16 target,
 	if (req->default_rule)
 		pfvf->def_rule = rule;
 
+	/* VF's MAC address is being changed via PF  */
+	if (pf_set_vfs_mac)
+		ether_addr_copy(pfvf->mac_addr, req->packet.dmac);
+
 	return 0;
 }
 
@@ -985,6 +990,7 @@ int rvu_mbox_handler_npc_install_flow(struct rvu *rvu,
 	bool from_vf = !!(req->hdr.pcifunc & RVU_PFVF_FUNC_MASK);
 	int blkaddr, nixlf, err;
 	struct rvu_pfvf *pfvf;
+	bool pf_set_vfs_mac = false;
 	bool enable = true;
 	u16 target;
 
@@ -1006,8 +1012,11 @@ int rvu_mbox_handler_npc_install_flow(struct rvu *rvu,
 	if (!req->hdr.pcifunc)
 		target = req->vf;
 	/* PF installing for its VF */
-	else if (!from_vf && req->vf)
+	else if (!from_vf && req->vf) {
 		target = (req->hdr.pcifunc & ~RVU_PFVF_FUNC_MASK) | req->vf;
+		pf_set_vfs_mac = req->default_rule &&
+				(req->features & BIT_ULL(NPC_DMAC));
+	}
 	/* msg received from PF/VF */
 	else
 		target = req->hdr.pcifunc;
@@ -1045,7 +1054,7 @@ int rvu_mbox_handler_npc_install_flow(struct rvu *rvu,
 		return -EINVAL;
 
 	return npc_install_flow(rvu, blkaddr, target, nixlf, pfvf,
-				req, rsp, enable);
+				req, rsp, enable, pf_set_vfs_mac);
 }
 
 static int npc_delete_flow(struct rvu *rvu, u16 entry, u16 pcifunc)
-- 
2.31.1

