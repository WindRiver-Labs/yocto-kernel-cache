From 06c598c87cd7f94fee02457fa6390af132398a77 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Thu, 20 Sep 2018 11:14:49 +0530
Subject: [PATCH 0414/1852] drm: xlnx: sdi: Add support for DS2 payload in 3GA
 mode

commit ae6271f2c1ad1f6e1a82e71576e73c3516dc30c4 from
https://github.com/Xilinx/linux-xlnx.git

In 3GA mode, the data stream 3 (DS3) payload was being sent on the DS2
(chroma) stream. This is recitified in the IP by adding a bit which
allows DS2 payload to be sent instead of DS3 payload.
To enable this a new dt property "use_ds2_3ga" is added. This property
is created only when xlxn,tx-insert-c-str-st352 is present in dt. The
bit is set only when the dt property is present, "en_st352_c" drm
property is set and new "use_ds2_3ga" drm property is set.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_sdi.c | 23 +++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_sdi.c b/drivers/gpu/drm/xlnx/xlnx_sdi.c
index e374456f3c7a..5e7ca613811a 100644
--- a/drivers/gpu/drm/xlnx/xlnx_sdi.c
+++ b/drivers/gpu/drm/xlnx/xlnx_sdi.c
@@ -54,6 +54,7 @@
 #define XSDI_TX_CTRL_ST352_F2_EN_SHIFT	15
 #define XSDI_TX_CTRL_420_BIT		BIT(21)
 #define XSDI_TX_CTRL_INS_ST352_CHROMA	BIT(23)
+#define XSDI_TX_CTRL_USE_DS2_3GA	BIT(24)
 
 /* TX_ST352_LINE register masks */
 #define XSDI_TX_ST352_LINE_MASK		GENMASK(10, 0)
@@ -166,6 +167,8 @@ enum payload_line_2 {
  * @out_fmt_prop_val: configurable media bus format value
  * @en_st352_c_prop: configurable ST352 payload on Chroma stream parameter
  * @en_st352_c_val: configurable ST352 payload on Chroma parameter value
+ * @use_ds2_3ga_prop: Use DS2 instead of DS3 in 3GA mode parameter
+ * @use_ds2_3ga_val: Use DS2 instead of DS3 in 3GA mode parameter value
  * @video_mode: current display mode
  */
 struct xlnx_sdi {
@@ -199,6 +202,8 @@ struct xlnx_sdi {
 	u32 out_fmt_prop_val;
 	struct drm_property *en_st352_c_prop;
 	bool en_st352_c_val;
+	struct drm_property *use_ds2_3ga_prop;
+	bool use_ds2_3ga_val;
 	struct drm_display_mode video_mode;
 };
 
@@ -494,6 +499,8 @@ xlnx_sdi_atomic_set_property(struct drm_connector *connector,
 		sdi->out_fmt_prop_val = (unsigned int)val;
 	else if (property == sdi->en_st352_c_prop)
 		sdi->en_st352_c_val = !!val;
+	else if (property == sdi->use_ds2_3ga_prop)
+		sdi->use_ds2_3ga_val = !!val;
 	else
 		return -EINVAL;
 	return 0;
@@ -526,6 +533,8 @@ xlnx_sdi_atomic_get_property(struct drm_connector *connector,
 		*val = sdi->out_fmt_prop_val;
 	else if (property == sdi->en_st352_c_prop)
 		*val =  sdi->en_st352_c_val;
+	else if (property == sdi->use_ds2_3ga_prop)
+		*val =  sdi->use_ds2_3ga_val;
 	else
 		return -EINVAL;
 
@@ -645,9 +654,12 @@ xlnx_sdi_drm_connector_create_property(struct drm_connector *base_connector)
 						"in_fmt", 0, 16384);
 	sdi->out_fmt = drm_property_create_range(dev, 0,
 						 "out_fmt", 0, 16384);
-	if (sdi->enable_st352_chroma)
+	if (sdi->enable_st352_chroma) {
 		sdi->en_st352_c_prop = drm_property_create_bool(dev, 1,
 								"en_st352_c");
+		sdi->use_ds2_3ga_prop = drm_property_create_bool(dev, 1,
+								 "use_ds2_3ga");
+	}
 }
 
 /**
@@ -691,6 +703,9 @@ xlnx_sdi_drm_connector_attach_property(struct drm_connector *base_connector)
 
 	if (sdi->en_st352_c_prop)
 		drm_object_attach_property(obj, sdi->en_st352_c_prop, 0);
+
+	if (sdi->use_ds2_3ga_prop)
+		drm_object_attach_property(obj, sdi->use_ds2_3ga_prop, 0);
 }
 
 static int xlnx_sdi_create_connector(struct drm_encoder *encoder)
@@ -792,9 +807,13 @@ static void xlnx_sdi_setup(struct xlnx_sdi *sdi)
 	if (sdi->enable_anc_data)
 		reg |= XSDI_TX_CTRL_USE_ANC_IN;
 
-	if (sdi->enable_st352_chroma && sdi->en_st352_c_val)
+	if (sdi->enable_st352_chroma && sdi->en_st352_c_val) {
 		reg |= XSDI_TX_CTRL_INS_ST352_CHROMA;
 
+		if (sdi->use_ds2_3ga_val)
+			reg |= XSDI_TX_CTRL_USE_DS2_3GA;
+	}
+
 	xlnx_sdi_writel(sdi->base, XSDI_TX_MDL_CTRL, reg);
 	xlnx_sdi_writel(sdi->base, XSDI_TX_IER_STAT, XSDI_IER_EN_MASK);
 	xlnx_sdi_writel(sdi->base, XSDI_TX_GLBL_IER, 1);
-- 
2.31.1

