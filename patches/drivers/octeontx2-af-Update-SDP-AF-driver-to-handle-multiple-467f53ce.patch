From 92d12fe8e285f63a413b0344b0efce2fdbb13ae7 Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Tue, 9 Jun 2020 18:19:37 -0700
Subject: [PATCH 0814/1921] octeontx2-af: Update SDP AF driver to handle
 multiple SDP blocks

Some chips like 98xx has more than one SDP block. This patch handles
that case. Right now MAX_SDP is put to 2.

Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Change-Id: I47dd8fbdf7fed4d2b0ceed1d145b507f92fbc211
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/29735
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/37812
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../ethernet/marvell/octeontx2/af/rvu_sdp.c   | 41 +++++++++++--------
 1 file changed, 24 insertions(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c
index 071e69d7da15..f2d318f3641d 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c
@@ -14,13 +14,26 @@
 /* SDP PF device id */
 #define PCI_DEVID_OTX2_SDP_PF   0xA0F6
 
+/* Maximum SDP blocks in a chip */
+#define MAX_SDP		2
+
 /* SDP PF number */
-static int sdp_pf_num = -1;
+static int sdp_pf_num[MAX_SDP] = {-1, -1};
 
 bool is_sdp_pf(u16 pcifunc)
 {
-	if (rvu_get_pf(pcifunc) != sdp_pf_num)
+	u16 pf = rvu_get_pf(pcifunc);
+	u32 found = 0, i = 0;
+
+	while (i < MAX_SDP) {
+		if (pf == sdp_pf_num[i])
+			found = 1;
+		i++;
+	}
+
+	if (!found)
 		return false;
+
 	if (pcifunc & RVU_PFVF_FUNC_MASK)
 		return false;
 
@@ -29,22 +42,16 @@ bool is_sdp_pf(u16 pcifunc)
 
 int rvu_sdp_init(struct rvu *rvu)
 {
-	struct pci_dev *pdev;
-	int i;
-
-	for (i = 0; i < rvu->hw->total_pfs; i++) {
-		pdev = pci_get_domain_bus_and_slot(
-				pci_domain_nr(rvu->pdev->bus), i + 1, 0);
-		if (!pdev)
-			continue;
-
-		if (pdev->device == PCI_DEVID_OTX2_SDP_PF) {
-			sdp_pf_num = i;
-			put_device(&pdev->dev);
-			break;
-		}
-
+	struct pci_dev *pdev = NULL;
+	u32 i = 0;
+
+	while ((i < MAX_SDP) && (pdev = pci_get_device(PCI_VENDOR_ID_CAVIUM,
+						       PCI_DEVID_OTX2_SDP_PF,
+						       pdev)) != NULL) {
+		/* The RVU PF number is one less than bus number */
+		sdp_pf_num[i] = pdev->bus->number - 1;
 		put_device(&pdev->dev);
+		i++;
 	}
 
 	return 0;
-- 
2.31.1

