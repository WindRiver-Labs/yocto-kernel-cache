From 8b9f09c42f7e2c395bd1784ed37de838fa098159 Mon Sep 17 00:00:00 2001
From: Bhaskara Budiredla <bbudiredla@marvell.com>
Date: Tue, 25 May 2021 12:30:01 +0530
Subject: [PATCH 1575/1921] mmc: sdhci: Add sdhci polling method to support
 kmsg panic/oops write

Sdhci specific MMC polling and cleanup methods are defined
to enable writing of panic and oops logs to sdhci devices.

Change-Id: I5f6152701e72fdb429312b6d35a3b0adafbf22b5
Signed-off-by: Bhaskara Budiredla <bbudiredla@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/52784
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/mmc/host/sdhci.c | 57 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)

diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 88c7267f6e74..f58ce06f1a7e 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -2640,6 +2640,59 @@ static void sdhci_card_event(struct mmc_host *mmc)
 	spin_unlock_irqrestore(&host->lock, flags);
 }
 
+#ifdef CONFIG_MMC_PSTORE
+static int sdhci_req_completion_poll(struct mmc_host *host,
+					unsigned long msecs)
+{
+	struct sdhci_host *sdhci_host = mmc_priv(host);
+	u32 int_mask;
+
+	while (msecs) {
+		int_mask = sdhci_readl(sdhci_host, SDHCI_INT_STATUS);
+		if (int_mask & SDHCI_INT_DATA_END)
+			return 0;
+		else if (int_mask & SDHCI_INT_ADMA_ERROR)
+			return -EIO;
+		else if ((int_mask & SDHCI_INT_DATA_CRC) ||
+			 (int_mask & SDHCI_INT_DATA_END_BIT))
+			return -EILSEQ;
+		else if (int_mask & SDHCI_INT_DATA_TIMEOUT)
+			return -ETIMEDOUT;
+
+		mdelay(1);
+		msecs--;
+	}
+
+	return -ETIMEDOUT;
+}
+
+static void sdhci_req_cleanup_pending(struct mmc_host *host)
+{
+	struct sdhci_host *sdhci_host = mmc_priv(host);
+	u32 int_mask;
+
+	/* Clear pending DMA interrupts */
+	int_mask = sdhci_readl(sdhci_host, SDHCI_INT_STATUS);
+	int_mask &= ~(SDHCI_INT_CARD_INSERT | SDHCI_INT_CARD_REMOVE |
+				SDHCI_INT_CMD_MASK | SDHCI_INT_DATA_MASK |
+				SDHCI_INT_ERROR | SDHCI_INT_BUS_POWER |
+				SDHCI_INT_RETUNE | SDHCI_INT_CARD_INT);
+	if (int_mask)
+		sdhci_writel(sdhci_host, int_mask, SDHCI_INT_STATUS);
+
+	/* Clear fired or pending DMA requests */
+	if (sdhci_host->cmd || sdhci_host->data_cmd || sdhci_host->data) {
+		if (sdhci_host->cmd)
+			__sdhci_finish_mrq(sdhci_host, sdhci_host->cmd->mrq);
+		if (sdhci_host->data_cmd)
+			__sdhci_finish_mrq(sdhci_host,
+					   sdhci_host->data_cmd->mrq);
+		if (sdhci_host->data)
+			__sdhci_finish_mrq(sdhci_host, sdhci_host->data->mrq);
+	}
+}
+#endif
+
 static const struct mmc_host_ops sdhci_ops = {
 	.request	= sdhci_request,
 	.post_req	= sdhci_post_req,
@@ -2655,6 +2708,10 @@ static const struct mmc_host_ops sdhci_ops = {
 	.execute_tuning			= sdhci_execute_tuning,
 	.card_event			= sdhci_card_event,
 	.card_busy	= sdhci_card_busy,
+#ifdef CONFIG_MMC_PSTORE
+	.req_cleanup_pending = sdhci_req_cleanup_pending,
+	.req_completion_poll = sdhci_req_completion_poll,
+#endif
 };
 
 /*****************************************************************************\
-- 
2.31.1

