From 444d3f3762500e9aa524b73b7f2498cee3033512 Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Mon, 17 Feb 2020 07:52:03 -0700
Subject: [PATCH 1218/1851] mtd: spi-nor: Fix kernel crash in case of spi flash

commit 63fd90df6d2f259021f8b6f579bc9e46f499cec6 from
https://github.com/Xilinx/linux-xlnx.git

This patch fixes kernel crash by sending commands to flash memory
via spi_mem_ops interface.

Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index f911b2ff84ba..92f13c8c636a 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -5352,8 +5352,18 @@ int spi_nor_scan(struct spi_nor *nor, const char *name,
 		write_sr(nor, 0);
 		if (info->flags & SST_GLOBAL_PROT_UNLK) {
 			write_enable(nor);
-			/* Unlock global write protection bits */
-			nor->write_reg(nor, GLOBAL_BLKPROT_UNLK, NULL, 0);
+			if (nor->spimem) {
+				struct spi_mem_op op =
+					SPI_MEM_OP(SPI_MEM_OP_CMD(GLOBAL_BLKPROT_UNLK, 1),
+						   SPI_MEM_OP_NO_ADDR,
+						   SPI_MEM_OP_NO_DUMMY,
+						   SPI_MEM_OP_NO_DATA);
+
+				spi_mem_exec_op(nor->spimem, &op);
+			} else {
+				/* Unlock global write protection bits */
+				nor->write_reg(nor, GLOBAL_BLKPROT_UNLK, NULL, 0);
+			}
 		}
 		spi_nor_wait_till_ready(nor);
 	}
-- 
2.31.1

