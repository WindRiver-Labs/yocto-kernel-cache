From 42d2a5dd9931f49d576f17aa88155444b6fe8bad Mon Sep 17 00:00:00 2001
From: Suresh Gupta <suresh.gupta@xilinx.com>
Date: Fri, 5 Oct 2018 19:43:00 +0530
Subject: [PATCH 0453/1852] v4l: xilinx-multi-scaler: Allow device run for
 single channel

commit 8d7187f5558273d39674a3a8176a7846924e8c03 from
https://github.com/Xilinx/linux-xlnx.git

Start the processing of channels whose stream_on called.
This removes the dependency that scaling starts
only after all channel calls the stream_on.

Signed-off-by: Suresh Gupta <suresh.gupta@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Reviewed-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../platform/xilinx/xilinx-multi-scaler.c     | 21 -------------------
 1 file changed, 21 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-multi-scaler.c b/drivers/media/platform/xilinx/xilinx-multi-scaler.c
index e899f5f1ee1a..16aa06799148 100644
--- a/drivers/media/platform/xilinx/xilinx-multi-scaler.c
+++ b/drivers/media/platform/xilinx/xilinx-multi-scaler.c
@@ -660,17 +660,6 @@ xm2msc_chk_chan_stream(struct xm2msc_chan_ctx *ctx, int type)
 	return ret;
 }
 
-static int xm2msc_chk_all_chan_stream(struct xm2m_msc_dev *xm2msc)
-{
-	int ret;
-
-	mutex_lock(&xm2msc->mutex);
-	ret = (ffz(xm2msc->out_streamed_chan) >= xm2msc->max_chan) &&
-		(ffz(xm2msc->cap_streamed_chan) >= xm2msc->max_chan);
-	mutex_unlock(&xm2msc->mutex);
-	return ret;
-}
-
 static void xm2msc_set_fmt(struct xm2m_msc_dev *xm2msc, u32 index)
 {
 	xm2msc_setbit(index, &xm2msc->supported_fmt);
@@ -693,10 +682,6 @@ static void xm2msc_reset(struct xm2m_msc_dev *xm2msc)
 static int xm2msc_job_ready(void *priv)
 {
 	struct xm2msc_chan_ctx *chan_ctx = priv;
-	struct xm2m_msc_dev *xm2msc = chan_ctx->xm2msc_dev;
-
-	if (!xm2msc_chk_all_chan_stream(xm2msc))
-		return 0;
 
 	if ((v4l2_m2m_num_src_bufs_ready(chan_ctx->m2m_ctx) > 0) &&
 	    (v4l2_m2m_num_dst_bufs_ready(chan_ctx->m2m_ctx) > 0))
@@ -801,12 +786,6 @@ static void xm2msc_device_run(void *priv)
 	void __iomem *base = xm2msc->regs;
 	int ret;
 
-	if (!xm2msc_chk_all_chan_stream(xm2msc)) {
-		xm2msc_pr_status(xm2msc, __func__);
-		dev_dbg(xm2msc->dev, "not all Channels yet started\n");
-		return;
-	}
-
 	/* TODO program to number of opened chan*/
 	xm2msc_writereg(base + XM2MSC_NUM_OUTS, xm2msc->max_chan);
 
-- 
2.31.1

