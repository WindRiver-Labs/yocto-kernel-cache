From 73e35449b8805ea25cbc4e078c2b939c5b76c573 Mon Sep 17 00:00:00 2001
From: Rajan Vaja <rajan.vaja@xilinx.com>
Date: Thu, 4 Jun 2020 04:53:23 -0700
Subject: [PATCH 1368/1851] soc: xilinx: Call InitFinalize from
 late_initcall_sync instead of probe

commit 3f9b97df4b5c7774c7b7e0aec1ab9f5e979dff39 from
https://github.com/Xilinx/linux-xlnx.git

Initially all devices are in power up state. Firmware expect that
processor should call InitFinalize API once it have requested devices
which are required so that it can turn off all unused devices and
save power. From Linux, PM driver calls InitFinalize to inform the
firmware that it can power down the unused devices. Upon
InitFinalize() call firmware power downs all unused devices.

There are chances that PM driver is probed along with or before other
device drivers. So in that case some of the devices may not be
requested from firmware which is done by genpd driver. Due to that
firmware will consider those devices as unused and firmware will power
down those devices. Later when any device driver is probed, genpd
driver will ask firmware to power up that device using request node
API. So for those devices, power transition will be like on->off->on
which creates unnecessary power glitch to those devices.

To avoid such unnecessary power transitions and as ideal behavior
InitFinalize should be called after all drivers are probed. So call
InitFinalize from late_initcall_sync.

Signed-off-by: Rajan Vaja <rajan.vaja@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/soc/xilinx/zynqmp_power.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/xilinx/zynqmp_power.c b/drivers/soc/xilinx/zynqmp_power.c
index d572d2e4c62d..7f9fcaf9dd5b 100644
--- a/drivers/soc/xilinx/zynqmp_power.c
+++ b/drivers/soc/xilinx/zynqmp_power.c
@@ -185,10 +185,9 @@ static int zynqmp_pm_probe(struct platform_device *pdev)
 	if (IS_ERR(eemi_ops))
 		return PTR_ERR(eemi_ops);
 
-	if (!eemi_ops->get_api_version || !eemi_ops->init_finalize)
+	if (!eemi_ops->get_api_version)
 		return -ENXIO;
 
-	eemi_ops->init_finalize();
 	eemi_ops->get_api_version(&pm_api_version);
 
 	/* Check PM API version number */
@@ -256,6 +255,16 @@ static int zynqmp_pm_remove(struct platform_device *pdev)
 	return 0;
 }
 
+static int __init do_init_finalize(void)
+{
+	if (!eemi_ops || IS_ERR(eemi_ops) || !eemi_ops->init_finalize)
+		return -ENXIO;
+
+	return eemi_ops->init_finalize();
+}
+
+late_initcall_sync(do_init_finalize);
+
 static const struct of_device_id pm_of_match[] = {
 	{ .compatible = "xlnx,zynqmp-power", },
 	{ /* end of table */ },
-- 
2.31.1

