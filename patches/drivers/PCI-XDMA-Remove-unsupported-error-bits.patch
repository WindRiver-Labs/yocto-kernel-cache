From 813d9c6c52044808a8fab543e8da5de9e5758428 Mon Sep 17 00:00:00 2001
From: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
Date: Mon, 13 Jan 2020 15:26:43 +0530
Subject: [PATCH 0847/1852] PCI: XDMA: Remove unsupported error bits

commit 2faa13359f000b7283b3464c925269275f4c511b from
https://github.com/Xilinx/linux-xlnx.git

PCIe XDMA as Root Port doesn't support few error bits.
Removing unsupported error bits in Interrupt Mask
register.

Signed-off-by: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: not-upstreamable
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/pci/controller/pcie-xdma-pl.c | 14 +-------------
 1 file changed, 1 insertion(+), 13 deletions(-)

diff --git a/drivers/pci/controller/pcie-xdma-pl.c b/drivers/pci/controller/pcie-xdma-pl.c
index f8830304dde9..8060c0d00fc5 100644
--- a/drivers/pci/controller/pcie-xdma-pl.c
+++ b/drivers/pci/controller/pcie-xdma-pl.c
@@ -45,8 +45,6 @@
 
 /* Interrupt registers definitions */
 #define XILINX_PCIE_INTR_LINK_DOWN	BIT(0)
-#define XILINX_PCIE_INTR_ECRC_ERR	BIT(1)
-#define XILINX_PCIE_INTR_STR_ERR	BIT(2)
 #define XILINX_PCIE_INTR_HOT_RESET	BIT(3)
 #define XILINX_PCIE_INTR_CFG_TIMEOUT	BIT(8)
 #define XILINX_PCIE_INTR_CORRECTABLE	BIT(9)
@@ -62,8 +60,7 @@
 #define XILINX_PCIE_INTR_SLV_ILLBUR	BIT(25)
 #define XILINX_PCIE_INTR_MST_DECERR	BIT(26)
 #define XILINX_PCIE_INTR_MST_SLVERR	BIT(27)
-#define XILINX_PCIE_INTR_MST_ERRP	BIT(28)
-#define XILINX_PCIE_IMR_ALL_MASK	0x1FF30FED
+#define XILINX_PCIE_IMR_ALL_MASK	0x0FF30FE9
 #define XILINX_PCIE_IDR_ALL_MASK	0xFFFFFFFF
 #define XILINX_PCIE_IDRN_MASK           GENMASK(19, 16)
 
@@ -348,12 +345,6 @@ static irqreturn_t xilinx_pcie_intr_handler(int irq, void *data)
 	if (status & XILINX_PCIE_INTR_LINK_DOWN)
 		dev_warn(port->dev, "Link Down\n");
 
-	if (status & XILINX_PCIE_INTR_ECRC_ERR)
-		dev_warn(port->dev, "ECRC failed\n");
-
-	if (status & XILINX_PCIE_INTR_STR_ERR)
-		dev_warn(port->dev, "Streaming error\n");
-
 	if (status & XILINX_PCIE_INTR_HOT_RESET)
 		dev_info(port->dev, "Hot reset\n");
 
@@ -437,9 +428,6 @@ static irqreturn_t xilinx_pcie_intr_handler(int irq, void *data)
 	if (status & XILINX_PCIE_INTR_MST_SLVERR)
 		dev_warn(port->dev, "Master slave error\n");
 
-	if (status & XILINX_PCIE_INTR_MST_ERRP)
-		dev_warn(port->dev, "Master error poison\n");
-
 error:
 	/* Clear the Interrupt Decode register */
 	pcie_write(port, status, XILINX_PCIE_REG_IDR);
-- 
2.31.1

