From 8431fbeb05970f48af90018feca78d0761bec84a Mon Sep 17 00:00:00 2001
From: Suneel Garapati <sgarapati@marvell.com>
Date: Fri, 31 Jan 2020 16:42:11 -0800
Subject: [PATCH 0439/1921] spi: octeontx2: Add fix for hw issue

Use MPIX_RCVD register for receive path in x1 uni-directional mode
except T96 A0 silicon revision. Helps to access slave devices
like TPM.

Change-Id: I9815a86c52febe826362bd0bc43e1ccd787459c4
Signed-off-by: Suneel Garapati <sgarapati@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/24404
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/26934
Reviewed-by: Suneel Garapati <sgarapati@caviumnetworks.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/spi/spi-octeontx2.c | 19 ++++++++++++++++---
 drivers/spi/spi-octeontx2.h |  2 ++
 2 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/drivers/spi/spi-octeontx2.c b/drivers/spi/spi-octeontx2.c
index c98b5c287b8b..ce97d4326f68 100644
--- a/drivers/spi/spi-octeontx2.c
+++ b/drivers/spi/spi-octeontx2.c
@@ -57,6 +57,7 @@ static int octeontx2_spi_do_transfer(struct octeontx2_spi *p,
 	int len, rem;
 	int i;
 	void __iomem *wbuf_ptr = p->register_base + OCTEONTX2_SPI_WBUF(p);
+	void __iomem *rx_ptr = wbuf_ptr;
 
 	mode = spi->mode;
 	cpha = mode & SPI_CPHA;
@@ -117,6 +118,15 @@ static int octeontx2_spi_do_transfer(struct octeontx2_spi *p,
 	rx_buf = xfer->rx_buf;
 	len = xfer->len;
 
+	/* Except T96 A0, use rcvdx register for x1 uni-directional mode */
+	if (!mpi_cfg.s.iomode) {
+		if (!midr_is_cpu_model_range(read_cpuid_id(),
+					     MIDR_MRVL_OCTEONTX2_96XX,
+					     MIDR_CPU_VAR_REV(0, 0),
+					     MIDR_CPU_VAR_REV(0, 0)))
+			rx_ptr = p->register_base + OCTEONTX2_SPI_RCVD(p);
+	}
+
 	while (len > OCTEONTX2_SPI_MAX_BYTES) {
 		if (tx_buf) {
 			/* 8 bytes per iteration */
@@ -138,7 +148,9 @@ static int octeontx2_spi_do_transfer(struct octeontx2_spi *p,
 		if (rx_buf) {
 			/* 8 bytes per iteration */
 			for (i = 0; i < OCTEONTX2_SPI_MAX_BYTES / 8; i++) {
-				u64 v = readq(wbuf_ptr + (8 * i));
+				u64 v;
+
+				v = readq(rx_ptr + (8 * i));
 				*(uint64_t *)rx_buf = v;
 				rx_buf += 8;
 			}
@@ -179,13 +191,13 @@ static int octeontx2_spi_do_transfer(struct octeontx2_spi *p,
 		u64 v;
 		/* 8 bytes per iteration */
 		for (i = 0; i < len / 8; i++) {
-			v = readq(wbuf_ptr + (8 * i));
+			v = readq(rx_ptr + (8 * i));
 			*(uint64_t *)rx_buf = v;
 			rx_buf += 8;
 		}
 		/* remaining <8 bytes */
 		if (rem) {
-			v = readq(wbuf_ptr + (8 * i));
+			v = readq(rx_ptr + (8 * i));
 			memcpy(rx_buf, &v, rem);
 			rx_buf += rem;
 		}
@@ -268,6 +280,7 @@ static int octeontx2_spi_probe(struct pci_dev *pdev,
 	p->regs.status = 0x1008;
 	p->regs.xmit = 0x1018;
 	p->regs.wbuf = 0x1800;
+	p->regs.rcvd = 0x2800;
 	p->last_cfg = 0x0;
 
 	/* FIXME: need a proper clocksource object for SCLK */
diff --git a/drivers/spi/spi-octeontx2.h b/drivers/spi/spi-octeontx2.h
index 84dfae89a8f8..86b7337b697b 100644
--- a/drivers/spi/spi-octeontx2.h
+++ b/drivers/spi/spi-octeontx2.h
@@ -17,6 +17,7 @@ struct octeontx2_spi_regs {
 	int status;
 	int xmit;
 	int wbuf;
+	int rcvd;
 };
 
 struct octeontx2_spi {
@@ -32,6 +33,7 @@ struct octeontx2_spi {
 #define OCTEONTX2_SPI_STS(x)	((x)->regs.status)
 #define OCTEONTX2_SPI_XMIT(x)	((x)->regs.xmit)
 #define OCTEONTX2_SPI_WBUF(x)	((x)->regs.wbuf)
+#define OCTEONTX2_SPI_RCVD(x)	((x)->regs.rcvd)
 
 int octeontx2_spi_transfer_one_message(struct spi_master *master,
 				       struct spi_message *msg);
-- 
2.31.1

