From 860082f034840e4e6a4648d6822cbc5218dd92fe Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep <sbhatta@marvell.com>
Date: Wed, 30 Dec 2020 19:07:17 +0530
Subject: [PATCH 1059/1921] octeontx2-af: Disable packet TX and RX

The NPC RX miss stats counter increases continuously
though no interface is brought up by user. This
is because firmware enables packet I/O when
LINK_BRING_UP command is sent to it by kernel.
Hence disable packet I/O in kernel after link
up sequence. There is still a chance of some
packets reaching NPC because of the time gap
between firmware enabling packet I/O and AF
driver disabling it. This patch also disables
packet I/O during driver init for a sane
state. When interfaces are brought up then
packet I/O is enabled eventually.

Change-Id: I816c3e4631ba1bc62541ab94547a374cf936bf52
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/43359
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/cgx.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
index a651c61b7b77..54b229782d3e 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
@@ -1525,6 +1525,10 @@ static void cgx_lmac_linkup_work(struct work_struct *work)
 		if (err)
 			dev_info(dev, "cgx port %d:%d Link up command failed\n",
 				 cgx->cgx_id, i);
+		/* Disable packet I/O in CGX in case firmware enabled it
+		 * after Link up sequence.
+		 */
+		cgx_lmac_rx_tx_enable(cgx, i, false);
 	}
 }
 
@@ -1696,6 +1700,8 @@ static int cgx_lmac_init(struct cgx *cgx)
 		cgx->lmac_idmap[lmac->lmac_id] = lmac;
 		cgx_lmac_pause_frm_config(cgx, lmac->lmac_id, true);
 		set_bit(lmac->lmac_id, &cgx->lmac_bmap);
+		/* Disable packet I/O for a sane state */
+		cgx_lmac_rx_tx_enable(cgx, lmac->lmac_id, false);
 	}
 
 	return cgx_lmac_verify_fwi_version(cgx);
-- 
2.31.1

