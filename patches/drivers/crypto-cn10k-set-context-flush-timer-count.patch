From cbe8ad461bd7c868c3eaf167f83471dec42cd607 Mon Sep 17 00:00:00 2001
From: Srujana Challa <schalla@marvell.com>
Date: Fri, 23 Oct 2020 13:44:01 +0530
Subject: [PATCH 0928/1921] crypto: cn10k: set context flush timer count

Set interval to flush dirty data for next CTX cache entry. Upon
expiration of the interval timer, the dirty data for one CTX
entry is written back to LLC/DRAM and the position is advanced to
point to the next CTX entry.

Signed-off-by: Srujana Challa <schalla@marvell.com>
Change-Id: Ie35a0fbb47b41ed128121c204365ff81e4767ecb
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/38476
Reviewed-by: Narayana Prasad Raju Athreya <pathreya@marvell.com>
Reviewed-by: Anoob Joseph <anoobj@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/crypto/marvell/cn10k/cn10k_cptpf_ucode.c    | 13 +++++++++++++
 drivers/net/ethernet/marvell/octeontx2/af/rvu_cpt.c |  1 +
 drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h |  1 +
 3 files changed, 15 insertions(+)

diff --git a/drivers/crypto/marvell/cn10k/cn10k_cptpf_ucode.c b/drivers/crypto/marvell/cn10k/cn10k_cptpf_ucode.c
index d3ff2fe167d7..8e2f699e3b2e 100644
--- a/drivers/crypto/marvell/cn10k/cn10k_cptpf_ucode.c
+++ b/drivers/crypto/marvell/cn10k/cn10k_cptpf_ucode.c
@@ -20,6 +20,12 @@
 #define LOADFVC_MAJOR_OP 0x01
 #define LOADFVC_MINOR_OP 0x08
 
+/*
+ * Interval to flush dirty data for next CTX entry. The interval is measured
+ * in increments of 10ns(interval time = CTX_FLUSH_TIMER_COUNT * 10ns).
+ */
+#define CTX_FLUSH_TIMER_CNT 0xFFFFFF
+
 /* tar header as defined in POSIX 1003.1-1990. */
 struct tar_hdr_t {
 	char name[100];
@@ -2012,6 +2018,13 @@ int cn10k_cpt_try_create_default_eng_grps(struct pci_dev *pdev,
 	 */
 	cn10k_cpt_write_af_reg(pdev, CPT_AF_CTL,
 			       CN10K_CPT_ALL_ENG_GRPS_MASK << 3);
+	/*
+	 * Set interval to periodically flush dirty data for the next
+	 * CTX cache entry. Set the interval count to maximum supported
+	 * value.
+	 */
+	cn10k_cpt_write_af_reg(pdev, CPT_AF_CTX_FLUSH_TIMER,
+			       CTX_FLUSH_TIMER_CNT);
 	print_dbg_info(&pdev->dev, eng_grps);
 release_tar_arch:
 	release_tar_archive(tar_arch);
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cpt.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cpt.c
index 9ccf9d8ea41e..17d8854ad3c3 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cpt.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cpt.c
@@ -487,6 +487,7 @@ int rvu_mbox_handler_cpt_rd_wr_register(struct rvu *rvu,
 		case CPT_AF_PF_FUNC:
 		case CPT_AF_BLK_RST:
 		case CPT_AF_CONSTANTS1:
+		case CPT_AF_CTX_FLUSH_TIMER:
 			if (req->reg_offset & 0xFFF)
 				goto error;
 			break;
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
index d084d6be511e..ecd19ddce473 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
@@ -695,6 +695,7 @@
 #define CPT_AF_RAS_INT_W1S              (0x47028ull)
 #define CPT_AF_RAS_INT_ENA_W1S          (0x47030ull)
 #define CPT_AF_RAS_INT_ENA_W1C          (0x47038ull)
+#define CPT_AF_CTX_FLUSH_TIMER          (0x48000ull)
 
 #define CPT_AF_LF_CTL2_SHIFT		3
 #define CPT_AF_LF_SSO_PF_FUNC_SHIFT	32
-- 
2.31.1

