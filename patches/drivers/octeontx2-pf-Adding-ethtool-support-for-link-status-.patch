From 19ef951e88aa174675dd41658228c25c15f38702 Mon Sep 17 00:00:00 2001
From: Christina Jacob <cjacob@marvell.com>
Date: Mon, 18 Feb 2019 09:47:29 +0530
Subject: [PATCH 119/767] octeontx2-pf: Adding ethtool support for link status
 information.

commit 88352100a6a07a464dd986cedfe3c9a1712b5b8e from
git@git.assembla.com:cavium/WindRiver.linux.git

Adding ethtool support to display link status information for pf
interfaces. Also Displays speed and duplex mode on ifconfig up
of pf interfaces.

Change-Id: Ib6dd901260e61a5a6bda2a2c613e5287c65ee439
Signed-off-by: Christina Jacob <cjacob@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.h        |  1 +
 .../marvell/octeontx2/nic/otx2_ethtool.c       | 18 ++++++++++++++++++
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c   |  6 ++++--
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index abb84ff034d2..0909feb168f2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -158,6 +158,7 @@ struct otx2_nic {
 	u32			cq_ecount_wait;
 	struct work_struct	reset_task;
 	u64			reset_count;
+	struct cgx_link_user_info linfo;
 	u16			rxvlan_entry;
 	bool			rxvlan_alloc;
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index 11ed45187ffa..cb89b25f1440 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -983,6 +983,23 @@ static int otx2_set_rxfh(struct net_device *dev, const u32 *indir,
 	return 0;
 }
 
+static int otx2_get_link_ksettings(struct net_device *netdev,
+				   struct ethtool_link_ksettings *cmd)
+{
+	struct otx2_nic *pfvf = netdev_priv(netdev);
+	bool if_up = netif_running(netdev);
+
+	if (!if_up) {
+		cmd->base.duplex = DUPLEX_UNKNOWN;
+		cmd->base.speed = SPEED_UNKNOWN;
+		return 0;
+	}
+	cmd->base.duplex = pfvf->linfo.full_duplex;
+	cmd->base.speed = pfvf->linfo.speed;
+
+	return 0;
+}
+
 static const struct ethtool_ops otx2_ethtool_ops = {
 	.get_drvinfo		= otx2_get_drvinfo,
 	.get_strings		= otx2_get_strings,
@@ -1000,6 +1017,7 @@ static const struct ethtool_ops otx2_ethtool_ops = {
 	.get_rxfh_indir_size	= otx2_get_rxfh_indir_size,
 	.get_rxfh		= otx2_get_rxfh,
 	.set_rxfh		= otx2_set_rxfh,
+	.get_link_ksettings     = otx2_get_link_ksettings,
 	.get_pauseparam		= otx2_get_pauseparam,
 	.set_pauseparam		= otx2_set_pauseparam,
 };
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index d3f067cde895..7ed3e80714d5 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -126,8 +126,10 @@ int otx2_mbox_up_handler_cgx_link_event(struct otx2_nic *pf,
 	struct cgx_link_user_info *linfo = &msg->link_info;
 	struct net_device *netdev = pf->netdev;
 
-	pr_info("%s NIC Link is %s\n",
-		netdev->name, linfo->link_up ? "UP" : "DOWN");
+	pf->linfo = msg->link_info;
+	pr_info("%s NIC Link is %s %d Mbps %s duplex\n", netdev->name,
+		linfo->link_up ? "UP" : "DOWN", linfo->speed,
+		linfo->full_duplex ? "Full" : "Half");
 	if (linfo->link_up) {
 		netif_carrier_on(netdev);
 		netif_tx_start_all_queues(netdev);
-- 
2.31.1

