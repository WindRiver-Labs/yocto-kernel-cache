From ae95be5fb00c14345947ae6a31acbd19a29bc28b Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <bbhushan2@marvell.com>
Date: Wed, 22 Jan 2020 16:13:16 +0530
Subject: [PATCH 454/767] coresight: Treat ETM4.2 as ETM4.3 on OcteonTx2

commit 60137cfffff49ddbbe8b5762a03f2646267afc9e from
git@git.assembla.com:cavium/WindRiver.linux.git

OcteonTx2 h/w reports ETMv4.2 but it supports Ignore Packet
feature of ETMv4.3, Treat this as ETMv4.3 compatible.

Change-Id: I86d0fdfbb8746705fe015b2386f014dd708eecf1
Signed-off-by: Bharat Bhushan <bbhushan2@marvell.com>
Signed-off-by: Linu Cherian <lcherian@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/22246
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/hwtracing/coresight/coresight-etm4x-sysfs.c | 11 +++++++++++
 drivers/hwtracing/coresight/coresight-etm4x.c       | 13 +++++++++++++
 drivers/hwtracing/coresight/coresight-etm4x.h       |  3 +++
 drivers/hwtracing/coresight/coresight-priv.h        |  4 ++++
 drivers/hwtracing/coresight/coresight-quirks.c      | 10 ++++++++++
 5 files changed, 41 insertions(+)

diff --git a/drivers/hwtracing/coresight/coresight-etm4x-sysfs.c b/drivers/hwtracing/coresight/coresight-etm4x-sysfs.c
index f5fb1e7a9c17..2d74e77f4e85 100644
--- a/drivers/hwtracing/coresight/coresight-etm4x-sysfs.c
+++ b/drivers/hwtracing/coresight/coresight-etm4x-sysfs.c
@@ -2086,6 +2086,17 @@ static u32 etmv4_cross_read(const struct device *dev, u32 offset)
 	 * accessing the ETMv4 trace core registers
 	 */
 	smp_call_function_single(drvdata->cpu, do_smp_cross_read, &reg, 1);
+
+	/*
+	 * OcteonTx2 h/w reports ETMv4.2 but it supports Ignore Packet
+	 * feature of ETMv4.3, Treat this h/w as ETMv4.3 compatible.
+	 */
+	if ((offset == TRCIDR1) &&
+	    (drvdata->etm_options & CSETM_QUIRK_TREAT_ETMv43)) {
+		reg.data &= ~0xF0;
+		reg.data |= 0x30;
+	}
+
 	return reg.data;
 }
 
diff --git a/drivers/hwtracing/coresight/coresight-etm4x.c b/drivers/hwtracing/coresight/coresight-etm4x.c
index af4dfa955f7d..5574cfa54056 100644
--- a/drivers/hwtracing/coresight/coresight-etm4x.c
+++ b/drivers/hwtracing/coresight/coresight-etm4x.c
@@ -621,6 +621,16 @@ static void etm4_init_arch_data(void *info)
 
 	/* base architecture of trace unit */
 	etmidr1 = readl_relaxed(drvdata->base + TRCIDR1);
+
+	/*
+	 * OcteonTx2 h/w reports ETMv4.2 but it supports Ignore Packet
+	 * feature of ETMv4.3, Treat this h/w as ETMv4.3 compatible.
+	 */
+	if (drvdata->etm_options & CSETM_QUIRK_TREAT_ETMv43) {
+		etmidr1 &= ~0xF0;
+		etmidr1 |= 0x30;
+	}
+
 	/*
 	 * TRCARCHMIN, bits[7:4] architecture the minor version number
 	 * TRCARCHMAJ, bits[11:8] architecture major versin number
@@ -1149,6 +1159,9 @@ static int etm4_probe(struct amba_device *adev, const struct amba_id *id)
 	etm4_init_trace_id(drvdata);
 	etm4_set_default(&drvdata->config);
 
+	/* Enable fixes for Silicon issues */
+	drvdata->etm_options = coresight_get_etm_quirks(OCTEONTX_CN9XXX_ETM);
+
 	desc.type = CORESIGHT_DEV_TYPE_SOURCE;
 	desc.subtype.source_subtype = CORESIGHT_DEV_SUBTYPE_SOURCE_PROC;
 	desc.ops = &etm4_cs_ops;
diff --git a/drivers/hwtracing/coresight/coresight-etm4x.h b/drivers/hwtracing/coresight/coresight-etm4x.h
index 52786e9d8926..210118ead59f 100644
--- a/drivers/hwtracing/coresight/coresight-etm4x.h
+++ b/drivers/hwtracing/coresight/coresight-etm4x.h
@@ -191,6 +191,7 @@
 #define ETM_EXLEVEL_NS_HYP		BIT(14)
 #define ETM_EXLEVEL_NS_NA		BIT(15)
 
+
 /**
  * struct etmv4_config - configuration information related to an ETMv4
  * @mode:	Controls various modes supported by this ETM.
@@ -288,6 +289,7 @@ struct etmv4_config {
  * @csdev:      Component vitals needed by the framework.
  * @spinlock:   Only one at a time pls.
  * @mode:	This tracer's mode, i.e sysFS, Perf or disabled.
+ * @etm_options: Bitmask of options to manage ETMv4 Silicon issues
  * @cpu:        The cpu this component is affined to.
  * @arch:       ETM version number.
  * @nr_pe:	The number of processing entity available for tracing.
@@ -344,6 +346,7 @@ struct etmv4_drvdata {
 	struct coresight_device		*csdev;
 	spinlock_t			spinlock;
 	local_t				mode;
+	u32				etm_options;
 	int				cpu;
 	u8				arch;
 	u8				nr_pe;
diff --git a/drivers/hwtracing/coresight/coresight-priv.h b/drivers/hwtracing/coresight/coresight-priv.h
index 374feed83bf7..6a796e739c78 100644
--- a/drivers/hwtracing/coresight/coresight-priv.h
+++ b/drivers/hwtracing/coresight/coresight-priv.h
@@ -70,11 +70,14 @@ extern const u32 barrier_pkt[4];
 
 /* Marvell OcteonTx CN9xxx device */
 #define OCTEONTX_CN9XXX_ETR		0x000cc213
+/* Marvell OcteonTx CN9xxx ETM device */
+#define OCTEONTX_CN9XXX_ETM		0x000cc210
 
 /* Coresight Hardware quirks */
 #define CSETR_QUIRK_BUFFSIZE_8BX	(0x1U << 0) /* 8 byte size multiplier */
 #define CSETR_QUIRK_SECURE_BUFF		(0x1U << 1) /* Trace buffer is Secure */
 #define CSETR_QUIRK_RESET_CTL_REG	(0x1U << 2) /* Reset CTL on reset */
+#define CSETM_QUIRK_TREAT_ETMv43	(0x1U << 5) /* ETMv4.2 as ETMv4.3 */
 
 enum etm_addr_type {
 	ETM_ADDR_TYPE_NONE,
@@ -211,5 +214,6 @@ static inline void *coresight_get_uci_data(const struct amba_id *id)
 
 /* Coresight ETM/ETR hardware quirks */
 u32 coresight_get_etr_quirks(unsigned int id);
+u32 coresight_get_etm_quirks(unsigned int id);
 
 #endif
diff --git a/drivers/hwtracing/coresight/coresight-quirks.c b/drivers/hwtracing/coresight/coresight-quirks.c
index 8087dde8d740..7f7e92eb62c7 100644
--- a/drivers/hwtracing/coresight/coresight-quirks.c
+++ b/drivers/hwtracing/coresight/coresight-quirks.c
@@ -23,3 +23,13 @@ u32 coresight_get_etr_quirks(unsigned int id)
 
 	return options;
 }
+
+u32 coresight_get_etm_quirks(unsigned int id)
+{
+	u32 options = 0; /* reset */
+
+	if (id == OCTEONTX_CN9XXX_ETM)
+		options |= CSETM_QUIRK_TREAT_ETMv43;
+
+	return options;
+}
-- 
2.31.1

