From d395c83c950688724a8dd611818f9f8b5ddcaba4 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Tue, 17 Mar 2020 17:26:19 +0530
Subject: [PATCH 1267/1852] v4l: xilinx: xcsi2rxss: Move DPHY offset to 4K
 instead of 64K

commit 8e1e5a3ea5a17b3df5b9ba72af5f43f3725812cd from
https://github.com/Xilinx/linux-xlnx.git

The DPHY offset has been moved to 4K from 64K to reduce the address
space used by the MIPI CSI2 Rx subsystem when DPHY register interface is
enabled. For this a new compatible string v5_0 is added.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-csi2rxss.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-csi2rxss.c b/drivers/media/platform/xilinx/xilinx-csi2rxss.c
index b10ee088f014..546783a4efcb 100644
--- a/drivers/media/platform/xilinx/xilinx-csi2rxss.c
+++ b/drivers/media/platform/xilinx/xilinx-csi2rxss.c
@@ -333,6 +333,7 @@
 
 #define XCSI_CLK_PROP		BIT(0)
 #define XCSI_DPHY_PROP		BIT(1)
+#define XCSI_DPHY_ADDR_PROP	BIT(2)
 
 /**
  * struct xcsi2rxss_feature - dt or IP property structure
@@ -513,6 +514,10 @@ struct xcsi2rxss_state {
 	bool suspended;
 };
 
+static const struct xcsi2rxss_feature xlnx_csi2rxss_v5_0 = {
+	.flags = XCSI_CLK_PROP | XCSI_DPHY_PROP | XCSI_DPHY_ADDR_PROP,
+};
+
 static const struct xcsi2rxss_feature xlnx_csi2rxss_v4_1 = {
 	.flags = XCSI_CLK_PROP | XCSI_DPHY_PROP,
 };
@@ -534,6 +539,8 @@ static const struct of_device_id xcsi2rxss_of_id_table[] = {
 		.data = &xlnx_csi2rxss_v4_0 },
 	{ .compatible = "xlnx,mipi-csi2-rx-subsystem-4.1",
 		.data = &xlnx_csi2rxss_v4_1 },
+	{ .compatible = "xlnx,mipi-csi2-rx-subsystem-5.0",
+		.data = &xlnx_csi2rxss_v5_0 },
 	{ }
 };
 MODULE_DEVICE_TABLE(of, xcsi2rxss_of_id_table);
@@ -1640,10 +1647,14 @@ static int xcsi2rxss_parse_of(struct xcsi2rxss_state *xcsi2rxss)
 	}
 
 	if (core->dphy_present) {
-		if (iic_present)
+		if (iic_present) {
 			core->dphy_offset = 0x20000;
-		else
-			core->dphy_offset = 0x10000;
+		} else {
+			if (core->cfg->flags & XCSI_DPHY_ADDR_PROP)
+				core->dphy_offset = 0x1000;
+			else
+				core->dphy_offset = 0x10000;
+		}
 	}
 
 	ret = of_property_read_u32(node, "xlnx,max-lanes",
-- 
2.31.1

