From da1ae3f7e47b7990493ee02e1a97c8353342a632 Mon Sep 17 00:00:00 2001
From: "Nalla, Pradeep" <pnalla@marvell.com>
Date: Fri, 15 Jan 2021 01:23:50 +0530
Subject: [PATCH 1072/1921] octeontx2-sdp/octeontx2-npa: Fix compiler warnings

These warnings are due to missing static declarations and unused
variables.

Signed-off-by: Nalla, Pradeep <pnalla@marvell.com>
Change-Id: I2daf1ccae930bafce250aae83af3a2c75146a029
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/43715
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/soc/marvell/octeontx2-npa/npa.c | 25 +++----------------------
 drivers/soc/marvell/octeontx2-sdp/sdp.c | 16 +++-------------
 2 files changed, 6 insertions(+), 35 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2-npa/npa.c b/drivers/soc/marvell/octeontx2-npa/npa.c
index 688c143fc9e2..08e0c186a653 100644
--- a/drivers/soc/marvell/octeontx2-npa/npa.c
+++ b/drivers/soc/marvell/octeontx2-npa/npa.c
@@ -372,16 +372,6 @@ reply_free_rsrc_cnt(struct npa_dev_t *npa, struct rvu_vf *vf,
 	return 0;
 }
 
-static int
-check_attach_rsrcs_req(struct npa_dev_t *npa, struct rvu_vf *vf,
-		       struct mbox_msghdr *req, int size)
-{
-	struct rsrc_attach *rsrc_req;
-
-	rsrc_req = (struct rsrc_attach *)req;
-	return forward_to_mbox(npa, &npa->afpf_mbox, 0, req, size, "AF");
-}
-
 static int
 handle_vf_req(struct npa_dev_t *npa, struct rvu_vf *vf, struct mbox_msghdr *req,
 	      int size)
@@ -410,9 +400,6 @@ handle_vf_req(struct npa_dev_t *npa, struct rvu_vf *vf, struct mbox_msghdr *req,
 	case MBOX_MSG_FREE_RSRC_CNT:
 		err = reply_free_rsrc_cnt(npa, vf, req, size);
 		break;
-	case MBOX_MSG_ATTACH_RESOURCES:
-		err = check_attach_rsrcs_req(npa, vf, req, size);
-		break;
 	default:
 		err = forward_to_mbox(npa, &npa->afpf_mbox, 0, req, size, "AF");
 		break;
@@ -777,15 +764,13 @@ static int record_ptrs(struct otx2_npa_pool *pool, dma_addr_t iova)
 	return 0;
 }
 
-dma_addr_t otx2_alloc_npa_buf(struct npa_dev_t *pfvf,
-			      struct otx2_npa_pool *pool, gfp_t gfp,
-			      struct device *owner)
+static dma_addr_t otx2_alloc_npa_buf(struct npa_dev_t *pfvf,
+				     struct otx2_npa_pool *pool, gfp_t gfp,
+				     struct device *owner)
 {
 	dma_addr_t iova;
-	struct device *dev;
 	struct iommu_domain *iommu_domain;
 
-	dev = &pfvf->pdev->dev;
 	/* Check if request can be accommodated in previous allocated page */
 	if (pool->page && ((pool->page_offset + pool->rbsize) <= PAGE_SIZE)) {
 		page_ref_inc(pool->page);
@@ -1122,12 +1107,10 @@ static int npa_lf_aura_pool_fini(struct npa_dev_t *npa, u16 aura_id)
 {
 	struct npa_aq_enq_req *aura_req, *pool_req;
 	struct ndc_sync_op *ndc_req;
-	struct otx2_mbox_dev *mdev;
 	struct otx2_mbox *mbox;
 	int rc;
 
 	mbox = &npa->afpf_mbox;
-	mdev = &mbox->dev[0];
 	/* Procedure for disabling an aura/pool */
 	usleep_range(10, 11);
 
@@ -1291,10 +1274,8 @@ static void npa_afpf_mbox_destroy(struct npa_dev_t *npa_pf_dev)
 static int otx2_npa_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 {
 	struct npa_dev_t *npa;
-	struct device *dev;
 	int err, pos;
 
-	dev = &pdev->dev;
 	err = pcim_enable_device(pdev);
 	if (err) {
 		dev_err(&pdev->dev, "Failed to enable PCI device\n");
diff --git a/drivers/soc/marvell/octeontx2-sdp/sdp.c b/drivers/soc/marvell/octeontx2-sdp/sdp.c
index 4319abfb2d7f..9398edf7cef2 100644
--- a/drivers/soc/marvell/octeontx2-sdp/sdp.c
+++ b/drivers/soc/marvell/octeontx2-sdp/sdp.c
@@ -313,16 +313,6 @@ reply_free_rsrc_cnt(struct sdp_dev *sdp, struct rvu_vf *vf,
 	return 0;
 }
 
-static int
-check_attach_rsrcs_req(struct sdp_dev *sdp, struct rvu_vf *vf,
-		       struct mbox_msghdr *req, int size)
-{
-	struct rsrc_attach *rsrc_req;
-
-	rsrc_req = (struct rsrc_attach *)req;
-	return forward_to_mbox(sdp, &sdp->afpf_mbox, 0, req, size, "AF");
-}
-
 static int
 handle_vf_req(struct sdp_dev *sdp, struct rvu_vf *vf, struct mbox_msghdr *req,
 	      int size)
@@ -364,7 +354,7 @@ handle_vf_req(struct sdp_dev *sdp, struct rvu_vf *vf, struct mbox_msghdr *req,
 				req->ver, OTX2_MBOX_VERSION);
 			return -EINVAL;
 		}
-		err = check_attach_rsrcs_req(sdp, vf, req, size);
+		err = forward_to_mbox(sdp, &sdp->afpf_mbox, 0, req, size, "AF");
 		break;
 	default:
 		err = forward_to_mbox(sdp, &sdp->afpf_mbox, 0, req, size, "AF");
@@ -1004,7 +994,7 @@ static struct attribute_group sdp_ring_attr_group = {
 	.attrs = sdp_ring_attrs,
 };
 
-int sdp_sysfs_init(struct device *dev)
+static int sdp_sysfs_init(struct device *dev)
 {
 	int ret;
 
@@ -1017,7 +1007,7 @@ int sdp_sysfs_init(struct device *dev)
 	return 0;
 }
 
-void sdp_sysfs_remove(struct device *dev)
+static void sdp_sysfs_remove(struct device *dev)
 {
 	sysfs_remove_group(&dev->kobj, &sdp_ring_attr_group);
 }
-- 
2.31.1

