From 6914120ee418346b380546ee6404b7d6d1beed9d Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Thu, 24 Sep 2020 11:36:02 -0700
Subject: [PATCH 1661/1852] misc: xilinx-ai-engine: use error category property
 in get errors categories

commit ff36cfc8d8e121c5219dc14ddb4f60319034c4fa from
https://github.com/Xilinx/linux-xlnx.git

As we introduced the category property to the AI engine error
structure, we directly use this property to calculate the bitmap of the
categories of all the errors.

Signed-off-by: Wendy Liang <wendy.liang@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../xilinx-ai-engine/ai-engine-interrupt.c    | 39 ++-----------------
 1 file changed, 4 insertions(+), 35 deletions(-)

diff --git a/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c b/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c
index cc7b9f925884..7894b62a1548 100644
--- a/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c
+++ b/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c
@@ -993,49 +993,18 @@ EXPORT_SYMBOL_GPL(aie_get_errors);
  */
 u32 aie_get_error_categories(struct aie_errors *aie_errs)
 {
-	struct aie_partition *apart;
-	unsigned long status = 0;
-	u8 e, i, j, event;
-	int ret;
-
-	if (!aie_errs || !aie_errs->dev || !aie_errs->errors)
-		return 0;
+	u32 e, ret = 0;
 
-	apart = container_of(aie_errs->dev, struct aie_partition, dev);
-
-	ret = mutex_lock_interruptible(&apart->mlock);
-	if (ret) {
-		dev_err(&apart->dev,
-			"Failed to acquire lock. Process was interrupted by fatal signals\n");
+	if (!aie_errs || !aie_errs->errors)
 		return 0;
-	}
 
 	for (e = 0; e < aie_errs->num_err; e++) {
 		struct aie_error *error = &aie_errs->errors[e];
-		const struct aie_error_attr *err_attr;
-		const struct aie_err_category *ecat;
 
-		if (error->module == AIE_CORE_MOD)
-			err_attr = apart->adev->core_errors;
-		else if (error->module == AIE_MEM_MOD)
-			err_attr = apart->adev->mem_errors;
-		else
-			err_attr = apart->adev->shim_errors;
-
-		ecat = err_attr->err_category;
-		for (i = 0; i < err_attr->num_err_categories; i++) {
-			for (j = 0;
-			     j < ecat[i].num_events; j++) {
-				event = ecat[i].prop[j].event;
-				if (event != error->error_id)
-					continue;
-				status |= BIT(ecat[i].err_category);
-			}
-		}
+		ret |= BIT(error->category);
 	}
 
-	mutex_unlock(&apart->mlock);
-	return status;
+	return ret;
 }
 EXPORT_SYMBOL_GPL(aie_get_error_categories);
 
-- 
2.31.1

