From e321580f961d4de85c92a0095611986b91be2813 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 30 Jul 2018 11:18:00 -0700
Subject: [PATCH 0390/1851] drm: xlnx: zynqmp_disp: Configure the coefficients
 for TPG

commit b128b7409306dc7c38d1784eeffee5385500b786 from
https://github.com/Xilinx/linux-xlnx.git

When the layer is disabled, the coefficients should be configured
correctly so that the TPG is displayed properly when it's enabled later.
Previously, all coefficients were cleared, and thus TPG wasn't displayed.
While at it, factorize the coefficient code as a separate function.

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Tested-by: Tejas Upadhyay <tejas.upadhyay@xilinx.com>
Reviewed-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/zynqmp_disp.c | 111 ++++++++++++++++-------------
 1 file changed, 62 insertions(+), 49 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/zynqmp_disp.c b/drivers/gpu/drm/xlnx/zynqmp_disp.c
index 0ed58a8881cd..14b894769e4b 100644
--- a/drivers/gpu/drm/xlnx/zynqmp_disp.c
+++ b/drivers/gpu/drm/xlnx/zynqmp_disp.c
@@ -647,57 +647,62 @@ zynqmp_disp_blend_set_output_fmt(struct zynqmp_disp_blend *blend, u32 fmt)
 }
 
 /**
- * zynqmp_disp_blend_layer_enable - Enable a layer
+ * zynqmp_disp_blend_layer_coeff - Set the coefficients for @layer
  * @blend: blend object
- * @layer: layer to enable
+ * @layer: layer to set the coefficients for
+ * @on: if layer is on / off
  *
- * Enable a layer @layer.
+ * Depending on the format (rgb / yuv and swap), and the status (on / off),
+ * this function sets the coefficients for the given layer @layer accordingly.
  */
-static void zynqmp_disp_blend_layer_enable(struct zynqmp_disp_blend *blend,
-					   struct zynqmp_disp_layer *layer)
+static void zynqmp_disp_blend_layer_coeff(struct zynqmp_disp_blend *blend,
+					  struct zynqmp_disp_layer *layer,
+					  bool on)
 {
-	u32 reg, offset, i, s0, s1;
+	u32 offset, i, s0, s1;
 	u16 sdtv_coeffs[] = { 0x1000, 0x166f, 0x0,
 			      0x1000, 0x7483, 0x7a7f,
 			      0x1000, 0x0, 0x1c5a };
 	u16 swap_coeffs[] = { 0x1000, 0x0, 0x0,
 			      0x0, 0x1000, 0x0,
 			      0x0, 0x0, 0x1000 };
+	u16 null_coeffs[] = { 0x0, 0x0, 0x0,
+			      0x0, 0x0, 0x0,
+			      0x0, 0x0, 0x0 };
 	u16 *coeffs;
-	u32 offsets[] = { 0x0, 0x1800, 0x1800 };
-
-	reg = layer->fmt->rgb ? ZYNQMP_DISP_V_BLEND_LAYER_CONTROL_RGB : 0;
-	reg |= layer->fmt->chroma_sub ?
-	       ZYNQMP_DISP_V_BLEND_LAYER_CONTROL_EN_US : 0;
-
-	zynqmp_disp_write(blend->base,
-			  ZYNQMP_DISP_V_BLEND_LAYER_CONTROL + layer->offset,
-			  reg);
+	u32 sdtv_offsets[] = { 0x0, 0x1800, 0x1800 };
+	u32 null_offsets[] = { 0x0, 0x0, 0x0 };
+	u32 *offsets;
 
 	if (layer->id == ZYNQMP_DISP_LAYER_VID)
 		offset = ZYNQMP_DISP_V_BLEND_IN1CSC_COEFF0;
 	else
 		offset = ZYNQMP_DISP_V_BLEND_IN2CSC_COEFF0;
 
-	if (!layer->fmt->rgb) {
-		coeffs = sdtv_coeffs;
-		s0 = 1;
-		s1 = 2;
+	if (!on) {
+		coeffs = null_coeffs;
+		offsets = null_offsets;
 	} else {
-		coeffs = swap_coeffs;
-		s0 = 0;
-		s1 = 2;
-
-		/* No offset for RGB formats */
-		for (i = 0; i < ZYNQMP_DISP_V_BLEND_NUM_OFFSET; i++)
-			offsets[i] = 0;
-	}
+		if (!layer->fmt->rgb) {
+			coeffs = sdtv_coeffs;
+			offsets = sdtv_offsets;
+			s0 = 1;
+			s1 = 2;
+		} else {
+			coeffs = swap_coeffs;
+			s0 = 0;
+			s1 = 2;
+
+			/* No offset for RGB formats */
+			offsets = null_offsets;
+		}
 
-	if (layer->fmt->swap) {
-		for (i = 0; i < 3; i++) {
-			coeffs[i * 3 + s0] ^= coeffs[i * 3 + s1];
-			coeffs[i * 3 + s1] ^= coeffs[i * 3 + s0];
-			coeffs[i * 3 + s0] ^= coeffs[i * 3 + s1];
+		if (layer->fmt->swap) {
+			for (i = 0; i < 3; i++) {
+				coeffs[i * 3 + s0] ^= coeffs[i * 3 + s1];
+				coeffs[i * 3 + s1] ^= coeffs[i * 3 + s0];
+				coeffs[i * 3 + s0] ^= coeffs[i * 3 + s1];
+			}
 		}
 	}
 
@@ -715,6 +720,29 @@ static void zynqmp_disp_blend_layer_enable(struct zynqmp_disp_blend *blend,
 		zynqmp_disp_write(blend->base, offset + i * 4, offsets[i]);
 }
 
+/**
+ * zynqmp_disp_blend_layer_enable - Enable a layer
+ * @blend: blend object
+ * @layer: layer to enable
+ *
+ * Enable a layer @layer.
+ */
+static void zynqmp_disp_blend_layer_enable(struct zynqmp_disp_blend *blend,
+					   struct zynqmp_disp_layer *layer)
+{
+	u32 reg;
+
+	reg = layer->fmt->rgb ? ZYNQMP_DISP_V_BLEND_LAYER_CONTROL_RGB : 0;
+	reg |= layer->fmt->chroma_sub ?
+	       ZYNQMP_DISP_V_BLEND_LAYER_CONTROL_EN_US : 0;
+
+	zynqmp_disp_write(blend->base,
+			  ZYNQMP_DISP_V_BLEND_LAYER_CONTROL + layer->offset,
+			  reg);
+
+	zynqmp_disp_blend_layer_coeff(blend, layer, true);
+}
+
 /**
  * zynqmp_disp_blend_layer_disable - Disable a layer
  * @blend: blend object
@@ -725,26 +753,10 @@ static void zynqmp_disp_blend_layer_enable(struct zynqmp_disp_blend *blend,
 static void zynqmp_disp_blend_layer_disable(struct zynqmp_disp_blend *blend,
 					    struct zynqmp_disp_layer *layer)
 {
-	u32 offset;
-	unsigned int i;
-
 	zynqmp_disp_write(blend->base,
 			  ZYNQMP_DISP_V_BLEND_LAYER_CONTROL + layer->offset, 0);
 
-	if (layer->id == ZYNQMP_DISP_LAYER_VID)
-		offset = ZYNQMP_DISP_V_BLEND_IN1CSC_COEFF0;
-	else
-		offset = ZYNQMP_DISP_V_BLEND_IN2CSC_COEFF0;
-	for (i = 0; i < ZYNQMP_DISP_V_BLEND_NUM_COEFF; i++)
-		zynqmp_disp_write(blend->base, offset + i * 4, 0);
-
-	if (layer->id == ZYNQMP_DISP_LAYER_VID)
-		offset = ZYNQMP_DISP_V_BLEND_LUMA_IN1CSC_OFFSET;
-	else
-		offset = ZYNQMP_DISP_V_BLEND_LUMA_IN2CSC_OFFSET;
-
-	for (i = 0; i < ZYNQMP_DISP_V_BLEND_NUM_OFFSET; i++)
-		zynqmp_disp_write(blend->base, offset + i * 4, 0);
+	zynqmp_disp_blend_layer_coeff(blend, layer, false);
 }
 
 /**
@@ -1797,6 +1809,7 @@ static int zynqmp_disp_layer_set_tpg(struct zynqmp_disp *disp,
 		return -EIO;
 	}
 
+	zynqmp_disp_blend_layer_coeff(&disp->blend, layer, tpg_on);
 	zynqmp_disp_av_buf_set_tpg(&disp->av_buf, tpg_on);
 	disp->tpg_on = tpg_on;
 
-- 
2.31.1

