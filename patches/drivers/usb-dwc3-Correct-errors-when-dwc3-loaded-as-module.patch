From 5c9de979b53c69b8a0f32de84c5051a1b0a54d56 Mon Sep 17 00:00:00 2001
From: Piyush Mehta <piyush.mehta@xilinx.com>
Date: Thu, 23 Jan 2020 19:50:47 +0530
Subject: [PATCH 0997/1852] usb: dwc3: Correct errors when dwc3 loaded as
 module

commit 782658c51bbcd85a39a5d9a51b57224f185d7670 from
https://github.com/Xilinx/linux-xlnx.git

This patch fixes the errors when dwc3 is selected as a loadable
module.

Signed-off-by: Piyush Mehta <piyush.mehta@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/usb/dwc3/core.c           |  3 +++
 drivers/usb/dwc3/core.h           |  3 +++
 drivers/usb/dwc3/dwc3-of-simple.c | 19 +++++++++++++++++++
 drivers/usb/dwc3/host.c           |  1 +
 4 files changed, 26 insertions(+)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 5f6decc9aa86..60ff703e8e52 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -1395,6 +1395,9 @@ static void dwc3_get_properties(struct dwc3 *dwc)
 	dwc->dis_metastability_quirk = device_property_read_bool(dev,
 				"snps,dis_metastability_quirk");
 
+	/* Check if extra quirks to be added */
+	dwc3_simple_check_quirks(dwc);
+
 	dwc->lpm_nyet_threshold = lpm_nyet_threshold;
 	dwc->tx_de_emphasis = tx_de_emphasis;
 
diff --git a/drivers/usb/dwc3/core.h b/drivers/usb/dwc3/core.h
index ff627ca1e213..9c30fa4ce1f8 100644
--- a/drivers/usb/dwc3/core.h
+++ b/drivers/usb/dwc3/core.h
@@ -1428,6 +1428,7 @@ static inline bool dwc3_is_usb31(struct dwc3 *dwc)
 int dwc3_enable_hw_coherency(struct device *dev);
 void dwc3_simple_wakeup_capable(struct device *dev, bool wakeup);
 void dwc3_set_simple_data(struct dwc3 *dwc);
+void dwc3_simple_check_quirks(struct dwc3 *dwc);
 #else
 static inline int dwc3_enable_hw_coherency(struct device *dev)
 { return 1; }
@@ -1435,6 +1436,8 @@ void dwc3_simple_wakeup_capable(struct device *dev, bool wakeup)
 { ; }
 void dwc3_set_simple_data(struct dwc3 *dwc)
 { ; }
+void dwc3_simple_check_quirks(struct dwc3 *dwc)
+{ ; }
 #endif
 
 bool dwc3_has_imod(struct dwc3 *dwc);
diff --git a/drivers/usb/dwc3/dwc3-of-simple.c b/drivers/usb/dwc3/dwc3-of-simple.c
index 5ba8fd87b556..cd96223d1c2c 100644
--- a/drivers/usb/dwc3/dwc3-of-simple.c
+++ b/drivers/usb/dwc3/dwc3-of-simple.c
@@ -49,6 +49,7 @@ struct dwc3_of_simple {
 	struct dwc3		*dwc;
 	struct phy		*phy;
 	bool			wakeup_capable;
+	bool			dis_u3_susphy_quirk;
 	bool			enable_d3_suspend;
 	struct reset_control	*resets;
 	bool			pulse_resets;
@@ -96,6 +97,24 @@ void dwc3_set_simple_data(struct dwc3 *dwc)
 }
 EXPORT_SYMBOL(dwc3_set_simple_data);
 
+void dwc3_simple_check_quirks(struct dwc3 *dwc)
+{
+	struct device_node *node = of_get_parent(dwc->dev->of_node);
+
+	if (node && of_device_is_compatible(node, "xlnx,zynqmp-dwc3")) {
+		struct platform_device *pdev_parent;
+		struct dwc3_of_simple   *simple;
+
+		pdev_parent = of_find_device_by_node(node);
+		simple = platform_get_drvdata(pdev_parent);
+
+		/* Add snps,dis_u3_susphy_quirk */
+		dwc->dis_u3_susphy_quirk = simple->dis_u3_susphy_quirk;
+
+	}
+}
+EXPORT_SYMBOL(dwc3_simple_check_quirks);
+
 void dwc3_simple_wakeup_capable(struct device *dev, bool wakeup)
 {
 	struct device_node *node = of_node_get(dev->parent->of_node);
diff --git a/drivers/usb/dwc3/host.c b/drivers/usb/dwc3/host.c
index 277a0c218738..f65df9d3b22c 100644
--- a/drivers/usb/dwc3/host.c
+++ b/drivers/usb/dwc3/host.c
@@ -17,6 +17,7 @@ void dwc3_host_wakeup_capable(struct device *dev, bool wakeup)
 {
 	dwc3_simple_wakeup_capable(dev, wakeup);
 }
+EXPORT_SYMBOL(dwc3_host_wakeup_capable);
 
 static int dwc3_host_get_irq(struct dwc3 *dwc)
 {
-- 
2.31.1

