From b2183968e286e1fa0e283034d02f4f8bc143fc23 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Tue, 30 Jul 2019 16:10:11 +0530
Subject: [PATCH 292/767] octeontx2-pf: Enable CQ interrupt coalescing

commit d35abeb9a4cc4fc29439da8e2c8db0d04b6c84b7 from
git@git.assembla.com:cavium/WindRiver.linux.git

Except 96xx A0 silicon, on other silicon variants
CQ timer coalescing is functioning. This patch enables
over CQ IRQ coalescing. Default timer threshold is set
to 1us and the same can be changed via ethtool.

Change-Id: Iad1628c6d49c01dfffaeea87c30bbf25c5624918
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/13437
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/13446
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h | 4 ++++
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c     | 1 +
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h   | 5 +++--
 3 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index 9e3442dbc6b7..b99555d4dac5 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -232,6 +232,7 @@ struct otx2_nic {
 	u16			rx_chan_base;
 	u16			tx_chan_base;
 	u8			cq_time_wait;
+	u16			cq_qcount_wait;
 	u32			cq_ecount_wait;
 	u32			msg_enable;
 	struct work_struct	reset_task;
@@ -278,11 +279,14 @@ static inline void otx2_setup_dev_hw_settings(struct otx2_nic *pfvf)
 
 	pfvf->cq_time_wait = CQ_TIMER_THRESH_DEFAULT;
 	pfvf->cq_ecount_wait = CQ_CQE_THRESH_DEFAULT;
+	pfvf->cq_qcount_wait = CQ_QCOUNT_DEFAULT;
 
 	hw->hw_tso = true;
 
 	if (is_96xx_A0(pfvf->pdev) || is_95xx_A0(pfvf->pdev))
 		hw->hw_tso = false;
+	if (is_96xx_A0(pfvf->pdev))
+		pfvf->cq_qcount_wait = 0x0;
 }
 
 /* Register read/write APIs */
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index d736f15c14a8..ac0f2e77d806 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1568,6 +1568,7 @@ int otx2_open(struct net_device *netdev)
 		/* Configure CQE interrupt coalescing parameters */
 		otx2_write64(pf, NIX_LF_CINTX_WAIT(qidx),
 			     ((u64)pf->cq_time_wait << 48) |
+			     ((u64)pf->cq_qcount_wait << 32) |
 			     pf->cq_ecount_wait);
 
 		/* Enable CQ IRQ */
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h
index d6ca35951278..cb9d07825f44 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.h
@@ -34,12 +34,13 @@
 #define OTX2_MAX_GSO_SEGS	255
 #define OTX2_MAX_FRAGS_IN_SQE	9
 
-#define CQ_CQE_THRESH_DEFAULT	0x0ULL /* IRQ triggered when
-					* NIX_LF_CINTX_CNT[QCOUNT]
+#define CQ_CQE_THRESH_DEFAULT	0xAULL /* IRQ triggered when
+					* NIX_LF_CINTX_CNT[ECOUNT]
 					* crosses this value
 					*/
 #define CQ_TIMER_THRESH_DEFAULT	0xAULL /* ~1usec i.e (0xA * 100nsec) */
 #define CQ_TIMER_THRESH_MAX     255
+#define CQ_QCOUNT_DEFAULT	0x1ULL
 
 struct queue_stats {
 	u64	bytes;
-- 
2.31.1

