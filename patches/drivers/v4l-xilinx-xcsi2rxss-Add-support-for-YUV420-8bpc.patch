From 570eb7be89578ccec8ad5579e946f14e6ec88516 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Mon, 10 Aug 2020 09:32:12 -0700
Subject: [PATCH 1515/1852] v4l: xilinx: xcsi2rxss: Add support for YUV420 8bpc

commit b04e5c91b03afe694928da2b625a1507272bea55 from
https://github.com/Xilinx/linux-xlnx.git

This patch adds support for YUV 420 8bpc (0x18 data type) by adding the
interrupt handling for the YUV 420 word count error. This interrupt
occurs if the word count configured in IP doesn't match what is coming
from the camera sensor leading to line buffer full condition. The
interrupt is handled same as line buffer full condition is handled.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../media/platform/xilinx/xilinx-csi2rxss.c    | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-csi2rxss.c b/drivers/media/platform/xilinx/xilinx-csi2rxss.c
index 546783a4efcb..bc4086ed7b28 100644
--- a/drivers/media/platform/xilinx/xilinx-csi2rxss.c
+++ b/drivers/media/platform/xilinx/xilinx-csi2rxss.c
@@ -82,6 +82,7 @@
 #define XCSI_ISR_OFFSET			0x00000024
 #define XCSI_ISR_FR_SHIFT		31
 #define XCSI_ISR_VCX_SHIFT		30
+#define XCSI_ISR_YUV420_SHIFT		28
 #define XCSI_ISR_ILC_SHIFT		21
 #define XCSI_ISR_SPFIFOF_SHIFT		20
 #define XCSI_ISR_SPFIFONE_SHIFT		19
@@ -103,6 +104,7 @@
 #define XCSI_ISR_VC0FLVLERR_SHIFT	0
 #define XCSI_ISR_FR_MASK		BIT(XCSI_ISR_FR_SHIFT)
 #define XCSI_ISR_VCX_MASK		BIT(XCSI_ISR_VCX_SHIFT)
+#define XCSI_ISR_YUV420_MASK		BIT(XCSI_ISR_YUV420_SHIFT)
 #define XCSI_ISR_ILC_MASK		BIT(XCSI_ISR_ILC_SHIFT)
 #define XCSI_ISR_SPFIFOF_MASK		BIT(XCSI_ISR_SPFIFOF_SHIFT)
 #define XCSI_ISR_SPFIFONE_MASK		BIT(XCSI_ISR_SPFIFONE_SHIFT)
@@ -122,7 +124,7 @@
 #define XCSI_ISR_VC1FLVLERR_MASK	BIT(XCSI_ISR_VC1FLVLERR_SHIFT)
 #define XCSI_ISR_VC0FSYNCERR_MASK	BIT(XCSI_ISR_VC0FSYNCERR_SHIFT)
 #define XCSI_ISR_VC0FLVLERR_MASK	BIT(XCSI_ISR_VC0FLVLERR_SHIFT)
-#define XCSI_ISR_ALLINTR_MASK		0xC03FFFFF
+#define XCSI_ISR_ALLINTR_MASK		0xD03FFFFF
 
 #define XCSI_INTR_PROT_MASK	(XCSI_ISR_VC3FSYNCERR_MASK |	\
 				 XCSI_ISR_VC3FLVLERR_MASK |	\
@@ -148,12 +150,14 @@
 #define XCSI_INTR_FRAMERCVD_MASK	(XCSI_ISR_FR_MASK)
 
 #define XCSI_INTR_ERR_MASK	(XCSI_ISR_ILC_MASK |	\
+				 XCSI_ISR_YUV420_MASK | \
 				 XCSI_ISR_SLBF_MASK |	\
 				 XCSI_ISR_STOP_MASK)
 
 #define XCSI_IER_OFFSET			0x00000028
 #define XCSI_IER_FR_SHIFT		31
 #define XCSI_IER_VCX_SHIFT		30
+#define XCSI_IER_YUV420_SHIFT		28
 #define XCSI_IER_ILC_SHIFT		21
 #define XCSI_IER_SPFIFOF_SHIFT		20
 #define XCSI_IER_SPFIFONE_SHIFT		19
@@ -175,6 +179,7 @@
 #define XCSI_IER_VC0FLVLERR_SHIFT	0
 #define XCSI_IER_FR_MASK		BIT(XCSI_IER_FR_SHIFT)
 #define XCSI_IER_VCX_MASK		BIT(XCSI_IER_VCX_SHIFT)
+#define XCSI_IER_YUV420_MASK		BIT(XCSI_IER_YUV420_SHIFT)
 #define XCSI_IER_ILC_MASK		BIT(XCSI_IER_ILC_SHIFT)
 #define XCSI_IER_SPFIFOF_MASK		BIT(XCSI_IER_SPFIFOF_SHIFT)
 #define XCSI_IER_SPFIFONE_MASK		BIT(XCSI_IER_SPFIFONE_SHIFT)
@@ -194,7 +199,7 @@
 #define XCSI_IER_VC1FLVLERR_MASK	BIT(XCSI_IER_VC1FLVLERR_SHIFT)
 #define XCSI_IER_VC0FSYNCERR_MASK	BIT(XCSI_IER_VC0FSYNCERR_SHIFT)
 #define XCSI_IER_VC0FLVLERR_MASK	BIT(XCSI_IER_VC0FLVLERR_SHIFT)
-#define XCSI_IER_ALLINTR_MASK		0xC03FFFFF
+#define XCSI_IER_ALLINTR_MASK		0xD03FFFFF
 
 #define XCSI_SPKTR_OFFSET		0x00000030
 #define XCSI_SPKTR_DATA_SHIFT		8
@@ -611,6 +616,7 @@ static const struct pixel_format pixel_formats[] = {
 static struct xcsi2rxss_event xcsi2rxss_events[] = {
 	{ XCSI_ISR_FR_MASK, "Frame Received", 0 },
 	{ XCSI_ISR_VCX_MASK, "VCX Frame Errors", 0 },
+	{ XCSI_ISR_YUV420_MASK, "YUV 420 Word Count Error", 0 },
 	{ XCSI_ISR_ILC_MASK, "Invalid Lane Count Error", 0 },
 	{ XCSI_ISR_SPFIFOF_MASK, "Short Packet FIFO OverFlow Error", 0 },
 	{ XCSI_ISR_SPFIFONE_MASK, "Short Packet FIFO Not Empty", 0 },
@@ -839,8 +845,12 @@ static irqreturn_t xcsi2rxss_irq_handler(int irq, void *dev_id)
 		v4l2_subdev_notify_event(&state->subdev, &state->event);
 	}
 
-	if (status & XCSI_ISR_SLBF_MASK) {
-		dev_alert(core->dev, "Stream Line Buffer Full!\n");
+	if (status & (XCSI_ISR_SLBF_MASK | XCSI_ISR_YUV420_MASK)) {
+		if (status & XCSI_ISR_SLBF_MASK)
+			dev_alert(core->dev, "Stream Line Buffer Full!\n");
+		if (status & XCSI_ISR_YUV420_MASK)
+			dev_alert(core->dev, "YUV 420 Word count error!\n");
+
 		if (core->rst_gpio) {
 			gpiod_set_value(core->rst_gpio, 1);
 			/* minimum 40 dphy_clk_200M cycles */
-- 
2.31.1

