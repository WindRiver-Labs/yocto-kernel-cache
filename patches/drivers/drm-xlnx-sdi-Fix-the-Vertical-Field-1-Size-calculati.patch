From 4895df249f1b076cfbe81fdebe6e491615c13122 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Thu, 21 Jun 2018 16:48:17 +0530
Subject: [PATCH 0377/1852] drm: xlnx: sdi: Fix the Vertical Field 1 Size
 calculation

commit 2452cd9a6657b94a163b1bc96640ac1ec75a4582 from
https://github.com/Xilinx/linux-xlnx.git

Fixes the Vertical Field 1 Size for Vertical Frame Size register in VTC.
For interlaced modes this is incremented by 1. But for 3GB modes, it is
incremented by 2. The 3GB mode is identified based on the DRM interlaced
flag and the pixel clock of 148.5MHz.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_sdi.c        |  1 +
 drivers/gpu/drm/xlnx/xlnx_sdi_timing.c | 11 ++++++++++-
 2 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_sdi.c b/drivers/gpu/drm/xlnx/xlnx_sdi.c
index 1df47e1f94f9..6a6025dcfe02 100644
--- a/drivers/gpu/drm/xlnx/xlnx_sdi.c
+++ b/drivers/gpu/drm/xlnx/xlnx_sdi.c
@@ -860,6 +860,7 @@ static void xlnx_sdi_encoder_atomic_mode_set(struct drm_encoder *encoder,
 			vm.hfront_porch++;
 	} while (vtc_blank < sditx_blank);
 
+	vm.pixelclock = adjusted_mode->clock * 1000;
 	xlnx_stc_sig(sdi->base, &vm);
 }
 
diff --git a/drivers/gpu/drm/xlnx/xlnx_sdi_timing.c b/drivers/gpu/drm/xlnx/xlnx_sdi_timing.c
index d69402c51265..235415fc22b1 100644
--- a/drivers/gpu/drm/xlnx/xlnx_sdi_timing.c
+++ b/drivers/gpu/drm/xlnx/xlnx_sdi_timing.c
@@ -317,7 +317,16 @@ void xlnx_stc_sig(void __iomem *base, struct videomode *vm)
 	reg = htotal & XSTC_GHFRAME_HSIZE;
 	xlnx_stc_writel(base, XSTC_GHSIZE, reg);
 	reg = vtotal & XSTC_GVFRAME_HSIZE_F1;
-	reg |= reg << XSTC_GV1_BPSTART_SHIFT;
+	if (vm->flags & DISPLAY_FLAGS_INTERLACED) {
+		if (vm->pixelclock == 148500000)
+			reg |= (reg + 2) <<
+				XSTC_GV1_BPSTART_SHIFT;
+		else
+			reg |= (reg + 1) <<
+				XSTC_GV1_BPSTART_SHIFT;
+	} else {
+		reg |= reg << XSTC_GV1_BPSTART_SHIFT;
+	}
 	xlnx_stc_writel(base, XSTC_GVSIZE, reg);
 	reg = hactive & XSTC_GA_ACTSIZE_MASK;
 	reg |= (vactive & XSTC_GA_ACTSIZE_MASK) << 16;
-- 
2.31.1

