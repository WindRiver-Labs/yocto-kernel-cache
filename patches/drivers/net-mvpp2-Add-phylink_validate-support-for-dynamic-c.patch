From 665b56a77dbff5db8d878b79d8554bf12c9876e1 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 11 Jul 2021 07:48:47 -0700
Subject: [PATCH 1640/1921] net: mvpp2: Add phylink_validate support for
 dynamic changed phy_interface

Store fwnode_phy_mode and validate supported modes against them.
Ports with phy_interface 10GKR and 5GKR can support 2500baseX and 1000baseX
if port doesn't have phy.

Change-Id: I264e491f282399a586626fbc0116050ecdc5b12f
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/56072
Reviewed-by: Yan Markman <ymarkman@marvell.com>
(cherry picked from commit bab4b5c5ca722ae98b593e00d133a06c261c5469)
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/56127
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/mvpp2/mvpp2.h    |  3 +++
 .../net/ethernet/marvell/mvpp2/mvpp2_main.c   | 20 +++++++++++++++----
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2.h b/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
index e01dda382102..3116cd5d7427 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2.h
@@ -1061,10 +1061,13 @@ struct mvpp2_port {
 	struct device_node *of_node;
 
 	phy_interface_t phy_interface;
+	phy_interface_t of_phy_interface;
 	struct phylink *phylink;
 	struct phylink_config phylink_config;
 	struct phy *comphy;
 
+	bool phy_exist;
+
 	struct mvpp2_bm_pool *pool_long;
 	struct mvpp2_bm_pool *pool_short;
 
diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index 19dbd61cdece..0e48d9112ee6 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -6200,7 +6200,7 @@ static void mvpp2_phylink_validate(struct phylink_config *config,
 	phylink_set(mask, Autoneg);
 	phylink_set_port_modes(mask);
 
-	switch (state->interface) {
+	switch (port->of_phy_interface) {
 	case PHY_INTERFACE_MODE_10GKR:
 	case PHY_INTERFACE_MODE_RXAUI:
 	case PHY_INTERFACE_MODE_NA:
@@ -6218,6 +6218,11 @@ static void mvpp2_phylink_validate(struct phylink_config *config,
 	case PHY_INTERFACE_MODE_5GKR:
 		if (port->has_xlg_mac)
 			phylink_set(mask, 5000baseT_Full);
+		if (!port->phy_exist) {
+			phylink_set(mask, 2500baseX_Full);
+			phylink_set(mask, 1000baseX_Full);
+			break;
+		};
 		/* Fall-through */
 	case PHY_INTERFACE_MODE_2500BASET:
 		phylink_set(mask, 2500baseT_Full);
@@ -6236,16 +6241,17 @@ static void mvpp2_phylink_validate(struct phylink_config *config,
 		phylink_set(mask, 100baseT_Half);
 		phylink_set(mask, 100baseT_Full);
 		break;
-	case PHY_INTERFACE_MODE_1000BASEX:
 	case PHY_INTERFACE_MODE_2500BASEX:
-		phylink_set(mask, 1000baseX_Full);
 		phylink_set(mask, 2500baseX_Full);
+		/* Fall-through */
+	case PHY_INTERFACE_MODE_1000BASEX:
+		phylink_set(mask, 1000baseX_Full);
 		break;
 	default:
 		goto empty_set;
 	}
 
-	bitmap_and(supported, supported, mask, __ETHTOOL_LINK_MODE_MASK_NBITS);
+	bitmap_copy(supported, mask, __ETHTOOL_LINK_MODE_MASK_NBITS);
 	bitmap_and(state->advertising, state->advertising, mask,
 		   __ETHTOOL_LINK_MODE_MASK_NBITS);
 	return;
@@ -6784,8 +6790,14 @@ static int mvpp2_port_probe(struct platform_device *pdev,
 
 	port->of_node = port_node;
 	port->phy_interface = phy_mode;
+	port->of_phy_interface = phy_mode;
 	port->comphy = comphy;
 
+	if (of_phy_find_device(port_node))
+		port->phy_exist = true;
+	else
+		port->phy_exist = false;
+
 	if ((port->id == 0 && port->priv->hw_version != MVPP21) ||
 	    (port->id == 1 && port->priv->hw_version == MVPP23))
 		port->has_xlg_mac = true;
-- 
2.31.1

