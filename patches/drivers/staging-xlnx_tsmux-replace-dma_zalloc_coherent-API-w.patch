From b449ea053aa67f631123090d298383be37939888 Mon Sep 17 00:00:00 2001
From: Venkateshwar Rao Gannavarapu <venkateshwar.rao.gannavarapu@xilinx.com>
Date: Mon, 9 Mar 2020 15:27:54 +0530
Subject: [PATCH 1263/1852] staging: xlnx_tsmux: replace dma_zalloc_coherent
 API with dma_alloc_coherent

commit 0468a6382079d63c3da90bfb07944f402370364f from
https://github.com/Xilinx/linux-xlnx.git

This patch replaces "dma_zalloc_coherent" API with "dma_alloc_coherent"
as it was deprecated in 5.4 kernel by commit 750afb08ca71
("cross-tree: phase out dma_zalloc_coherent()")

Signed-off-by: Venkateshwar Rao Gannavarapu <venkateshwar.rao.gannavarapu@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/staging/xlnx_tsmux/xlnx_mpg2tsmux.c | 28 ++++++++++-----------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/staging/xlnx_tsmux/xlnx_mpg2tsmux.c b/drivers/staging/xlnx_tsmux/xlnx_mpg2tsmux.c
index 5b2f4f8f8ee8..60041864de25 100644
--- a/drivers/staging/xlnx_tsmux/xlnx_mpg2tsmux.c
+++ b/drivers/staging/xlnx_tsmux/xlnx_mpg2tsmux.c
@@ -436,10 +436,10 @@ static int xlnx_tsmux_ioctl_srcbuf_alloc(struct xlnx_tsmux *mpgmuxts,
 	 */
 	for (i = 0; i < mpgmuxts->num_inbuf; i++) {
 		mpgmuxts->src_kaddrs[i] =
-			dma_zalloc_coherent(mpgmuxts->dev,
-					    mpgmuxts->srcbuf_size,
-					    &mpgmuxts->srcbuf_addrs[i],
-					    GFP_KERNEL | GFP_DMA32);
+			dma_alloc_coherent(mpgmuxts->dev,
+					   mpgmuxts->srcbuf_size,
+					   &mpgmuxts->srcbuf_addrs[i],
+					   GFP_KERNEL | GFP_DMA32);
 		if (!mpgmuxts->src_kaddrs[i]) {
 			dev_dbg(mpgmuxts->dev, "dma alloc fail %d buffer", i);
 			goto exit_free;
@@ -495,10 +495,10 @@ static int xlnx_tsmux_ioctl_dstbuf_alloc(struct xlnx_tsmux *mpgmuxts,
 	/* buf_size & num_buf boundary conditions are handled in application*/
 	for (i = 0; i < mpgmuxts->num_outbuf; i++) {
 		mpgmuxts->dst_kaddrs[i] =
-			dma_zalloc_coherent(mpgmuxts->dev,
-					    mpgmuxts->dstbuf_size,
-					    &mpgmuxts->dstbuf_addrs[i],
-					    GFP_KERNEL | GFP_DMA32);
+			dma_alloc_coherent(mpgmuxts->dev,
+					   mpgmuxts->dstbuf_size,
+					   &mpgmuxts->dstbuf_addrs[i],
+					   GFP_KERNEL | GFP_DMA32);
 		if (!mpgmuxts->dst_kaddrs[i]) {
 			dev_dbg(mpgmuxts->dev, "dmamem alloc fail for %d", i);
 			goto exit_free;
@@ -550,9 +550,9 @@ static int xlnx_tsmux_ioctl_strmtbl_alloc(struct xlnx_tsmux *mpgmuxts,
 	buf_size = sizeof(struct stream_info) * mpgmuxts->num_strmnodes;
 
 	mpgmuxts->strmtbl_kaddrs =
-		dma_zalloc_coherent(mpgmuxts->dev,
-				    buf_size, &mpgmuxts->strmtbl_addrs,
-				    GFP_KERNEL | GFP_DMA32);
+		dma_alloc_coherent(mpgmuxts->dev,
+				   buf_size, &mpgmuxts->strmtbl_addrs,
+				   GFP_KERNEL | GFP_DMA32);
 	if (!mpgmuxts->strmtbl_kaddrs) {
 		dev_dbg(mpgmuxts->dev, "dmamem alloc fail for strm table");
 		return -ENOMEM;
@@ -560,9 +560,9 @@ static int xlnx_tsmux_ioctl_strmtbl_alloc(struct xlnx_tsmux *mpgmuxts,
 
 	/* Allocating memory for internal streamid table */
 	mpgmuxts->intn_strmtbl_kaddrs =
-		dma_zalloc_coherent(mpgmuxts->dev,
-				    buf_size, &mpgmuxts->intn_strmtbl_addrs,
-				    GFP_KERNEL | GFP_DMA32);
+		dma_alloc_coherent(mpgmuxts->dev,
+				   buf_size, &mpgmuxts->intn_strmtbl_addrs,
+				   GFP_KERNEL | GFP_DMA32);
 
 	if (!mpgmuxts->intn_strmtbl_kaddrs) {
 		dev_dbg(mpgmuxts->dev, "dmamem alloc fail for intr strm table");
-- 
2.31.1

