From c4bc7625a0f4a4a61a91a64edecf1d2876ad3fe2 Mon Sep 17 00:00:00 2001
From: Daniel Steger <daniel.steger@xilinx.com>
Date: Fri, 30 Nov 2018 13:46:59 -0800
Subject: [PATCH 0498/1852] media: xilinx: tpg: Add pixel per clock dt support

commit 78cd3df22a566f66531b4bfa8c8110121eed6d4d from
https://github.com/Xilinx/linux-xlnx.git

Updated the tpg driver to read the pixel per clock
configuration from the devicetree.

Signed-off-by: Daniel Steger <daniel.steger@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-tpg.c | 23 +++++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-tpg.c b/drivers/media/platform/xilinx/xilinx-tpg.c
index 582d0cb0fbb1..d7bd3abe575c 100644
--- a/drivers/media/platform/xilinx/xilinx-tpg.c
+++ b/drivers/media/platform/xilinx/xilinx-tpg.c
@@ -103,6 +103,9 @@
 #define XTPG_MAX_WIDTH			(10328)
 #define XTPG_MAX_HEIGHT			(7760)
 
+#define XTPG_MIN_PPC			1
+#define XTPG_MAX_PPC			8
+
 /**
  * struct xtpg_device - Xilinx Test Pattern Generator device structure
  * @xvip: Xilinx Video IP device
@@ -124,6 +127,7 @@
  * @rst_gpio: reset IP core GPIO
  * @max_width: Maximum width supported by this instance
  * @max_height: Maximum height supported by this instance
+ * @ppc: Pixels per clock control
  */
 struct xtpg_device {
 	struct xvip_device xvip;
@@ -150,6 +154,7 @@ struct xtpg_device {
 
 	u32 max_width;
 	u32 max_height;
+	u32 ppc;
 };
 
 static inline struct xtpg_device *to_tpg(struct v4l2_subdev *subdev)
@@ -177,8 +182,8 @@ static void xtpg_config_vtc(struct xtpg_device *xtpg, int width, int height)
 {
 
 	struct xvtc_config config = {
-		.hblank_start = width,
-		.hsync_start = width + 1,
+		.hblank_start = width / xtpg->ppc,
+		.hsync_start = width / xtpg->ppc + 1,
 		.vblank_start = height,
 		.vsync_start = height + 1,
 	};
@@ -186,7 +191,7 @@ static void xtpg_config_vtc(struct xtpg_device *xtpg, int width, int height)
 	unsigned int vtotal;
 
 	htotal = min_t(unsigned int, XVTC_MAX_HSIZE,
-		       v4l2_ctrl_g_ctrl(xtpg->hblank) + width);
+		       (v4l2_ctrl_g_ctrl(xtpg->hblank) + width) / xtpg->ppc);
 	vtotal = min_t(unsigned int, XVTC_MAX_VSIZE,
 		       v4l2_ctrl_g_ctrl(xtpg->vblank) + height);
 
@@ -930,6 +935,18 @@ static int xtpg_parse_of(struct xtpg_device *xtpg)
 		return -EINVAL;
 	}
 
+	ret = of_property_read_u32(node, "xlnx,ppc",
+				   &xtpg->ppc);
+	if (ret < 0) {
+		xtpg->ppc = XTPG_MIN_PPC;
+		dev_dbg(dev, "failed to read ppc in dt\n");
+	} else if ((xtpg->ppc > XTPG_MAX_PPC)
+		|| (xtpg->ppc < XTPG_MIN_PPC)
+		|| (xtpg->ppc % 2)) {
+		dev_err(dev, "Invalid ppc config in dt\n");
+		return -EINVAL;
+	}
+
 	ports = of_get_child_by_name(node, "ports");
 	if (ports == NULL)
 		ports = node;
-- 
2.31.1

