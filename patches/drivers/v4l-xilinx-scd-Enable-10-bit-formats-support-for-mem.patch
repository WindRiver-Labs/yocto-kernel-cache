From 39346015aa385ab0f5a4a9542807d5ca4be578b5 Mon Sep 17 00:00:00 2001
From: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Date: Tue, 26 Mar 2019 11:26:32 -0700
Subject: [PATCH 0583/1852] v4l: xilinx: scd: Enable 10 bit formats support for
 memory based IP

commit 2cce462b7bab33891897caaa6d2b0db6e3ec48d7 from
https://github.com/Xilinx/linux-xlnx.git

This patch enables 10bit format support in driver. This will configure
the 8bit or 10bit video format in IP based on media bus format set by
the application.

Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../xilinx/xilinx-scenechange-channel.c       | 50 ++++++++++++++-----
 1 file changed, 37 insertions(+), 13 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-scenechange-channel.c b/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
index ffa63b46ff24..37b2eb144c2e 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
+++ b/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
@@ -115,6 +115,7 @@ static int xscd_set_format(struct v4l2_subdev *subdev,
 				XSCD_MIN_WIDTH, XSCD_MAX_WIDTH);
 	format->height = clamp_t(unsigned int, fmt->format.height,
 				 XSCD_MIN_HEIGHT, XSCD_MAX_HEIGHT);
+	format->code = fmt->format.code;
 	fmt->format = *format;
 
 	return 0;
@@ -122,27 +123,50 @@ static int xscd_set_format(struct v4l2_subdev *subdev,
 
 static int xscd_chan_get_vid_fmt(u32 media_bus_fmt, bool memory_based)
 {
-	/*
-	 * FIXME: We have same media bus codes for both 8bit and 10bit pixel
-	 * formats. So, there is no way to differentiate between 8bit and 10bit
-	 * formats based on media bus code. This will be fixed when we have
-	 * dedicated media bus code for each format.
-	 */
-	if (memory_based)
-		return XSCD_COLOR_FMT_Y8;
+	u32 vid_fmt;
+
+	if (memory_based) {
+		switch (media_bus_fmt) {
+		case MEDIA_BUS_FMT_VYYUYY8_1X24:
+		case MEDIA_BUS_FMT_UYVY8_1X16:
+		case MEDIA_BUS_FMT_VUY8_1X24:
+			vid_fmt = XSCD_COLOR_FMT_Y8;
+			break;
+		case MEDIA_BUS_FMT_VYYUYY10_4X20:
+		case MEDIA_BUS_FMT_UYVY10_1X20:
+		case MEDIA_BUS_FMT_VUY10_1X30:
+			vid_fmt = XSCD_COLOR_FMT_Y10;
+			break;
+		default:
+			vid_fmt = XSCD_COLOR_FMT_Y8;
+		}
+
+		return vid_fmt;
+	}
 
+	/* Streaming based */
 	switch (media_bus_fmt) {
 	case MEDIA_BUS_FMT_VYYUYY8_1X24:
-		return XSCD_COLOR_FMT_YUV_420;
+	case MEDIA_BUS_FMT_VYYUYY10_4X20:
+		vid_fmt = XSCD_COLOR_FMT_YUV_420;
+		break;
 	case MEDIA_BUS_FMT_UYVY8_1X16:
-		return XSCD_COLOR_FMT_YUV_422;
+	case MEDIA_BUS_FMT_UYVY10_1X20:
+		vid_fmt = XSCD_COLOR_FMT_YUV_422;
+		break;
 	case MEDIA_BUS_FMT_VUY8_1X24:
-		return XSCD_COLOR_FMT_YUV_444;
+	case MEDIA_BUS_FMT_VUY10_1X30:
+		vid_fmt = XSCD_COLOR_FMT_YUV_444;
+		break;
 	case MEDIA_BUS_FMT_RBG888_1X24:
-		return XSCD_COLOR_FMT_RGB;
+	case MEDIA_BUS_FMT_RBG101010_1X30:
+		vid_fmt = XSCD_COLOR_FMT_RGB;
+		break;
 	default:
-		return XSCD_COLOR_FMT_YUV_420;
+		vid_fmt = XSCD_COLOR_FMT_YUV_420;
 	}
+
+	return vid_fmt;
 }
 
 /**
-- 
2.31.1

