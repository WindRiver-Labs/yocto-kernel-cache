From 876459106fb07741596be02c57efb5705618a49f Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Thu, 3 Sep 2020 12:05:49 -0700
Subject: [PATCH 1560/1852] v4l: xilinx: sdirxss: Update the ycbcr_enc

commit 2bf648acfced85efb561337c4bd1fc661fae25cd from
https://github.com/Xilinx/linux-xlnx.git

Update the ycbcr_enc for v4l2_mbus_framefmt based of the colorimetry,
SDI mode and ST352 payload.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../media/platform/xilinx/xilinx-sdirxss.c    | 22 +++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/drivers/media/platform/xilinx/xilinx-sdirxss.c b/drivers/media/platform/xilinx/xilinx-sdirxss.c
index 5fbfb8729d11..0e03b7a920e7 100644
--- a/drivers/media/platform/xilinx/xilinx-sdirxss.c
+++ b/drivers/media/platform/xilinx/xilinx-sdirxss.c
@@ -276,6 +276,9 @@
 #define XST352_BYTE4_BIT_DEPTH_10		0x1
 #define XST352_BYTE4_BIT_DEPTH_12		0x2
 
+/* Refer Table 3 ST2082-10:2018 */
+#define XST352_BYTE4_LUM_COL_DIFF_MASK		BIT(28)
+
 #define CLK_INT		148500000UL
 
 /**
@@ -1356,6 +1359,7 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 	state->static_hdr.eotf = V4L2_EOTF_TRADITIONAL_GAMMA_SDR;
 	format->colorspace = V4L2_COLORSPACE_SMPTE170M;
 	format->xfer_func = V4L2_XFER_FUNC_709;
+	format->ycbcr_enc = V4L2_YCBCR_ENC_601;
 
 	if (mode != XSDIRX_MODE_SD_MASK) {
 		u8 eotf = (payload & XST352_BYTE2_EOTF_MASK) >>
@@ -1384,9 +1388,11 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 		switch (colorimetry) {
 		case XST352_BYTE2_COLORIMETRY_BT709:
 			format->colorspace = V4L2_COLORSPACE_REC709;
+			format->ycbcr_enc = V4L2_YCBCR_ENC_709;
 			break;
 		case XST352_BYTE2_COLORIMETRY_UHDTV:
 			format->colorspace = V4L2_COLORSPACE_BT2020;
+			format->ycbcr_enc = V4L2_YCBCR_ENC_BT2020;
 			break;
 		default:
 			/*
@@ -1399,6 +1405,22 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 		}
 	}
 
+	/* Refer to Table 3 ST 2082-10:2018 */
+	if (mode == XSDIRX_MODE_12GI_OFFSET ||
+	    mode == XSDIRX_MODE_12GF_OFFSET) {
+		switch (sampling) {
+		case XST352_BYTE3_COLOR_FORMAT_420:
+		case XST352_BYTE3_COLOR_FORMAT_422:
+		case XST352_BYTE3_COLOR_FORMAT_YUV444:
+			if (payload & XST352_BYTE4_LUM_COL_DIFF_MASK)
+				format->ycbcr_enc =
+					V4L2_YCBCR_ENC_BT2020_CONST_LUM;
+			else
+				format->ycbcr_enc =
+					V4L2_YCBCR_ENC_BT2020;
+		}
+	}
+
 	dev_dbg(core->dev, "Stream width = %d height = %d Field = %d payload = 0x%08x ts = 0x%08x\n",
 		format->width, format->height, format->field, payload, val);
 	dev_dbg(core->dev, "frame rate numerator = %d denominator = %d\n",
-- 
2.31.1

