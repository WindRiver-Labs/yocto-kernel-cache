From 4386b876b76dd38bffd0432cdab86e22b9667216 Mon Sep 17 00:00:00 2001
From: Joyce Ooi <joyce.ooi@intel.com>
Date: Tue, 13 Oct 2020 18:16:17 +0800
Subject: [PATCH 094/120] net: eth: altera: initialize hardware clock to 0

commit 8a0e29f5db3b5de928edf18066478f04da09d6ee from
https://github.com/altera-opensource/linux-socfpga.git

This patch initializes the hardware clock to 0 when driver loads for the
first time. Besides that, tod_init function call is moved to tod_probe
to simplify the initialization flow.

Signed-off-by: Joyce Ooi <joyce.ooi@intel.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/net/ethernet/altera/altera_tse_main.c |  4 ---
 .../ethernet/altera/intel_fpga_qse_ll_main.c  |  6 -----
 drivers/net/ethernet/altera/intel_fpga_tod.c  | 26 +++++--------------
 3 files changed, 6 insertions(+), 30 deletions(-)

diff --git a/drivers/net/ethernet/altera/altera_tse_main.c b/drivers/net/ethernet/altera/altera_tse_main.c
index 36205e7f0969..f71c31573590 100644
--- a/drivers/net/ethernet/altera/altera_tse_main.c
+++ b/drivers/net/ethernet/altera/altera_tse_main.c
@@ -1258,10 +1258,6 @@ static int tse_open(struct net_device *dev)
 	if (dev->phydev)
 		phy_start(dev->phydev);
 
-	ret = intel_fpga_tod_init(&priv->ptp_priv);
-	if (ret)
-		netdev_warn(dev, "Failed PTP initialization\n");
-
 	priv->dma_priv.hwts_tx_en = 0;
 	priv->dma_priv.hwts_rx_en = 0;
 
diff --git a/drivers/net/ethernet/altera/intel_fpga_qse_ll_main.c b/drivers/net/ethernet/altera/intel_fpga_qse_ll_main.c
index e465a8918449..0bd1d18230c8 100644
--- a/drivers/net/ethernet/altera/intel_fpga_qse_ll_main.c
+++ b/drivers/net/ethernet/altera/intel_fpga_qse_ll_main.c
@@ -1052,12 +1052,6 @@ static int qse_open(struct net_device *dev)
 
 	spin_unlock_irqrestore(&priv->rxdma_irq_lock, flags);
 
-	ret = intel_fpga_tod_init(&priv->ptp_priv);
-	if (ret) {
-		netdev_warn(dev, "Failed PTP initialization\n");
-		goto init_error;
-	}
-
 	napi_enable(&priv->napi);
 	netif_start_queue(dev);
 
diff --git a/drivers/net/ethernet/altera/intel_fpga_tod.c b/drivers/net/ethernet/altera/intel_fpga_tod.c
index a40fde583d30..410a483f4dc0 100644
--- a/drivers/net/ethernet/altera/intel_fpga_tod.c
+++ b/drivers/net/ethernet/altera/intel_fpga_tod.c
@@ -278,31 +278,12 @@ static struct ptp_clock_info intel_fpga_tod_clock_ops = {
 	.enable = intel_fpga_tod_enable_feature,
 };
 
-/* Initialize PTP control block registers */
-int intel_fpga_tod_init(struct intel_fpga_tod_private *priv)
-{
-	struct timespec64 now;
-	int ret = 0;
-
-	ret = intel_fpga_tod_adjust_fine(&priv->ptp_clock_ops, 0l);
-	if (ret != 0)
-		goto out;
-
-	/* Initialize the hardware clock to the system time */
-	ktime_get_real_ts64(&now);
-	intel_fpga_tod_set_time(&priv->ptp_clock_ops, &now);
-
-	spin_lock_init(&priv->tod_lock);
-
-out:
-	return ret;
-}
-
 /* Register the PTP clock driver to kernel */
 int intel_fpga_tod_register(struct intel_fpga_tod_private *priv,
 			    struct device *device)
 {
 	int ret = 0;
+	struct timespec64 ts = { 0, 0 };
 
 	priv->ptp_clock_ops = intel_fpga_tod_clock_ops;
 
@@ -315,6 +296,9 @@ int intel_fpga_tod_register(struct intel_fpga_tod_private *priv,
 	if (priv->tod_clk)
 		ret = clk_prepare_enable(priv->tod_clk);
 
+	/* Initialize the hardware clock to zero */
+	intel_fpga_tod_set_time(&priv->ptp_clock_ops, &ts);
+
 	return ret;
 }
 
@@ -355,6 +339,8 @@ int intel_fpga_tod_probe(struct platform_device *pdev,
 		ret = -ENXIO;
 		goto err;
 	}
+
+	spin_lock_init(&priv->tod_lock);
 err:
 	return ret;
 }
-- 
2.31.1

