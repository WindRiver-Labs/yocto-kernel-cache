From 9f9920e120aca9d627a3d6f80b2fdcc3574845af Mon Sep 17 00:00:00 2001
From: Glenn Langedock <Glenn.Langedock@barco.com>
Date: Thu, 4 Jul 2019 22:12:06 -0700
Subject: [PATCH 0637/1852] v4l: xilinx: sdirxss: Clear processed interrupts
 only

commit 03a20968d435b365fcd536a459687515c7d172aa from
https://github.com/Xilinx/linux-xlnx.git

Bugfix: The xsdirx_clearintr function, clears all processed and pending
interrupts (xsdirx_clearintr -> xsdirxss_set -> xsdirxss_read + mask
-> xsdirxss_write). This is not correct as we can miss interrupts!

Replace with the xsdirxss_write function which clears the currently
processed interrupt only.

Signed-off-by: Glenn Langedock <Glenn.Langedock@barco.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-sdirxss.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-sdirxss.c b/drivers/media/platform/xilinx/xilinx-sdirxss.c
index 4e060ad796fc..e3981fb7e3ee 100644
--- a/drivers/media/platform/xilinx/xilinx-sdirxss.c
+++ b/drivers/media/platform/xilinx/xilinx-sdirxss.c
@@ -871,7 +871,7 @@ static irqreturn_t xsdirxss_irq_handler(int irq, void *dev_id)
 		u32 val1, val2;
 
 		dev_dbg(core->dev, "video lock interrupt\n");
-		xsdirx_clearintr(core, XSDIRX_INTR_VIDLOCK_MASK);
+		xsdirxss_write(core, XSDIRX_ISR_REG, XSDIRX_INTR_VIDLOCK_MASK);
 
 		val1 = xsdirxss_read(core, XSDIRX_MODE_DET_STAT_REG);
 		val2 = xsdirxss_read(core, XSDIRX_TS_DET_STAT_REG);
@@ -913,7 +913,8 @@ static irqreturn_t xsdirxss_irq_handler(int irq, void *dev_id)
 
 	if (status & XSDIRX_INTR_VIDUNLOCK_MASK) {
 		dev_dbg(core->dev, "video unlock interrupt\n");
-		xsdirx_clearintr(core, XSDIRX_INTR_VIDUNLOCK_MASK);
+		xsdirxss_write(core, XSDIRX_ISR_REG,
+			       XSDIRX_INTR_VIDUNLOCK_MASK);
 		xsdirx_streamdowncb(core);
 
 		memset(&state->event, 0, sizeof(state->event));
@@ -925,7 +926,8 @@ static irqreturn_t xsdirxss_irq_handler(int irq, void *dev_id)
 
 	if (status & XSDIRX_INTR_UNDERFLOW_MASK) {
 		dev_dbg(core->dev, "Video in to AXI4 Stream core underflow interrupt\n");
-		xsdirx_clearintr(core, XSDIRX_INTR_UNDERFLOW_MASK);
+		xsdirxss_write(core, XSDIRX_ISR_REG,
+			       XSDIRX_INTR_UNDERFLOW_MASK);
 
 		memset(&state->event, 0, sizeof(state->event));
 		state->event.type = V4L2_EVENT_XLNXSDIRX_UNDERFLOW;
@@ -934,7 +936,7 @@ static irqreturn_t xsdirxss_irq_handler(int irq, void *dev_id)
 
 	if (status & XSDIRX_INTR_OVERFLOW_MASK) {
 		dev_dbg(core->dev, "Video in to AXI4 Stream core overflow interrupt\n");
-		xsdirx_clearintr(core, XSDIRX_INTR_OVERFLOW_MASK);
+		xsdirxss_write(core, XSDIRX_ISR_REG, XSDIRX_INTR_OVERFLOW_MASK);
 
 		memset(&state->event, 0, sizeof(state->event));
 		state->event.type = V4L2_EVENT_XLNXSDIRX_OVERFLOW;
-- 
2.31.1

