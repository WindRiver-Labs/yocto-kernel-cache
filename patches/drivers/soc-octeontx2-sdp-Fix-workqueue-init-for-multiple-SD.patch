From 361cd58e58eb253b880732990669ac629bb13c01 Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Mon, 6 Jul 2020 12:46:39 -0700
Subject: [PATCH 0816/1921] soc: octeontx2-sdp: Fix workqueue init for multiple
 SDP PFs

Earlier code wasn't handling multiple SDP PF case as there was only
single workqueue in the driver. This was causing a crash during kernel
boot.

Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Change-Id: I16c07d23bdeb8f4f4ea1f8079ca8421bd6e78b14
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/37850
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/soc/marvell/octeontx2-sdp/sdp.c | 19 ++++++-------------
 drivers/soc/marvell/octeontx2-sdp/sdp.h |  2 ++
 2 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2-sdp/sdp.c b/drivers/soc/marvell/octeontx2-sdp/sdp.c
index e7586174ee85..22ecfc6cc23a 100644
--- a/drivers/soc/marvell/octeontx2-sdp/sdp.c
+++ b/drivers/soc/marvell/octeontx2-sdp/sdp.c
@@ -879,7 +879,6 @@ static void sdp_afpf_mbox_term(struct pci_dev *pdev)
 {
 	struct sdp_dev *sdp = pci_get_drvdata(pdev);
 
-	flush_workqueue(sdp->afpf_mbox_wq);
 	destroy_workqueue(sdp->afpf_mbox_wq);
 	otx2_mbox_destroy(&sdp->afpf_mbox);
 	otx2_mbox_destroy(&sdp->afpf_mbox_up);
@@ -1005,13 +1004,11 @@ void sdp_sysfs_remove(struct device *dev)
 
 static void sdp_host_handshake_fn(struct work_struct *wrk)
 {
-	struct host_hs_work *container_work;
 	union ring host_rinfo;
 	struct sdp_dev *sdp;
 	int err;
 
-	container_work = container_of(wrk, struct host_hs_work, sdp_work.work);
-	sdp = container_work->sdp;
+	sdp = container_of(wrk, struct sdp_dev, sdp_work.work);
 	host_rinfo.u = readq(sdp->sdp_base + SDPX_RINGX_IN_PKT_CNT(0));
 	if (host_rinfo.s.dir == HOST_TO_FW) {
 		neg_vf0_rings = host_rinfo.s.rppf;
@@ -1033,8 +1030,7 @@ static void sdp_host_handshake_fn(struct work_struct *wrk)
 		return;
 	}
 
-	queue_delayed_work(container_work->sdp_host_handshake,
-			   &container_work->sdp_work,  HZ * 1);
+	queue_delayed_work(sdp->sdp_host_handshake, &sdp->sdp_work,  HZ * 1);
 }
 
 static int sdp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
@@ -1165,11 +1161,10 @@ static int sdp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	dev_info(&pdev->dev, "Ring info 0x%llx\n", fw_rinfo.u);
 	writeq(fw_rinfo.u, sdp->sdp_base + SDPX_RINGX_IN_PKT_CNT(0));
 
-	hs_work.sdp = sdp;
-	hs_work.sdp_host_handshake = alloc_workqueue("sdp_epmode_fw_hs",
+	sdp->sdp_host_handshake = alloc_workqueue("sdp_epmode_fw_hs",
 						     WQ_MEM_RECLAIM, 0);
-	INIT_DELAYED_WORK(&hs_work.sdp_work, sdp_host_handshake_fn);
-	queue_delayed_work(hs_work.sdp_host_handshake, &hs_work.sdp_work, 0);
+	INIT_DELAYED_WORK(&sdp->sdp_work, sdp_host_handshake_fn);
+	queue_delayed_work(sdp->sdp_host_handshake, &sdp->sdp_work, 0);
 
 	/* Add to global list of PFs found */
 	spin_lock(&sdp_lst_lock);
@@ -1340,7 +1335,6 @@ static int __sriov_disable(struct pci_dev *pdev)
 	disable_vf_mbox_int(pdev);
 
 	if (sdp->pfvf_mbox_wq) {
-		flush_workqueue(sdp->pfvf_mbox_wq);
 		destroy_workqueue(sdp->pfvf_mbox_wq);
 		sdp->pfvf_mbox_wq = NULL;
 	}
@@ -1489,8 +1483,7 @@ static void sdp_remove(struct pci_dev *pdev)
 {
 	struct sdp_dev *sdp = pci_get_drvdata(pdev);
 
-	flush_workqueue(hs_work.sdp_host_handshake);
-	destroy_workqueue(hs_work.sdp_host_handshake);
+	destroy_workqueue(sdp->sdp_host_handshake);
 
 	spin_lock(&sdp_lst_lock);
 	list_del(&sdp->list);
diff --git a/drivers/soc/marvell/octeontx2-sdp/sdp.h b/drivers/soc/marvell/octeontx2-sdp/sdp.h
index f9768db1604b..bcbd1a97e4f5 100644
--- a/drivers/soc/marvell/octeontx2-sdp/sdp.h
+++ b/drivers/soc/marvell/octeontx2-sdp/sdp.h
@@ -78,6 +78,8 @@ struct sdp_dev {
 	struct workqueue_struct	*pfvf_mbox_wq; /* VF MBOX handler */
 	struct rvu_vf		*vf_info;
 	struct free_rsrcs_rsp	limits; /* Maximum limits for all VFs */
+	struct delayed_work	sdp_work;
+	struct workqueue_struct *sdp_host_handshake;
 };
 
 #endif /* SDP_H_ */
-- 
2.31.1

