From 4ca9ce9262a23dc501e7c7b39e65598870edc0be Mon Sep 17 00:00:00 2001
From: Dhaval Shah <dhaval.shah@xilinx.com>
Date: Mon, 13 Jan 2020 00:20:52 -0800
Subject: [PATCH 0814/1851] soc: xilinx: vcu: Update vcu init/reset sequence

commit 09ffb01764320a9691a14178c17298eed83bd61d from
https://github.com/Xilinx/linux-xlnx.git

Updated vcu init/reset sequence as per design changes.
If VCU reset GPIO is available then do assert and de-assert it before
enabling/disabling gasket isolation.
This GPIO is added because gasket isolation will be removed during startup
that requires access to SLCR register space. Post startup, the ownership of
the register interface lies with logiCORE IP

Signed-off-by: Dhaval Shah <dhaval.shah@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Rohit Visavalia <rohit.visavalia@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/soc/xilinx/xlnx_vcu_core.c | 27 +++++++++++++++++++++++++++
 include/soc/xilinx/xlnx_vcu.h      |  2 ++
 2 files changed, 29 insertions(+)

diff --git a/drivers/soc/xilinx/xlnx_vcu_core.c b/drivers/soc/xilinx/xlnx_vcu_core.c
index 9c3e5fb8f172..0415b283c133 100644
--- a/drivers/soc/xilinx/xlnx_vcu_core.c
+++ b/drivers/soc/xilinx/xlnx_vcu_core.c
@@ -11,6 +11,8 @@
 #include <linux/io.h>
 #include <linux/mfd/core.h>
 #include <linux/module.h>
+#include <linux/gpio/consumer.h>
+#include <linux/delay.h>
 #include <linux/of_platform.h>
 #include <soc/xilinx/xlnx_vcu.h>
 
@@ -78,6 +80,24 @@ static int xvcu_core_probe(struct platform_device *pdev)
 	 * Bit 0 : Gasket isolation
 	 * Bit 1 : put VCU out of reset
 	 */
+	xvcu->reset_gpio = devm_gpiod_get_optional(&pdev->dev, "reset",
+						   GPIOD_OUT_LOW);
+	if (IS_ERR(xvcu->reset_gpio)) {
+		ret = PTR_ERR(xvcu->reset_gpio);
+		dev_err(&pdev->dev, "failed to get reset gpio for vcu.\n");
+		return ret;
+	}
+
+	if (xvcu->reset_gpio) {
+		gpiod_set_value(xvcu->reset_gpio, 0);
+		/* min 2 clock cycle of vcu pll_ref, slowest freq is 33.33KHz */
+		usleep_range(60, 120);
+		gpiod_set_value(xvcu->reset_gpio, 1);
+		usleep_range(60, 120);
+	} else {
+		dev_warn(&pdev->dev, "No reset gpio info from dts for vcu. This may lead to incorrect functionality if VCU isolation is removed post initialization.\n");
+	}
+
 	iowrite32(VCU_GASKET_VALUE, xvcu->logicore_reg_ba + VCU_GASKET_INIT);
 
 	ret = mfd_add_devices(&pdev->dev, PLATFORM_DEVID_NONE, xvcu_devs,
@@ -111,6 +131,13 @@ static int xvcu_core_remove(struct platform_device *pdev)
 	mfd_remove_devices(&pdev->dev);
 
 	/* Add the the Gasket isolation and put the VCU in reset. */
+	if (xvcu->reset_gpio) {
+		gpiod_set_value(xvcu->reset_gpio, 0);
+		/* min 2 clock cycle of vcu pll_ref, slowest freq is 33.33KHz */
+		usleep_range(60, 120);
+		gpiod_set_value(xvcu->reset_gpio, 1);
+		usleep_range(60, 120);
+	}
 	iowrite32(0, xvcu->logicore_reg_ba + VCU_GASKET_INIT);
 
 	clk_disable_unprepare(xvcu->aclk);
diff --git a/include/soc/xilinx/xlnx_vcu.h b/include/soc/xilinx/xlnx_vcu.h
index 3ef730947fbc..ff03ede993ed 100644
--- a/include/soc/xilinx/xlnx_vcu.h
+++ b/include/soc/xilinx/xlnx_vcu.h
@@ -17,6 +17,7 @@
  * struct xvcu_device - Xilinx VCU init device structure
  * @dev: Platform device
  * @pll_ref: pll ref clock source
+ * @reset_gpio: vcu reset gpio
  * @aclk: axi clock source
  * @logicore_reg_ba: logicore reg base address
  * @vcu_slcr_ba: vcu_slcr Register base address
@@ -25,6 +26,7 @@ struct xvcu_device {
 	struct device *dev;
 	struct clk *pll_ref;
 	struct clk *aclk;
+	struct gpio_desc *reset_gpio;
 	void __iomem *logicore_reg_ba;
 	void __iomem *vcu_slcr_ba;
 };
-- 
2.31.1

