From ab59fd44280040b6f67e59ff85a41b3e4c32d831 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Tue, 19 Mar 2019 23:19:34 +0530
Subject: [PATCH 129/767] octeontx2-af: Disable SQ manager sticky mode
 operation

commit 4de0b7205fb3f5aa271c15d822a86884f9964b79 from
git@git.assembla.com:cavium/WindRiver.linux.git

When multiple SQs are mappe dto same SMQ and are transmitting
packets simultaneously then it could result in SQ being stalled.
Disabling SQ manager's sticky mode workarounds this HW issue.

Change-Id: Ifd3a95f851b45623583b539338ad8923157930ac
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c | 9 +++++++++
 drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h   | 1 +
 2 files changed, 10 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
index 9f5fce8672fb..2934caf6a9dc 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
@@ -896,6 +896,7 @@ static void rvu_nix_enable_internal_bp(struct rvu *rvu, int blkaddr)
 int rvu_nix_fixes_init(struct rvu *rvu, struct nix_hw *nix_hw, int blkaddr)
 {
 	int err;
+	u64 cfg;
 
 	if (!is_rvu_9xxx_A0(rvu))
 		return 0;
@@ -903,6 +904,14 @@ int rvu_nix_fixes_init(struct rvu *rvu, struct nix_hw *nix_hw, int blkaddr)
 	/* Set chan/link to backpressure TL3 instead of TL2 */
 	rvu_write64(rvu, blkaddr, NIX_AF_PSE_CHANNEL_LEVEL, 0x01);
 
+	/* Disable SQ manager's sticky mode operation (set TM6 = 0)
+	 * This sticky mode is known to cause SQ stalls when multiple
+	 * SQs are mapped to same SMQ and transmitting pkts simultaneously
+	 */
+	cfg = rvu_read64(rvu, blkaddr, NIX_AF_SQM_DBG_CTL_STATUS);
+	cfg &= ~BIT_ULL(15);
+	rvu_write64(rvu, blkaddr, NIX_AF_SQM_DBG_CTL_STATUS, cfg);
+
 	err = rvu_nix_tx_stall_workaround_init(rvu, nix_hw, blkaddr);
 	if (err)
 		return err;
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
index 21a14eb64395..441cbf69d538 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
@@ -247,6 +247,7 @@
 #define NIX_AF_DEBUG_NPC_RESP_DATAX(a)          (0x680 | (a) << 3)
 #define NIX_AF_SMQX_CFG(a)                      (0x700 | (a) << 16)
 #define NIX_AF_SMQX_STATUS(a)			(0x730 | (a) << 16)
+#define NIX_AF_SQM_DBG_CTL_STATUS		(0x750)
 #define NIX_AF_PSE_CHANNEL_LEVEL                (0x800)
 #define NIX_AF_PSE_SHAPER_CFG                   (0x810)
 #define NIX_AF_TX_EXPR_CREDIT			(0x830)
-- 
2.31.1

