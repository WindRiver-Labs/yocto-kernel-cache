From c7438b7c6c2ff0760bee1090f6e06052c12e4ac7 Mon Sep 17 00:00:00 2001
From: Srujana Challa <schalla@marvell.com>
Date: Tue, 22 Jun 2021 14:18:01 +0530
Subject: [PATCH 1611/1921] octeontx2-af: remove usage of resource limits for
 CPT

PF limits in AF driver is not being correctly used
as CPT PF driver doesn't support limits for it's VFs
in 5.4 kernel.
So, this patch removes limits usage for CPT.

Signed-off-by: Srujana Challa <schalla@marvell.com>
Change-Id: I710a2c78874a962cac1fe3cf0a10443b10cb60d0
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/54615
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../marvell/octeontx2/af/rvu_validation.c      | 18 +-----------------
 1 file changed, 1 insertion(+), 17 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
index e126b6f5af71..f71c80edfeff 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
@@ -367,8 +367,7 @@ int rvu_mbox_handler_free_rsrc_cnt(struct rvu *rvu, struct msg_req *req,
 	rsp->tim = rvu->pf_limits.tim->a[pf].val - curlfs;
 
 	block = &hw->block[BLKADDR_CPT0];
-	curlfs = rvu_blk_count_rsrc(block, pcifunc, RVU_PFVF_PF_SHIFT);
-	rsp->cpt = rvu->pf_limits.cpt->a[pf].val - curlfs;
+	rsp->cpt = rvu_rsrc_free_count(&block->lf);
 
 	block = &hw->block[BLKADDR_CPT1];
 	rsp->cpt1 = rvu_rsrc_free_count(&block->lf);
@@ -585,21 +584,6 @@ int rvu_check_rsrc_policy(struct rvu *rvu, struct rsrc_attach *req,
 			goto fail;
 	}
 
-	if (req->cptlfs) {
-		block = &hw->block[BLKADDR_CPT0];
-		mappedlfs = rvu_get_rsrc_mapcount(pfvf, block->addr);
-		free_lfs = rvu_rsrc_free_count(&block->lf);
-		limit = rvu->pf_limits.cpt->a[pf].val;
-		familylfs = rvu_blk_count_rsrc(block, pcifunc,
-					       RVU_PFVF_PF_SHIFT);
-		/* Check if additional resources are available */
-		delta = req->cptlfs - mappedlfs;
-		if ((delta > 0) && /* always allow usage decrease */
-		    ((limit < familylfs + delta) ||
-		     (delta > free_lfs)))
-			goto fail;
-	}
-
 	return 0;
 
 fail:
-- 
2.31.1

