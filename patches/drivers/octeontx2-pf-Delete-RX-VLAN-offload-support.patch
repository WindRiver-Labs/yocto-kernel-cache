From e0ca8e9ca7cb0caa54b54822be528590877690ad Mon Sep 17 00:00:00 2001
From: Subbaraya Sundeep <sbhatta@marvell.com>
Date: Wed, 3 Jul 2019 18:45:02 +0530
Subject: [PATCH 267/767] octeontx2-pf: Delete RX VLAN offload support

commit a2fc0c8acb312ffc93b93cfa34c2be431b8f7b98 from
git@git.assembla.com:cavium/WindRiver.linux.git

VLAN offload will be supported along with ntuple and
unicast filters hence deleted existing method.

Change-Id: I838ea13fcee8500063b4988b2bf2d3e7c78bde82
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/12054
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.c       |  53 --------
 .../marvell/octeontx2/nic/otx2_common.h       |   4 -
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c  | 120 +-----------------
 3 files changed, 1 insertion(+), 176 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index ffdf4fadcbea..057e78146b77 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -22,59 +22,6 @@ static inline void otx2_nix_rq_op_stats(struct queue_stats *stats,
 static inline void otx2_nix_sq_op_stats(struct queue_stats *stats,
 					struct otx2_nic *pfvf, int qidx);
 
-int otx2_install_rxvlan_offload_flow(struct otx2_nic *pfvf)
-{
-	struct npc_install_flow_req *req;
-	int err;
-
-	if (!pfvf->rxvlan_alloc)
-		return -EINVAL;
-
-	otx2_mbox_lock(&pfvf->mbox);
-	req = otx2_mbox_alloc_msg_npc_install_flow(&pfvf->mbox);
-	if (!req) {
-		otx2_mbox_unlock(&pfvf->mbox);
-		return -ENOMEM;
-	}
-
-	req->entry = pfvf->rxvlan_entry;
-	req->intf = NIX_INTF_RX;
-	req->channel = pfvf->rx_chan_base;
-	req->op = NIX_RX_ACTIONOP_UCAST;
-	req->features = BIT_ULL(NPC_OUTER_VID);
-	req->vtag0_valid = 1;
-	req->vtag0_type = 0;
-
-	/* Send message to AF */
-	err = otx2_sync_mbox_msg(&pfvf->mbox);
-	otx2_mbox_unlock(&pfvf->mbox);
-	return err;
-}
-EXPORT_SYMBOL(otx2_install_rxvlan_offload_flow);
-
-int otx2_delete_rxvlan_offload_flow(struct otx2_nic *pfvf)
-{
-	struct npc_delete_flow_req *req;
-	int err;
-
-	if (!pfvf->rxvlan_alloc)
-		return -EINVAL;
-
-	otx2_mbox_lock(&pfvf->mbox);
-	req = otx2_mbox_alloc_msg_npc_delete_flow(&pfvf->mbox);
-	if (!req) {
-		otx2_mbox_unlock(&pfvf->mbox);
-		return -ENOMEM;
-	}
-
-	req->entry = pfvf->rxvlan_entry;
-	/* Send message to AF */
-	err = otx2_sync_mbox_msg(&pfvf->mbox);
-	otx2_mbox_unlock(&pfvf->mbox);
-	return err;
-}
-EXPORT_SYMBOL(otx2_delete_rxvlan_offload_flow);
-
 void otx2_update_lmac_stats(struct otx2_nic *pfvf)
 {
 	struct msg_req *req;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index 12e519906724..7075f855ee04 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -192,8 +192,6 @@ struct otx2_nic {
 	u8			total_vfs;
 	struct otx2_vf_config	*vf_configs;
 	struct cgx_link_user_info linfo;
-	u16			rxvlan_entry;
-	bool			rxvlan_alloc;
 
 	bool			entries_alloc;
 	u32			max_flows;
@@ -531,8 +529,6 @@ int otx2_update_rq_stats(struct otx2_nic *pfvf, int qidx);
 int otx2_update_sq_stats(struct otx2_nic *pfvf, int qidx);
 void otx2_set_ethtool_ops(struct net_device *netdev);
 void otx2vf_set_ethtool_ops(struct net_device *netdev);
-int otx2_install_rxvlan_offload_flow(struct otx2_nic *pfvf);
-int otx2_delete_rxvlan_offload_flow(struct otx2_nic *pfvf);
 int otx2_destroy_ethtool_flows(struct otx2_nic *pfvf);
 
 int otx2_open(struct net_device *netdev);
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 9282acd82902..f0ecd8b8ebc9 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1111,52 +1111,6 @@ static int otx2_cgx_config_loopback(struct otx2_nic *pf, bool enable)
 	return err;
 }
 
-static int otx2_enable_rxvlan(struct otx2_nic *pf, bool enable)
-{
-	struct nix_vtag_config *req;
-	struct mbox_msghdr *rsp_hdr;
-	int err;
-
-	if (enable) {
-		err = otx2_install_rxvlan_offload_flow(pf);
-		if (err)
-			return err;
-	} else {
-		err = otx2_delete_rxvlan_offload_flow(pf);
-		if (err)
-			return err;
-	}
-
-	otx2_mbox_lock(&pf->mbox);
-	req = otx2_mbox_alloc_msg_nix_vtag_cfg(&pf->mbox);
-	if (!req) {
-		otx2_mbox_unlock(&pf->mbox);
-		return -ENOMEM;
-	}
-
-	req->vtag_size = 0;
-	req->cfg_type = 1;
-	/* must be set to zero */
-	req->rx.vtag_type = 0;
-	req->rx.strip_vtag = enable;
-	req->rx.capture_vtag = enable;
-
-	err = otx2_sync_mbox_msg(&pf->mbox);
-	if (err) {
-		otx2_mbox_unlock(&pf->mbox);
-		return err;
-	}
-
-	rsp_hdr = otx2_mbox_get_rsp(&pf->mbox.mbox, 0, &req->hdr);
-	if (IS_ERR(rsp_hdr)) {
-		otx2_mbox_unlock(&pf->mbox);
-		return PTR_ERR(rsp_hdr);
-	}
-
-	otx2_mbox_unlock(&pf->mbox);
-	return rsp_hdr->rc;
-}
-
 int otx2_set_real_num_queues(struct net_device *netdev,
 			     int tx_queues, int rx_queues)
 {
@@ -1177,68 +1131,6 @@ int otx2_set_real_num_queues(struct net_device *netdev,
 }
 EXPORT_SYMBOL(otx2_set_real_num_queues);
 
-static void otx2_alloc_rxvlan(struct otx2_nic *pf)
-{
-	netdev_features_t old, wanted = NETIF_F_HW_VLAN_STAG_RX |
-					NETIF_F_HW_VLAN_CTAG_RX;
-	struct npc_mcam_alloc_entry_req *req;
-	struct npc_mcam_alloc_entry_rsp *rsp;
-	int err;
-
-	otx2_mbox_lock(&pf->mbox);
-	req = otx2_mbox_alloc_msg_npc_mcam_alloc_entry(&pf->mbox);
-	if (!req) {
-		otx2_mbox_unlock(&pf->mbox);
-		return;
-	}
-
-	req->contig = false;
-	req->count = 1;
-	/* Send message to AF */
-	err = otx2_sync_mbox_msg(&pf->mbox);
-	if (err) {
-		otx2_mbox_unlock(&pf->mbox);
-		return;
-	}
-	rsp = (struct npc_mcam_alloc_entry_rsp *)otx2_mbox_get_rsp
-						 (&pf->mbox.mbox, 0, &req->hdr);
-	if (IS_ERR(rsp)) {
-		otx2_mbox_unlock(&pf->mbox);
-		return;
-	}
-
-	otx2_mbox_unlock(&pf->mbox);
-	pf->rxvlan_entry = rsp->entry_list[0];
-	pf->rxvlan_alloc = true;
-
-	old = pf->netdev->hw_features;
-	if (rsp->hdr.rc) {
-		/* in case of failure during rxvlan allocation
-		 * features must be updated accordingly
-		 */
-		dev_info(pf->dev,
-			 "Disabling RX VLAN offload due to non-availability of MCAM space\n");
-		pf->netdev->hw_features &= ~wanted;
-		pf->netdev->features &= ~wanted;
-	} else if (!(pf->netdev->hw_features & wanted)) {
-		/* we are recovering from the previous failure */
-		pf->netdev->hw_features |= wanted;
-		err = otx2_enable_rxvlan(pf, true);
-		if (!err)
-			pf->netdev->features |= wanted;
-	} else if (pf->netdev->features & wanted) {
-		/* interface is going up */
-		err = otx2_enable_rxvlan(pf, true);
-		if (err) {
-			pf->netdev->features &= ~wanted;
-			netdev_features_change(pf->netdev);
-		}
-	}
-
-	if (old != pf->netdev->hw_features)
-		netdev_features_change(pf->netdev);
-}
-
 static irqreturn_t otx2_q_intr_handler(int irq, void *data)
 {
 	struct otx2_nic *pf = data;
@@ -1709,10 +1601,6 @@ int otx2_open(struct net_device *netdev)
 		otx2_config_hw_rx_tstamp(pf, true);
 	}
 
-	/* Alloc rxvlan entry in MCAM for PFs only */
-	if (!(pf->pcifunc & RVU_PFVF_FUNC_MASK))
-		otx2_alloc_rxvlan(pf);
-
 	return 0;
 
 err_free_cints:
@@ -1849,10 +1737,6 @@ static int otx2_set_features(struct net_device *netdev,
 		return otx2_cgx_config_loopback(pf,
 						features & NETIF_F_LOOPBACK);
 
-	if ((changed & NETIF_F_HW_VLAN_CTAG_RX) && netif_running(netdev))
-		return otx2_enable_rxvlan(pf,
-					  features & NETIF_F_HW_VLAN_CTAG_RX);
-
 	if ((changed & NETIF_F_NTUPLE) && !ntuple)
 		otx2_destroy_ethtool_flows(pf);
 
@@ -2277,9 +2161,7 @@ static int otx2_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 			       NETIF_F_IPV6_CSUM | NETIF_F_RXHASH |
 			       NETIF_F_SG | NETIF_F_TSO | NETIF_F_TSO6);
 	netdev->features |= netdev->hw_features;
-	netdev->hw_features |= NETIF_F_LOOPBACK | NETIF_F_NTUPLE |
-			       NETIF_F_HW_VLAN_STAG_RX |
-			       NETIF_F_HW_VLAN_CTAG_RX;
+	netdev->hw_features |= NETIF_F_LOOPBACK | NETIF_F_NTUPLE;
 
 	netdev->gso_max_segs = OTX2_MAX_GSO_SEGS;
 	netdev->watchdog_timeo = OTX2_TX_TIMEOUT;
-- 
2.31.1

