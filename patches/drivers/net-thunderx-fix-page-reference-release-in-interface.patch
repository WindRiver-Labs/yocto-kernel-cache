From d2c05c481310e172cb674b5681cc0f426efa10c5 Mon Sep 17 00:00:00 2001
From: Hariprasad Kelam <hkelam@marvell.com>
Date: Tue, 14 Jan 2020 12:14:04 +0530
Subject: [PATCH 448/767] net: thunderx: fix page reference release in
 interface tear down

commit de8b00fd854d43ed2d6cbd412582e0b89d8b824c from
git@git.assembla.com:cavium/WindRiver.linux.git

Driver follows a method of taking one extra reference on the
page for recycling in non XDP mode. In inerface down case,
the extra page reference needs to be released. But current
code releases all page references instead of one. This patch
corrects this behaviour.

Fixes below problem:
BUG: Bad page state in process swapper/0 pfn:3dd23
[ 569.633406] page:ffff7fe000f748c0 count:-30 mapcount:0 mapping: (null)
index:0x0
[ 569.641583] flags: 0x1fffc00000000000()
[ 569.645415] raw: 1fffc00000000000 0000000000000000 0000000000000000
ffffffe2ffffffff
[ 569.653156] raw: dead000000000100 dead000000000200 0000000000000000
0000000000000000
[ 569.660896] page dumped because: nonzero _count
[ 569.665420] Modules linked in: octeontx_zip octeontx
[ 569.670389] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.14.76-10.0.0
[ 569.676998] Hardware name: Marvell OcteonTX CN83XX board (DT)
[ 569.682739] Call trace:
[ 569.685185] [<ffff000008089498>] dump_backtrace+0x0/0x350
[ 569.690581] [<ffff0000080897fc>] show_stack+0x14/0x20
[ 569.695629] [<ffff00000900c8a0>] dump_stack+0x90/0xb0
[ 569.700677] [<ffff0000081f3e68>] bad_page+0xe0/0x140
[ 569.705637] [<ffff0000081f3fd4>] check_new_page_bad+0x64/0xa0
[ 569.711379] [<ffff0000081f7ddc>] get_page_from_freelist+0x9bc/0xba8
[ 569.717642] [<ffff0000081f8578>] __alloc_pages_nodemask+0xd8/0xe78
[ 569.723819] [<ffff000008252c7c>] alloc_pages_current+0x7c/0xe8
[ 569.729649] [<ffff000008979180>] nicvf_refill_rbdr+0x300/0x550
[ 569.735478] [<ffff00000897944c>] nicvf_rbdr_task+0x1c/0x50
[ 569.740960] [<ffff0000080e45c4>] tasklet_hi_action+0x6c/0x108
[ 569.746702] [<ffff000008081954>] __do_softirq+0x144/0x3b8
[ 569.752096] [<ffff0000080e4128>] irq_exit+0x138/0x158
[ 569.757143] [<ffff000008137608>] __handle_domain_irq+0x70/0x128
[ 569.763058] [<ffff0000080816fc>] gic_handle_irq+0x7c/0x184

Change-Id: Ie13b93fa635aa20b3ff21d243ecb77601c05c282
Signed-off-by: Hariprasad Kelam <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/21570
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/cavium/thunder/nicvf_queues.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_queues.c b/drivers/net/ethernet/cavium/thunder/nicvf_queues.c
index 0d9c2ca25f35..9bb55be103b8 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_queues.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_queues.c
@@ -359,7 +359,7 @@ static void nicvf_free_rbdr(struct nicvf *nic, struct rbdr *rbdr)
 	/* Release additional page references held for recycling */
 	head = 0;
 	while (head < rbdr->pgcnt) {
-		pgcache = &rbdr->pgcache[head];
+		pgcache = &rbdr->pgcache[head++];
 		if (pgcache->page && page_ref_count(pgcache->page) != 0) {
 			if (rbdr->is_xdp) {
 				page_ref_sub(pgcache->page,
@@ -367,7 +367,6 @@ static void nicvf_free_rbdr(struct nicvf *nic, struct rbdr *rbdr)
 			}
 			put_page(pgcache->page);
 		}
-		head++;
 	}
 	kfree(rbdr->pgcache);
 	/* Free RBDR ring */
-- 
2.31.1

