From 9bb5d8f02860eb6a1997ee2d6e3659456f96953e Mon Sep 17 00:00:00 2001
From: Rajan Vaja <rajan.vaja@xilinx.com>
Date: Mon, 10 Feb 2020 12:22:46 +0530
Subject: [PATCH 1124/1852] clk: zynqmp: Fix power of two divider calculation

commit 83969916990206c2bf746d4238cd7132b0cc4c5b from
https://github.com/Xilinx/linux-xlnx.git

Divider calculation in case of power of two divider is incorrect i.e.,
divisor needs to be incremented with power of two instead of
incrementing by 1. So modify zynqmp_compute_divider() to compute
correct divider in case of power of two divider.

Signed-off-by: Rajan Vaja <rajan.vaja@xilinx.com>
Reviewed-by: Jolly Shah <jolly.shah@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Link: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/drivers/clk/zynqmp/divider.c?h=v5.6-rc1&id=34bbe036170785bd288d8a74573ee8ad7946f4a1
State: upstream (34bbe036170785bd288d8a74573ee8ad7946f4a1)
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/clk/zynqmp/divider.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/clk/zynqmp/divider.c b/drivers/clk/zynqmp/divider.c
index 16583b789352..b769984e0e77 100644
--- a/drivers/clk/zynqmp/divider.c
+++ b/drivers/clk/zynqmp/divider.c
@@ -119,21 +119,30 @@ static void zynqmp_compute_divider(struct clk_hw *hw,
 	int div2;
 	long error = LONG_MAX;
 	struct clk_hw *parent_hw = clk_hw_get_parent(hw);
+	struct zynqmp_clk_divider *divider = to_zynqmp_clk_divider(hw);
 	struct zynqmp_clk_divider *pdivider = to_zynqmp_clk_divider(parent_hw);
 
 	if (!pdivider)
 		return;
 
 	*bestdiv = 1;
-	for (div1 = 1; div1 <= pdivider->max_div; div1++) {
-		for (div2 = 1; div2 <= max_div; div2++) {
+	for (div1 = 1; div1 <= pdivider->max_div;) {
+		for (div2 = 1; div2 <= max_div;) {
 			long new_error = ((parent_rate / div1) / div2) - rate;
 
 			if (abs(new_error) < abs(error)) {
 				*bestdiv = div2;
 				error = new_error;
 			}
+			if (divider->flags & CLK_DIVIDER_POWER_OF_TWO)
+				div2 = div2 << 1;
+			else
+				div2++;
 		}
+		if (pdivider->flags & CLK_DIVIDER_POWER_OF_TWO)
+			div1 = div1 << 1;
+		else
+			div1++;
 	}
 }
 
-- 
2.31.1

