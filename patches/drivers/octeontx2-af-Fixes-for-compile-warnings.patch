From 201b59b603e3e54822e7d119d8f80ee7ab1d0083 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Fri, 12 Mar 2021 18:13:33 +0530
Subject: [PATCH 1314/1921] octeontx2-af: Fixes for compile warnings

Fixed warnings seen when compiled with W=1 option.

Change-Id: Ia555b1bdb28b9f924d1fd57d32f929f692c5c56c
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/47748
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu.c            | 3 ++-
 drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c    | 3 +--
 drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c | 3 ---
 3 files changed, 3 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index a3782605686b..5be1d32b2683 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -2917,9 +2917,10 @@ static void rvu_unregister_interrupts(struct rvu *rvu)
 		    INTR_MASK(rvu->hw->total_pfs) & ~1ULL);
 
 	for (irq = 0; irq < rvu->num_vec; irq++) {
-		if (rvu->irq_allocated[irq])
+		if (rvu->irq_allocated[irq]) {
 			free_irq(pci_irq_vector(rvu->pdev, irq), rvu);
 			rvu->irq_allocated[irq] = false;
+		}
 	}
 
 	pci_free_irq_vectors(rvu->pdev);
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
index 01a40d87b864..050b735e9903 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_debugfs.c
@@ -228,7 +228,7 @@ static ssize_t rvu_dbg_rsrc_attach_status(struct file *filp,
 					  char __user *buffer,
 					  size_t count, loff_t *ppos)
 {
-	int index, off = 0, flag = 0, go_back = 0, off_prev, len = 0;
+	int index, off = 0, flag = 0, go_back = 0, len = 0;
 	struct rvu *rvu = filp->private_data;
 	int lf, pf, vf, pcifunc;
 	struct rvu_block block;
@@ -281,7 +281,6 @@ static ssize_t rvu_dbg_rsrc_attach_status(struct file *filp,
 				block = rvu->hw->block[index];
 				if (!strlen(block.name))
 					continue;
-				off_prev = off;
 				len = 0;
 				lfs[len] = '\0';
 				for (lf = 0; lf < block.lf.max; lf++) {
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
index 59786b70ea07..573239c70ef9 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
@@ -231,14 +231,11 @@ static int free_rsrc_cnt(struct rvu *rvu, struct msg_req *req,
 			 struct free_rsrcs_rsp *rsp)
 {
 	struct rvu_hwinfo *hw = rvu->hw;
-	u16 pcifunc = req->hdr.pcifunc;
 	struct rvu_block *block;
 	struct nix_txsch *txsch;
 	struct nix_hw *nix_hw;
-	int pf;
 
 	mutex_lock(&rvu->rsrc_lock);
-	pf = rvu_get_pf(pcifunc);
 
 	block = &hw->block[BLKADDR_NPA];
 	rsp->npa = rvu_rsrc_free_count(&block->lf);
-- 
2.31.1

