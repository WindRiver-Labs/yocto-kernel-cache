From 275771f9b6c27a5c49693faf75b4a9e6ac92b2a3 Mon Sep 17 00:00:00 2001
From: Hans-Peter Keil <Hans-Peter.Keil@rohde-schwarz.com>
Date: Wed, 14 Oct 2020 17:11:51 +0530
Subject: [PATCH 1715/1851] mtd: spi-nor: Fix for setting quad mode on Spansion
 Flash in dual parallel

commit 308d828e6c36efc6be5813d67f1d94b0f9f180af from
https://github.com/Xilinx/linux-xlnx.git

Quad configuraiton. within spansion_read_cr_quad_enable quad bit is set to
sr_cr[1] after reading od cr. Following read_sr() overwrites sr_cr[1] in
case of parallel configuration (Reads two Bytes into nor->bouncebuf; sr_cr
is a pointer to this buffer).

Signed-off-by: Hans-Peter Keil <Hans-Peter.Keil@rohde-schwarz.com>
Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index f3ee53e2b845..12d1b61350aa 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -2150,6 +2150,7 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 	struct device *dev = nor->dev;
 	u8 *sr_cr = nor->bouncebuf;
 	int ret;
+	u8 cr_new;
 
 	/* Check current Quad Enable bit value. */
 	ret = read_cr(nor);
@@ -2161,7 +2162,11 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 	if (ret & CR_QUAD_EN_SPAN)
 		return 0;
 
-	sr_cr[1] = ret | CR_QUAD_EN_SPAN;
+	/*
+	 * Cannot write to sr_cr[1] directly, will be overwritten in read_sr()
+	 * in case nor->isparallel is set.
+	 */
+	cr_new = ret | CR_QUAD_EN_SPAN;
 
 	/* Keep the current value of the Status Register. */
 	ret = read_sr(nor);
@@ -2170,6 +2175,7 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 		return -EINVAL;
 	}
 	sr_cr[0] = ret;
+	sr_cr[1] = cr_new;
 
 	ret = write_sr_cr(nor, sr_cr);
 	if (ret)
-- 
2.31.1

