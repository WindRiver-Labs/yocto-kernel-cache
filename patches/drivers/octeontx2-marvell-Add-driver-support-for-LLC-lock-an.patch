From 339551b52fcee6df582dc56603697428e70bdcb0 Mon Sep 17 00:00:00 2001
From: Bhaskara Budiredla <bbudiredla@marvell.com>
Date: Thu, 4 Jun 2020 12:02:03 +0530
Subject: [PATCH 0512/1921] octeontx2: marvell: Add driver support for LLC lock
 and unlock

This patch adds cache management interface for
Marvell's OcteonTX2 LLC cache Lock and Unlock operations.

Change-Id: I7c19eb715edaef3ffc724deba2506e79c73af0b9
Signed-off-by: Bhaskara Budiredla <bbudiredla@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/29443
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/soc/marvell/Kconfig                |   8 ++
 drivers/soc/marvell/Makefile               |   1 +
 drivers/soc/marvell/octeontx2-llc/Makefile |   8 ++
 drivers/soc/marvell/octeontx2-llc/llc.c    | 117 +++++++++++++++++++++
 include/linux/soc/marvell/llc.h            |  17 +++
 5 files changed, 151 insertions(+)
 create mode 100644 drivers/soc/marvell/octeontx2-llc/Makefile
 create mode 100644 drivers/soc/marvell/octeontx2-llc/llc.c
 create mode 100644 include/linux/soc/marvell/llc.h

diff --git a/drivers/soc/marvell/Kconfig b/drivers/soc/marvell/Kconfig
index a9086c9f8f46..0cb19f9caf62 100644
--- a/drivers/soc/marvell/Kconfig
+++ b/drivers/soc/marvell/Kconfig
@@ -86,4 +86,12 @@ config GTI_WATCHDOG
 	address space for the application to directly poke the
 	GTI watchdog without any kernel support and entry.
 
+config OCTEONTX2_LLC
+	bool "OcteonTX2 LLC Manager driver"
+	depends on ARM64
+	default y
+	help
+	  This driver offers cache management interface for
+	  Marvell's OcteonTX2 LLC cache Lock and Unlock operations.
+
 endmenu
diff --git a/drivers/soc/marvell/Makefile b/drivers/soc/marvell/Makefile
index 29c3b2b5db3c..14b46a9690db 100644
--- a/drivers/soc/marvell/Makefile
+++ b/drivers/soc/marvell/Makefile
@@ -2,3 +2,4 @@
 obj-y		+= gti/
 obj-y		+= octeontx2-rm/
 obj-y		+= octeontx2-dpi/
+obj-y		+= octeontx2-llc/
diff --git a/drivers/soc/marvell/octeontx2-llc/Makefile b/drivers/soc/marvell/octeontx2-llc/Makefile
new file mode 100644
index 000000000000..85eb9d6f89dc
--- /dev/null
+++ b/drivers/soc/marvell/octeontx2-llc/Makefile
@@ -0,0 +1,8 @@
+# SPDX-License-Identifier: GPL-2.0
+#
+# Makefile for Marvell's OcteonTX2 LLC driver
+#
+
+obj-$(CONFIG_OCTEONTX2_LLC) += octeontx2_llc.o
+
+octeontx2_llc-y := llc.o
diff --git a/drivers/soc/marvell/octeontx2-llc/llc.c b/drivers/soc/marvell/octeontx2-llc/llc.c
new file mode 100644
index 000000000000..3d624542f861
--- /dev/null
+++ b/drivers/soc/marvell/octeontx2-llc/llc.c
@@ -0,0 +1,117 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2020 Marvell International Ltd.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/spinlock.h>
+#include <linux/soc/marvell/llc.h>
+
+MODULE_AUTHOR("Marvell International Ltd.");
+MODULE_DESCRIPTION("Last Level Cache Manager for OcteonTX2");
+MODULE_LICENSE("GPL v2");
+
+/* SYS instruction opcode for LLC Hit Writeback Invalidate */
+#define CVMCACHEWBIL3		"#0,c11,c1,#2"
+/* SYS instruction opcode for LLC Fetch and Lock */
+#define CVMCACHELCKL3		"#0,c11,c1,#4"
+/* LLC cache line granule size on OcteonTx2 */
+#define CVMCACHELCKL3_LINESIZE	BIT_ULL(7)
+
+static spinlock_t llc_lock;
+
+static bool is_octeontx2(void)
+{
+	u32 model;
+
+	model = read_cpuid_id();
+	model &= MIDR_IMPLEMENTOR_MASK | MIDR_ARCHITECTURE_MASK |
+		MIDR_PARTNUM_MASK;
+
+	return (model == MIDR_MRVL_OCTEONTX2_98XX ||
+		model == MIDR_MRVL_OCTEONTX2_96XX ||
+		model == MIDR_MRVL_OCTEONTX2_95XX ||
+		model == MIDR_MRVL_OCTEONTX2_LOKI ||
+		model == MIDR_MRVL_OCTEONTX2_95MM);
+}
+
+int octeontx2_llc_unlock(phys_addr_t addr, int size)
+{
+	bool cacheline_unaligned = 0;
+
+	/* Unlock not supported on other silicon */
+	if (!is_octeontx2())
+		return 0;
+
+	if (!addr || size < 0)
+		return -EINVAL;
+
+	if ((addr & (CVMCACHELCKL3_LINESIZE-1)) && size) {
+		cacheline_unaligned = 1;
+		addr -= (addr & (CVMCACHELCKL3_LINESIZE-1));
+	}
+
+	spin_lock(&llc_lock);
+
+	while (size > 0) {
+		/* write cache line into memory,invalidate and unlock in LLC */
+		asm volatile ("sys " CVMCACHEWBIL3 ", %0" : : "r" (addr));
+		addr += CVMCACHELCKL3_LINESIZE;
+		size -= CVMCACHELCKL3_LINESIZE;
+	}
+
+	if (cacheline_unaligned)
+		asm volatile ("sys " CVMCACHEWBIL3 ", %0" : : "r" (addr));
+
+	isb();
+	spin_unlock(&llc_lock);
+
+	return 0;
+}
+EXPORT_SYMBOL(octeontx2_llc_unlock);
+
+int octeontx2_llc_lock(phys_addr_t addr, int size)
+{
+	bool cacheline_unaligned = 0;
+
+	/* Lock not supported on other silicon */
+	if (!is_octeontx2())
+		return 0;
+
+	if (!addr || size < 0)
+		return -EINVAL;
+
+	if ((addr & (CVMCACHELCKL3_LINESIZE-1)) && size) {
+		cacheline_unaligned = 1;
+		addr -= (addr & (CVMCACHELCKL3_LINESIZE-1));
+	}
+
+	spin_lock(&llc_lock);
+
+	while (size > 0) {
+		/* Fill a block of memory into LLC and lock the cache line */
+		asm volatile ("sys " CVMCACHELCKL3 ", %0" : : "r" (addr));
+		addr += CVMCACHELCKL3_LINESIZE;
+		size -= CVMCACHELCKL3_LINESIZE;
+	}
+
+	if (cacheline_unaligned)
+		asm volatile ("sys " CVMCACHELCKL3 ", %0" : : "r" (addr));
+
+	isb();
+	spin_unlock(&llc_lock);
+
+	return 0;
+}
+EXPORT_SYMBOL(octeontx2_llc_lock);
+
+static int __init octx2_llc_init(void)
+{
+	spin_lock_init(&llc_lock);
+	return 0;
+}
+arch_initcall(octx2_llc_init);
diff --git a/include/linux/soc/marvell/llc.h b/include/linux/soc/marvell/llc.h
new file mode 100644
index 000000000000..6983e897445b
--- /dev/null
+++ b/include/linux/soc/marvell/llc.h
@@ -0,0 +1,17 @@
+/* SPDX-License-Identifier: GPL-2.0
+ * Marvell OcteonTx2 LLC driver
+ *
+ * Copyright (C) 2020 Marvell International Ltd.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef __MARVELL_LLC_H__
+#define __MARVELL_LLC_H__
+
+int octeontx2_llc_unlock(phys_addr_t addr, int size);
+int octeontx2_llc_lock(phys_addr_t addr, int size);
+
+#endif
-- 
2.31.1

