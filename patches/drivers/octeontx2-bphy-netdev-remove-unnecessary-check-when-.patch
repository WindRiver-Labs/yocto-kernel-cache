From 730a1a3840ec2c468bc12d67335ffe922562aef6 Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveenm@marvell.com>
Date: Thu, 4 Feb 2021 12:35:11 +0530
Subject: [PATCH 02/12] octeontx2-bphy-netdev: remove unnecessary check when
 setting INTF_DOWN flag

commit 249225dbf398d7fbd3cbd63703ba28450ae5c259 from
git@git.assembla.com:cavium/WindRiver.linux.git

The RFOE_INTF_DOWN and CPRI_INTF_DOWN flag is set only in ndo_stop()
callback. There are no other conditions where these flags need to be
set. So instead of using test_and_set_bit() the code uses set_bit().

Change-Id: Ide7fa936af0b879d98071887566d020255508fa9
Signed-off-by: Naveen Mamindlapalli <naveenm@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/45522
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/bphy/otx2_cpri.c | 3 +--
 drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c | 3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_cpri.c b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_cpri.c
index de027ad28d43..95e78df0ab9f 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_cpri.c
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_cpri.c
@@ -440,8 +440,7 @@ static int otx2_cpri_eth_stop(struct net_device *netdev)
 {
 	struct otx2_cpri_ndev_priv *priv = netdev_priv(netdev);
 
-	if (test_and_set_bit(CPRI_INTF_DOWN, &priv->state))
-		return 0;
+	set_bit(CPRI_INTF_DOWN, &priv->state);
 
 	netif_stop_queue(netdev);
 	netif_carrier_off(netdev);
diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
index 96dda9be88dd..38d1a3e5af06 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
@@ -1046,8 +1046,7 @@ static int otx2_rfoe_eth_stop(struct net_device *netdev)
 	struct ptp_tstamp_skb *ts_skb, *ts_skb2;
 	int idx;
 
-	if (test_and_set_bit(RFOE_INTF_DOWN, &priv->state))
-		return 0;
+	set_bit(RFOE_INTF_DOWN, &priv->state);
 
 	netif_stop_queue(netdev);
 	netif_carrier_off(netdev);
-- 
2.26.1

