From 1bed3a50d43fdd184fe69bd0764fd8c8becb351a Mon Sep 17 00:00:00 2001
From: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Date: Thu, 18 Mar 2021 10:22:59 -0700
Subject: [PATCH 1325/1921] Revert "octeontx2-af: Reset MSIX config space in
 FLR"

This reverts commit 9fb681694c1f6aab0ae9f5c3a55707fcc13158ac.

PF_RST on a FLR is causing RVU_PF_VF_BAR4_ADDR also getting cleared. Due to that RVU_PF_VF_BAR4_ADDR is also getting cleared which would break PF::VF communication

Change-Id: I4cbea4b7709315009e6db39d41ac0d908c9bf44e
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/48053
Reviewed-by: Geethasowjanya Akula <Geethasowjanya.Akula@cavium.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/rvu.c   | 24 -------------------
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c  |  3 ---
 2 files changed, 27 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index 84454841a667..e219e5083f4f 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -2685,26 +2685,6 @@ static void rvu_sso_pfvf_rst(struct rvu *rvu, u16 pcifunc)
 	}
 }
 
-/* Reset PF/VF MSIX config space */
-static void rvu_pfvf_msix_reset(struct rvu *rvu, u16 pcifunc)
-{
-	u64 reg, val;
-	int pfvf;
-
-	if (pcifunc & RVU_PFVF_FUNC_MASK) {
-		pfvf = rvu_get_hwvf(rvu, pcifunc);
-		reg = RVU_AF_HWVF_RST;
-		val = (pfvf & 0xFF) | BIT_ULL(12);
-	} else {
-		pfvf = rvu_get_pf(pcifunc);
-		reg = RVU_AF_PF_RST;
-		val = (pfvf & 0x1F) | BIT_ULL(12);
-	}
-
-	rvu_write64(rvu, BLKADDR_RVUM, reg, val);
-	rvu_poll_reg(rvu, BLKADDR_RVUM, reg, BIT_ULL(12), true);
-}
-
 static void __rvu_flr_handler(struct rvu *rvu, u16 pcifunc)
 {
 	mutex_lock(&rvu->flr_lock);
@@ -2726,7 +2706,6 @@ static void __rvu_flr_handler(struct rvu *rvu, u16 pcifunc)
 	rvu_reset_lmt_map_tbl(rvu, pcifunc);
 	rvu_detach_rsrcs(rvu, NULL, pcifunc);
 	rvu_sso_pfvf_rst(rvu, pcifunc);
-	rvu_pfvf_msix_reset(rvu, pcifunc);
 	mutex_unlock(&rvu->flr_lock);
 }
 
@@ -2745,9 +2724,6 @@ static void rvu_afvf_flr_handler(struct rvu *rvu, int vf)
 	/* Signal FLR finish and enable IRQ */
 	rvupf_write64(rvu, RVU_PF_VFTRPENDX(reg), BIT_ULL(vf));
 	rvupf_write64(rvu, RVU_PF_VFFLR_INT_ENA_W1SX(reg), BIT_ULL(vf));
-	/* Re-enable MBOX and ME interrupt as it gets cleared in HWVF_RST reset */
-	rvupf_write64(rvu, RVU_PF_VFME_INT_ENA_W1SX(reg), BIT_ULL(vf));
-	rvupf_write64(rvu, RVU_PF_VFPF_MBOX_INT_ENA_W1SX(0), BIT_ULL(vf));
 }
 
 static void rvu_flr_handler(struct work_struct *work)
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 60a3018e0f22..f2a36c73f5d6 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -128,9 +128,6 @@ static void otx2_flr_handler(struct work_struct *work)
 		/* clear transcation pending bit */
 		otx2_write64(pf, RVU_PF_VFTRPENDX(reg), BIT_ULL(vf));
 		otx2_write64(pf, RVU_PF_VFFLR_INT_ENA_W1SX(reg), BIT_ULL(vf));
-	/* Re-enable MBOX and ME interrupt as it gets cleared in HWVF_RST reset */
-		otx2_write64(pf, RVU_PF_VFME_INT_ENA_W1SX(reg), BIT_ULL(vf));
-		otx2_write64(pf, RVU_PF_VFPF_MBOX_INT_ENA_W1SX(reg), BIT_ULL(vf));
 	}
 
 	mutex_unlock(&mbox->lock);
-- 
2.31.1

