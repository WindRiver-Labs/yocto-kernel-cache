From e363bf6569d395430ea6d97d60378527e8f57f2b Mon Sep 17 00:00:00 2001
From: Stanislaw Kardach <skardach@marvell.com>
Date: Tue, 26 Mar 2019 15:04:34 +0100
Subject: [PATCH 159/767] soc: octeontx2-rm: fix compilation warnings

commit 33f1b5d2754edf8d8dac21637c4441c4c9523a76 from
git@git.assembla.com:cavium/WindRiver.linux.git

Change-Id: Ia5aa2f664f0a629e35017141c184ab2a0d5c2a20
Signed-off-by: Stanislaw Kardach <skardach@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../soc/marvell/octeontx2-rm/domain_sysfs.c    |  9 ++++-----
 drivers/soc/marvell/octeontx2-rm/otx2_rm.c     | 18 +++++++++---------
 2 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2-rm/domain_sysfs.c b/drivers/soc/marvell/octeontx2-rm/domain_sysfs.c
index 4955a753d9af..55144354c406 100644
--- a/drivers/soc/marvell/octeontx2-rm/domain_sysfs.c
+++ b/drivers/soc/marvell/octeontx2-rm/domain_sysfs.c
@@ -504,7 +504,6 @@ create_domain_store(struct kobject *kobj, struct kobj_attribute *attr,
 	char *end;
 	char *ptr = NULL;
 	const char *name;
-	char *temp;
 	char *errmsg = "Invalid domain specification format.";
 
 	if (strlen(buf) == 0) {
@@ -546,7 +545,7 @@ create_domain_store(struct kobject *kobj, struct kobj_attribute *attr,
 			continue;
 
 		if (!strncmp(strim(start), "port", sizeof("port") - 1)) {
-			temp = strsep(&start, ":");
+			strsep(&start, ":");
 			if (dparams->port_cnt >= RM_MAX_PORTS)
 				goto error;
 			dparams->ports[dparams->port_cnt++] = strim(start);
@@ -554,7 +553,7 @@ create_domain_store(struct kobject *kobj, struct kobj_attribute *attr,
 		#define DP(_name, _1, _fmt)				\
 		else if (!strncmp(strim(start), #_name,			\
 				  sizeof(#_name) - 1)) {		\
-			temp = strsep(&start, ":");			\
+			strsep(&start, ":");				\
 			start = strim(start);				\
 			res = sscanf(start, _fmt, &dparams->_name);	\
 			if (res != 1)					\
@@ -582,7 +581,7 @@ create_domain_store(struct kobject *kobj, struct kobj_attribute *attr,
 	return res;
 }
 
-int dpivf_sysfs_create(struct domain_sysfs *lsfs)
+static int dpivf_sysfs_create(struct domain_sysfs *lsfs)
 {
 	struct dpi_info *dpi_info = &lsfs->dpi_info;
 	struct dpi_vf *dpivf_ptr = NULL;
@@ -613,7 +612,7 @@ int dpivf_sysfs_create(struct domain_sysfs *lsfs)
 	return 0;
 }
 
-void dpivf_sysfs_destroy(struct domain_sysfs *lsfs)
+static void dpivf_sysfs_destroy(struct domain_sysfs *lsfs)
 {
 	struct dpi_info *dpi_info = &lsfs->dpi_info;
 	struct dpi_vf *dpivf_ptr = NULL;
diff --git a/drivers/soc/marvell/octeontx2-rm/otx2_rm.c b/drivers/soc/marvell/octeontx2-rm/otx2_rm.c
index 293bc343b9a7..12ff0ef92305 100644
--- a/drivers/soc/marvell/octeontx2-rm/otx2_rm.c
+++ b/drivers/soc/marvell/octeontx2-rm/otx2_rm.c
@@ -887,7 +887,7 @@ static int rm_get_available_rsrcs(struct rm_dev *rm)
 	return res;
 }
 
-void rm_afpf_mbox_term(struct pci_dev *pdev)
+static void rm_afpf_mbox_term(struct pci_dev *pdev)
 {
 	struct rm_dev *rm = pci_get_drvdata(pdev);
 
@@ -940,7 +940,7 @@ static void vf_sysfs_destroy(struct pci_dev *pdev)
 	}
 }
 
-int check_vf_in_use(void *arg, struct quota *quota, int new_val)
+static int check_vf_in_use(void *arg, struct quota *quota, int new_val)
 {
 	struct rvu_vf *vf = arg;
 
@@ -1239,7 +1239,7 @@ static int rm_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	return err;
 }
 
-void enable_vf_flr_int(struct pci_dev *pdev)
+static void enable_vf_flr_int(struct pci_dev *pdev)
 {
 	struct rm_dev *rm;
 	int ena_bits;
@@ -1267,7 +1267,7 @@ void enable_vf_flr_int(struct pci_dev *pdev)
 	}
 }
 
-void disable_vf_flr_int(struct pci_dev *pdev)
+static void disable_vf_flr_int(struct pci_dev *pdev)
 {
 	struct rm_dev *rm;
 	int ena_bits;
@@ -1302,7 +1302,7 @@ void disable_vf_flr_int(struct pci_dev *pdev)
 	}
 }
 
-void enable_vf_mbox_int(struct pci_dev *pdev)
+static void enable_vf_mbox_int(struct pci_dev *pdev)
 {
 	struct rm_dev *rm;
 	int ena_bits;
@@ -1330,7 +1330,7 @@ void enable_vf_mbox_int(struct pci_dev *pdev)
 	}
 }
 
-void disable_vf_mbox_int(struct pci_dev *pdev)
+static void disable_vf_mbox_int(struct pci_dev *pdev)
 {
 	struct rm_dev *rm;
 	int ena_bits;
@@ -1361,7 +1361,7 @@ void disable_vf_mbox_int(struct pci_dev *pdev)
 	}
 }
 
-int __sriov_disable(struct pci_dev *pdev)
+static int __sriov_disable(struct pci_dev *pdev)
 {
 	struct rm_dev *rm;
 
@@ -1401,7 +1401,7 @@ int __sriov_disable(struct pci_dev *pdev)
 	return 0;
 }
 
-int __sriov_enable(struct pci_dev *pdev, int num_vfs)
+static int __sriov_enable(struct pci_dev *pdev, int num_vfs)
 {
 	int curr_vfs, vf = 0;
 	int err;
@@ -1541,7 +1541,7 @@ int __sriov_enable(struct pci_dev *pdev, int num_vfs)
 	return err;
 }
 
-int rm_sriov_configure(struct pci_dev *pdev, int num_vfs)
+static int rm_sriov_configure(struct pci_dev *pdev, int num_vfs)
 {
 	if (num_vfs == 0)
 		return __sriov_disable(pdev);
-- 
2.31.1

