From 9be3b859375b979b624432c7d68e86af414ceb37 Mon Sep 17 00:00:00 2001
From: Nishad Saraf <nishad.saraf@xilinx.com>
Date: Tue, 6 Oct 2020 00:35:36 -0700
Subject: [PATCH 1692/1851] misc: xilinx-ai-engine: Clear broadcast event
 status

commit d2aa7bcb8be1136d56eea89529dea7f179c2f98a from
https://github.com/Xilinx/linux-xlnx.git

The event broadcast from a tile above is logged in the event status
registers. As this status bit is used to determine if backtracking
the tile above is required, it needs to be cleared. Event status
bits are sticky and could be cleared by writing a 1.

Signed-off-by: Nishad Saraf <nishad.saraf@xilinx.com>
Reviewed-by: Wendy Liang <wendy.liang@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../xilinx-ai-engine/ai-engine-interrupt.c    | 31 +++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c b/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c
index aa14aef8f387..5d5677df2021 100644
--- a/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c
+++ b/drivers/misc/xilinx-ai-engine/ai-engine-interrupt.c
@@ -74,6 +74,35 @@ static void aie_read_event_status(struct aie_partition *apart,
 	}
 }
 
+/**
+ * aie_clear_event_status() - clears the status of event.
+ * @apart: AIE partition pointer.
+ * @loc: pointer to tile location.
+ * @module: module type.
+ * @event: event ID.
+ */
+static void aie_clear_event_status(struct aie_partition *apart,
+				   struct aie_location *loc,
+				   enum aie_module_type module, u8 event)
+{
+	const struct aie_event_attr *event_mod;
+	u32 status_off, regoff;
+
+	if (module == AIE_CORE_MOD)
+		event_mod = apart->adev->core_events;
+	else if (module == AIE_MEM_MOD)
+		event_mod = apart->adev->mem_events;
+	else
+		event_mod = apart->adev->pl_events;
+
+	if (event >= event_mod->num_events)
+		return;
+
+	status_off = event_mod->status_regoff + (event / 32) * 4U;
+	regoff = aie_cal_regoff(apart->adev, *loc, status_off);
+	iowrite32(BIT(event % 32), apart->adev->base + regoff);
+}
+
 /**
  * aie_check_group_errors_enabled() - get error events enabled in group error.
  * @apart: AIE partition pointer.
@@ -543,6 +572,8 @@ static bool aie_l1_backtrack(struct aie_partition *apart,
 			aie_read_event_status(apart, &temp, module, reg);
 			if (!(reg[bc_event / 32] & BIT(bc_event % 32)))
 				break;
+
+			aie_clear_event_status(apart, &temp, module, bc_event);
 		}
 	}
 
-- 
2.31.1

