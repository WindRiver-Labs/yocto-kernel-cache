From 88a172734033505cb60d1782e3d2ff41be6a9482 Mon Sep 17 00:00:00 2001
From: Stanislaw Kardach <skardach@marvell.com>
Date: Fri, 25 Jan 2019 16:57:20 +0530
Subject: [PATCH 0020/1921] octeontx2-af: adjust rvu limits for no-VF case

Ensure that there can be at least 1 NPA LF allocated SSO/TIM or NPA RVU
PFs, irrespectively of whether VFs were provisioned or not. This way
those devices may be initialized functionally along with their VFs or
if there are no VFs provisioned.

Change-Id: Iadfb6b755351115b001b17d219dced2a4155a6f3
Signed-off-by: Stanislaw Kardach <skardach@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
index ea95518694cd..0128eaa070ff 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_validation.c
@@ -493,7 +493,7 @@ static void rvu_set_default_limits(struct rvu *rvu)
 				nix_rvus;
 			break;
 		case PCI_DEVID_OCTEONTX2_SSO_RVU_PF:
-			rvu->pf_limits.npa->a[i].val = totalvfs;
+			rvu->pf_limits.npa->a[i].val = 1 + totalvfs;
 			rvu->pf_limits.sso->a[i].val =
 				rvu->hw->block[BLKADDR_SSO].lf.max / sso_rvus;
 			rvu->pf_limits.ssow->a[i].val =
@@ -507,7 +507,7 @@ static void rvu_set_default_limits(struct rvu *rvu)
 				num_online_cpus() / sso_rvus;
 			break;
 		case PCI_DEVID_OCTEONTX2_NPA_RVU_PF:
-			rvu->pf_limits.npa->a[i].val = totalvfs;
+			rvu->pf_limits.npa->a[i].val = 1 + totalvfs;
 			break;
 		case PCI_DEVID_OCTEONTX2_CPT_RVU_PF:
 			rvu->pf_limits.cpt->a[i].val = num_online_cpus();
-- 
2.31.1

