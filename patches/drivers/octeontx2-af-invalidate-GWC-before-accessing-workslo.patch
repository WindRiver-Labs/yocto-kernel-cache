From be1d39a039f4106b42e456d1fc52a0a83fc05af9 Mon Sep 17 00:00:00 2001
From: Pavan Nikhilesh <pbhagavatula@marvell.com>
Date: Thu, 6 May 2021 01:14:50 +0530
Subject: [PATCH 1547/1921] octeontx2-af: invalidate GWC before accessing
 workslot

Invalidate APs GWC(Getwork Cache) for the Workslot that is being
reset or being used for flushing work from groups.
Prefix invalidate with a full system barrier to make sure all the
in-flights complete before invalidate.

Signed-off-by: Pavan Nikhilesh <pbhagavatula@marvell.com>
Change-Id: I31aabf202410445e5821d5e80ba67394505d49fe
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/51881
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../ethernet/marvell/octeontx2/af/rvu_sso.c    | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
index 0d667d8a8451..04a3e280c2ad 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
@@ -187,6 +187,10 @@ static void rvu_sso_ggrp_taq_flush(struct rvu *rvu, u16 pcifunc, int lf,
 	rvu_write64(rvu, blkaddr, SSO_AF_BAR2_ALIASX(slot, SSO_LF_GGRP_QCTL),
 		    0x1);
 
+	/* Make sure that all the in-flights are complete before invalidate. */
+	mb();
+	rvu_write64(rvu, ssow_blkaddr,
+		    SSOW_AF_BAR2_ALIASX(0, SSOW_LF_GWS_OP_GWC_INVAL), 0x0);
 	/* Prepare WS for GW operations. */
 	do {
 		reg = rvu_read64(rvu, ssow_blkaddr,
@@ -290,6 +294,12 @@ static void rvu_ssow_clean_prefetch(struct rvu *rvu, int slot)
 	u64 val, reg;
 
 	ssow_blkaddr = rvu_get_blkaddr(rvu, BLKTYPE_SSOW, 0);
+
+	/* Make sure that all the in-flights are complete before invalidate. */
+	mb();
+	rvu_write64(rvu, ssow_blkaddr,
+		    SSOW_AF_BAR2_ALIASX(slot, SSOW_LF_GWS_OP_GWC_INVAL), 0x0);
+
 	err = rvu_poll_reg(rvu, ssow_blkaddr,
 			   SSOW_AF_BAR2_ALIASX(slot, SSOW_LF_GWS_PRF_TAG),
 			   SSOW_LF_GWS_TAG_PEND_GET_WORK, true);
@@ -362,6 +372,10 @@ void rvu_sso_lf_drain_queues(struct rvu *rvu, u16 pcifunc, int lf, int slot)
 	if (has_lsw)
 		rvu_write64(rvu, blkaddr, SSO_AF_HWSX_LSW_CFG(ssow_lf), 0x0);
 
+	/* Make sure that all the in-flights are complete before invalidate. */
+	mb();
+	rvu_write64(rvu, ssow_blkaddr,
+		    SSOW_AF_BAR2_ALIASX(0, SSOW_LF_GWS_OP_GWC_INVAL), 0x0);
 	/* Prepare WS for GW operations. */
 	rvu_poll_reg(rvu, ssow_blkaddr, SSOW_AF_BAR2_ALIASX(0, SSOW_LF_GWS_TAG),
 		     SSOW_LF_GWS_TAG_PEND_GET_WORK, true);
@@ -616,6 +630,10 @@ int rvu_ssow_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot)
 	if (has_lsw)
 		rvu_write64(rvu, blkaddr, SSO_AF_HWSX_LSW_CFG(lf), 0x0);
 
+	/* Make sure that all the in-flights are complete before invalidate. */
+	mb();
+	rvu_write64(rvu, ssow_blkaddr,
+		    SSOW_AF_BAR2_ALIASX(slot, SSOW_LF_GWS_OP_GWC_INVAL), 0x0);
 	/* HRM 14.13.4 (3) */
 	/* Wait till waitw/desched completes. */
 	rvu_poll_reg(rvu, ssow_blkaddr,
-- 
2.31.1

