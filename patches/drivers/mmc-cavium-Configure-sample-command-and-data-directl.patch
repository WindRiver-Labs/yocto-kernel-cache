From 3f80e563d9bff8eca21f035fc02d0b0f6cd1a984 Mon Sep 17 00:00:00 2001
From: Sujeet Baranwal <sbaranwal@marvell.com>
Date: Mon, 6 May 2019 16:44:13 -0700
Subject: [PATCH 0401/1921] mmc: cavium: Configure sample command and data
 directly

no need to scale to SCLK for thunderX platform.

Change-Id: I1afacb238eb566819c5eb093f7d44f2b5f2786e5
Signed-off-by: Chandrakala Chavva <cchavva@caviumnetworks.com>
Signed-off-by: Sujeet Baranwal <sbaranwal@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/8527
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/26895
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/mmc/host/cavium.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/mmc/host/cavium.c b/drivers/mmc/host/cavium.c
index 89deb451e0ac..b3912edd9c15 100644
--- a/drivers/mmc/host/cavium.c
+++ b/drivers/mmc/host/cavium.c
@@ -953,7 +953,6 @@ static int cvm_mmc_of_parse(struct device *dev, struct cvm_mmc_slot *slot)
 	u32 id, cmd_skew = 0, dat_skew = 0, bus_width = 0;
 	struct device_node *node = dev->of_node;
 	struct mmc_host *mmc = slot->mmc;
-	u64 clock_period;
 	int ret;
 
 	ret = of_property_read_u32(node, "reg", &id);
@@ -999,11 +998,17 @@ static int cvm_mmc_of_parse(struct device *dev, struct cvm_mmc_slot *slot)
 	mmc->f_min = 400000;
 
 	/* Sampling register settings, period in picoseconds */
-	clock_period = 1000000000000ull / slot->host->sys_freq;
 	of_property_read_u32(node, "cavium,cmd-clk-skew", &cmd_skew);
 	of_property_read_u32(node, "cavium,dat-clk-skew", &dat_skew);
-	slot->cmd_cnt = (cmd_skew + clock_period / 2) / clock_period;
-	slot->dat_cnt = (dat_skew + clock_period / 2) / clock_period;
+	if (is_mmc_8xxx(slot->host) || is_mmc_otx2(slot->host)) {
+		slot->cmd_cnt = cmd_skew;
+		slot->dat_cnt = dat_skew;
+	} else {
+		u64 clock_period = 1000000000000ull / slot->host->sys_freq;
+
+		slot->cmd_cnt = (cmd_skew + clock_period / 2) / clock_period;
+		slot->dat_cnt = (dat_skew + clock_period / 2) / clock_period;
+	}
 
 	return id;
 }
-- 
2.31.1

