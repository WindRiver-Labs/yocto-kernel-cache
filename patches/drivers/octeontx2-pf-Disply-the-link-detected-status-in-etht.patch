From 1bc039a5dc5eb49ba72cf94ecd38b2b2f760cb13 Mon Sep 17 00:00:00 2001
From: Christina Jacob <cjacob@marvell.com>
Date: Wed, 24 Jul 2019 15:45:44 +0530
Subject: [PATCH 311/767] octeontx2-pf: Disply the link detected status in
 ethtool command

commit c6c1cc2f94e0b5d3aad0dfb23653f1e562d6f3a2 from
git@git.assembla.com:cavium/WindRiver.linux.git

Extend support to disply the link detected status
in ethtool <interface> command.
Signed-off-by: Christina Jacob <cjacob@marvell.com>

Change-Id: Id859c1eabb66607e8b9f2a5c18e5cf9641327b47
Reviewed-on: https://sj1git1.cavium.com/14142
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../ethernet/marvell/octeontx2/nic/otx2_common.h    |  5 +++++
 .../ethernet/marvell/octeontx2/nic/otx2_ethtool.c   | 13 ++++++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index a794c231c81f..607bfe4ce078 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -262,6 +262,11 @@ struct otx2_nic {
 	struct work_struct	otx2_rx_mode_work;
 };
 
+static inline bool is_otx2_lbkvf(struct pci_dev *pdev)
+{
+	return (pdev->device ==  PCI_DEVID_OCTEONTX2_RVU_AFVF);
+}
+
 static inline bool is_96xx_A0(struct pci_dev *pdev)
 {
 	return (pdev->revision == 0x00) &&
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index d1d52c546cb1..086ca416ceb1 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -1044,6 +1044,15 @@ static int otx2_set_link_ksettings(struct net_device *netdev,
 	return err;
 }
 
+static u32 otx2_get_link(struct net_device *netdev)
+{
+	struct otx2_nic *pfvf = netdev_priv(netdev);
+
+	if (is_otx2_lbkvf(pfvf->pdev))
+		return 1;
+	return pfvf->linfo.link_up;
+}
+
 static int otx2_get_fecparam(struct net_device *netdev,
 			     struct ethtool_fecparam *fecparam)
 {
@@ -1123,6 +1132,7 @@ end:	otx2_mbox_unlock(&pfvf->mbox);
 }
 
 static struct ethtool_ops otx2_ethtool_ops = {
+	.get_link		= otx2_get_link,
 	.get_drvinfo		= otx2_get_drvinfo,
 	.get_strings		= otx2_get_strings,
 	.get_ethtool_stats	= otx2_get_ethtool_stats,
@@ -1275,7 +1285,7 @@ static int otx2vf_get_link_ksettings(struct net_device *netdev,
 {
 	struct otx2_nic *pfvf = netdev_priv(netdev);
 
-	if (pfvf->pdev->device ==  PCI_DEVID_OCTEONTX2_RVU_AFVF) {
+	if (is_otx2_lbkvf(pfvf->pdev)) {
 		cmd->base.port = PORT_OTHER;
 		cmd->base.duplex = DUPLEX_FULL;
 		cmd->base.speed = SPEED_100000;
@@ -1285,6 +1295,7 @@ static int otx2vf_get_link_ksettings(struct net_device *netdev,
 	return 0;
 }
 static const struct ethtool_ops otx2vf_ethtool_ops = {
+	.get_link		= otx2_get_link,
 	.get_drvinfo		= otx2vf_get_drvinfo,
 	.get_strings		= otx2vf_get_strings,
 	.get_ethtool_stats	= otx2vf_get_ethtool_stats,
-- 
2.31.1

