From 326e6d08e02a153cb857122dedf785b66c9008b7 Mon Sep 17 00:00:00 2001
From: Richard Gong <richard.gong@intel.com>
Date: Wed, 30 Jun 2021 08:44:14 -0500
Subject: [PATCH 19/42] firmware: stratix10-svc: update for ECDSA hash signing

commit f23a35282e91cd10cf643c0857422aa84b9935e0 from
https://github.com/altera-opensource/linux-socfpga/commits/socfpga-5.4.124-lts

Update to support ECDSA hash signing.

Signed-off-by: Richard Gong <richard.gong@intel.com>
Signed-off-by: Siew Chin Lim <elly.siew.chin.lim@intel.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/firmware/stratix10-svc.c              | 21 ++++++++
 include/linux/firmware/intel/stratix10-smc.h  | 50 +++++++++++++++++++
 .../firmware/intel/stratix10-svc-client.h     |  6 +++
 3 files changed, 77 insertions(+)

diff --git a/drivers/firmware/stratix10-svc.c b/drivers/firmware/stratix10-svc.c
index 5694999ddebe..6086c2db108d 100644
--- a/drivers/firmware/stratix10-svc.c
+++ b/drivers/firmware/stratix10-svc.c
@@ -338,6 +338,7 @@ static void svc_thread_recv_status_ok(struct stratix10_svc_data *p_data,
 	case COMMAND_FCS_CRYPTO_AES_CRYPT_INIT:
 	case COMMAND_FCS_CRYPTO_GET_DIGEST_INIT:
 	case COMMAND_FCS_CRYPTO_MAC_VERIFY_INIT:
+	case COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_INIT:
 		cb_data->status = BIT(SVC_STATUS_OK);
 		break;
 	case COMMAND_RECONFIG_DATA_SUBMIT:
@@ -382,6 +383,7 @@ static void svc_thread_recv_status_ok(struct stratix10_svc_data *p_data,
 	case COMMAND_FCS_CRYPTO_AES_CRYPT_FINALIZE:
 	case COMMAND_FCS_CRYPTO_GET_DIGEST_FINALIZE:
 	case COMMAND_FCS_CRYPTO_MAC_VERIFY_FINALIZE:
+	case COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_FINALIZE:
 		cb_data->status = BIT(SVC_STATUS_OK);
 		cb_data->kaddr2 = svc_pa_to_va(res.a2);
 		cb_data->kaddr3 = &res.a3;
@@ -689,6 +691,23 @@ static int svc_normal_to_secure_thread(void *data)
 			a6 = (unsigned long)pdata->size_output;
 			a7 = pdata->arg[2];
 			break;
+		case COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_INIT:
+			a0 = INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_INIT;
+			a1 = pdata->arg[0];
+			a2 = pdata->arg[1];
+			a3 = pdata->arg[2];
+			a4 = pdata->arg[3];
+			a5 = pdata->arg[4];
+			break;
+		case COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_FINALIZE:
+			a0 = INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_FINALIZE;
+			a1 = pdata->arg[0];
+			a2 = pdata->arg[1];
+			a3 = (unsigned long)pdata->paddr;
+			a4 = (unsigned long)pdata->size;
+			a5 = (unsigned long)pdata->paddr_output;
+			a6 = (unsigned long)pdata->size_output;
+			break;
 		/* for polling */
 		case COMMAND_POLL_SERVICE_STATUS:
 			a0 = INTEL_SIP_SMC_SERVICE_COMPLETED;
@@ -786,6 +805,8 @@ static int svc_normal_to_secure_thread(void *data)
 			case COMMAND_FCS_CRYPTO_GET_DIGEST_FINALIZE:
 			case COMMAND_FCS_CRYPTO_MAC_VERIFY_INIT:
 			case COMMAND_FCS_CRYPTO_MAC_VERIFY_FINALIZE:
+			case COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_INIT:
+			case COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_FINALIZE:
 				cbdata->status = BIT(SVC_STATUS_INVALID_PARAM);
 				cbdata->kaddr1 = NULL;
 				cbdata->kaddr2 = NULL;
diff --git a/include/linux/firmware/intel/stratix10-smc.h b/include/linux/firmware/intel/stratix10-smc.h
index 2f0ae6061e52..7a8f80fed892 100644
--- a/include/linux/firmware/intel/stratix10-smc.h
+++ b/include/linux/firmware/intel/stratix10-smc.h
@@ -1075,4 +1075,54 @@ INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_FUNCID_FPGA_CONFIG_COMPLETED_WRITE)
 #define INTEL_SIP_SMC_FCS_MAC_VERIFY_FINALIZE \
         INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_FUNCID_FCS_MAC_VERIFY_FINALIZE)
 
+/**
+ * Request INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_INIT
+ * Sync call to sends digital signature signing request on a data blob
+ *
+ * Call register usage:
+ * a0 INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_INIT
+ * a1 session ID
+ * a2 context ID
+ * a3 key UID
+ * a4 size of crypto parameter data
+ * a5 size of crypto parameter data
+ *      3:0     ECC algoritim
+ *      63:4    not used
+ * a6-a7 not used
+ *
+ * Return status:
+ * a0 INTEL_SIP_SMC_STATUS_OK, INTEL_SIP_SMC_STATUS_NOT_SUPPORTED or
+ *    INTEL_SIP_SMC_STATUS_ERROR
+ * a1 mailbox errors if a0 is INTEL_SIP_SMC_STATUS_ERROR
+ * a2-a3 not used
+ */
+#define INTEL_SIP_SMC_FUNCID_FCS_ECDSA_HASH_SIGNING_INIT 125
+#define INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_INIT \
+        INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_FUNCID_FCS_ECDSA_HASH_SIGNING_INIT)
+
+/**
+ * Request INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_FINALIZE
+ * Sync call to sends digital signature signing request on a data blob
+ *
+ * Call register usage:
+ * a0 INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_FINALIZE
+ * a1 session ID
+ * a2 context ID
+ * a3 physical address of source
+ * a4 size of source
+ * a5 physical address of destation
+ * a6 size of destation
+ * a7 not used
+ *
+ * Return status:
+ * a0 INTEL_SIP_SMC_STATUS_OK, INTEL_SIP_SMC_STATUS_NOT_SUPPORTED or
+ *    INTEL_SIP_SMC_STATUS_ERROR
+ * a1 mailbox errors if a0 is INTEL_SIP_SMC_STATUS_ERROR
+ * a2 physical address of response data
+ * a3 size of response data
+ */
+#define INTEL_SIP_SMC_FUNCID_ECDSA_HASH_SIGNING_FINALIZE 127
+#define INTEL_SIP_SMC_FCS_ECDSA_HASH_SIGNING_FINALIZE \
+        INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_FUNCID_ECDSA_HASH_SIGNING_FINALIZE)
+
 #endif
diff --git a/include/linux/firmware/intel/stratix10-svc-client.h b/include/linux/firmware/intel/stratix10-svc-client.h
index 9151c093766f..63b2888525ba 100644
--- a/include/linux/firmware/intel/stratix10-svc-client.h
+++ b/include/linux/firmware/intel/stratix10-svc-client.h
@@ -197,6 +197,10 @@ struct stratix10_svc_chan;
  * @COMMAND_FCS_CRYPTO_MAC_VERIFY (INIT and FINALIZE): check the integrity
  * and authenticity of a blob, return status is SVC_STATUS_OK or
  * SVC_STATUS_ERROR
+ *
+ * @COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING (INIT and FINALIZE): send
+ * digital signature signing request on a data blob, return status is
+ * SVC_STATUS_OK or SVC_STATUS_ERROR
  */
 enum stratix10_svc_command_code {
 	/* for FPGA */
@@ -248,6 +252,8 @@ enum stratix10_svc_command_code {
 	COMMAND_FCS_CRYPTO_GET_DIGEST_FINALIZE,
 	COMMAND_FCS_CRYPTO_MAC_VERIFY_INIT,
 	COMMAND_FCS_CRYPTO_MAC_VERIFY_FINALIZE,
+	COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_INIT,
+	COMMAND_FCS_CRYPTO_ECDSA_HASH_SIGNING_FINALIZE,
 };
 
 /**
-- 
2.31.1

