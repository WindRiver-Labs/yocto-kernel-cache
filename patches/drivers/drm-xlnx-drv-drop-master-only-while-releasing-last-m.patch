From 497927a1072796cd1975218c082e9961da341ce0 Mon Sep 17 00:00:00 2001
From: Rohit Visavalia <rohit.visavalia@xilinx.com>
Date: Tue, 10 Dec 2019 01:27:01 -0800
Subject: [PATCH 0685/1852] drm: xlnx: drv: drop master only while releasing
 last master on a drm device

commit 5eec1cd02b8a65785b7d441f8b4ab0403c5b31cd from
https://github.com/Xilinx/linux-xlnx.git

While multiple masters running on a single drm device i.e. more than two,
if one application is closed then old implementation drops the
xlnx_drm->is_master flag, so while closing second application
file->is_master will not be cleared and then drm_release() drops
the master, which will abort third/other running application/s.

Maintain a counter for fake master instances on a device and drop master
only while while releasing last master on a drm device.

Signed-off-by: Rohit Visavalia <rohit.visavalia@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_drv.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_drv.c b/drivers/gpu/drm/xlnx/xlnx_drv.c
index e162bc85c34c..b04e2fc82035 100644
--- a/drivers/gpu/drm/xlnx/xlnx_drv.c
+++ b/drivers/gpu/drm/xlnx/xlnx_drv.c
@@ -57,7 +57,7 @@ MODULE_PARM_DESC(fbdev_vres,
  * @fb: DRM fb helper
  * @master: logical master device for pipeline
  * @suspend_state: atomic state for suspend / resume
- * @is_master: A flag to indicate if this instance is fake master
+ * @master_count: Counter to track number of fake master instances
  */
 struct xlnx_drm {
 	struct drm_device *drm;
@@ -65,7 +65,7 @@ struct xlnx_drm {
 	struct drm_fb_helper *fb;
 	struct platform_device *master;
 	struct drm_atomic_state *suspend_state;
-	bool is_master;
+	u32 master_count;
 };
 
 /**
@@ -145,7 +145,7 @@ static int xlnx_drm_open(struct drm_device *dev, struct drm_file *file)
 	if (!(drm_is_primary_client(file) && !dev->master) &&
 	    !file->is_master && capable(CAP_SYS_ADMIN)) {
 		file->is_master = 1;
-		xlnx_drm->is_master = true;
+		xlnx_drm->master_count++;
 	}
 
 	return 0;
@@ -158,8 +158,8 @@ static int xlnx_drm_release(struct inode *inode, struct file *filp)
 	struct drm_device *drm = minor->dev;
 	struct xlnx_drm *xlnx_drm = drm->dev_private;
 
-	if (xlnx_drm->is_master) {
-		xlnx_drm->is_master = false;
+	if (file->is_master && xlnx_drm->master_count) {
+		xlnx_drm->master_count--;
 		file->is_master = 0;
 	}
 
-- 
2.31.1

