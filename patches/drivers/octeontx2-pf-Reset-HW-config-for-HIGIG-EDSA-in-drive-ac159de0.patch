From cf195c5fa044c3631b70fda4cec7bfe47d6df56f Mon Sep 17 00:00:00 2001
From: hariprasad <hkelam@marvell.com>
Date: Tue, 7 Jan 2020 16:17:14 +0530
Subject: [PATCH 0344/1921] octeontx2-pf: Reset HW config for HIGIG/EDSA in
 driver unbind

Once user enabled HIGIG/EDSA to parse these packets specific
pkind will be alloted. For HIGIG CGX/LMAC registers are configured
to support higig pause frames etc.This patch reset these settings
in driver unbind

Change-Id: I61cb5255e5f3d97c8caa2c86565e4e7e35f43aba
Signed-off-by: hariprasad <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/21180
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/nic/otx2_common.h   |  2 +-
 .../net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c  | 10 +++++++---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c   |  6 +++---
 3 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index 548ec6075bc9..cfcf50c57fce 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -751,7 +751,7 @@ int otx2vf_open(struct net_device *netdev);
 int otx2vf_stop(struct net_device *netdev);
 int otx2_set_real_num_queues(struct net_device *netdev,
 			     int tx_queues, int rx_queues);
-int otx2_set_npc_parse_mode(struct otx2_nic *pfvf);
+int otx2_set_npc_parse_mode(struct otx2_nic *pfvf, bool unbind);
 
 /* MCAM filter related APIs */
 void otx2_do_set_rx_mode(struct work_struct *work);
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index e0d9b91dc8d8..cc2663c408a4 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -1311,7 +1311,7 @@ static int otx2_set_phy_mod_type(struct net_device *netdev, bool enable)
 	return rc;
 }
 
-int otx2_set_npc_parse_mode(struct otx2_nic *pfvf)
+int otx2_set_npc_parse_mode(struct otx2_nic *pfvf, bool unbind)
 {
 	struct npc_set_pkind *req;
 	int rc = -EAGAIN;
@@ -1321,7 +1321,9 @@ int otx2_set_npc_parse_mode(struct otx2_nic *pfvf)
 	if (!req)
 		goto end;
 
-	if (OTX2_IS_HIGIG2_ENABLED(pfvf->ethtool_flags))
+	if (unbind)
+		req->mode = OTX2_PRIV_FLAGS_DEFAULT;
+	else if (OTX2_IS_HIGIG2_ENABLED(pfvf->ethtool_flags))
 		req->mode = OTX2_PRIV_FLAGS_HIGIG;
 	else if (OTX2_IS_EDSA_ENABLED(pfvf->ethtool_flags))
 		req->mode = OTX2_PRIV_FLAGS_EDSA;
@@ -1331,11 +1333,13 @@ int otx2_set_npc_parse_mode(struct otx2_nic *pfvf)
 	req->dir  = PKIND_RX;
 
 	/* req AF to change pkind on both the dir */
-	if (req->mode == OTX2_PRIV_FLAGS_HIGIG)
+	if (req->mode == OTX2_PRIV_FLAGS_HIGIG || unbind)
 		req->dir |= PKIND_TX;
 
 	if (!otx2_sync_mbox_msg(&pfvf->mbox))
 		rc = 0;
+	else
+		pfvf->ethtool_flags &= ~req->mode;
 end:
 	otx2_mbox_unlock(&pfvf->mbox);
 	return rc;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 8757f355fb8c..b6a26791cc13 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1657,9 +1657,7 @@ int otx2_open(struct net_device *netdev)
 	}
 
 	/* Set NPC parsing mode */
-	err = otx2_set_npc_parse_mode(pf);
-	if (err)
-		goto err_free_cints;
+	otx2_set_npc_parse_mode(pf, false);
 
 	err = otx2_rxtx_enable(pf, true);
 	if (err)
@@ -2666,6 +2664,8 @@ static void otx2_remove(struct pci_dev *pdev)
 	if (pf->flags & OTX2_FLAG_RX_TSTAMP_ENABLED)
 		otx2_config_hw_rx_tstamp(pf, false);
 
+	otx2_set_npc_parse_mode(pf, true);
+
 	/* Disable link notifications */
 	otx2_cgx_config_linkevents(pf, false);
 
-- 
2.31.1

