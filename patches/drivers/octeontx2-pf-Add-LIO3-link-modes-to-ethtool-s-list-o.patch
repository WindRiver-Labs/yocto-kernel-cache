From 82e292afa6d50bec21aab7b9f7d1168bae66900d Mon Sep 17 00:00:00 2001
From: Felix Manlunas <fmanlunas@marvell.com>
Date: Fri, 18 Oct 2019 14:41:29 -0700
Subject: [PATCH 380/767] octeontx2-pf: Add LIO3 link modes to ethtool's list
 of supported modes

commit a108847efc4ad4a07bb7f5a2612391047e979620 from
git@git.assembla.com:cavium/WindRiver.linux.git

For the PHY host-side, LIO3 uses the Marvell proprietary PCS types
25GBASE-R2 and 50GBASE-R4; each is combined (at the PHY line-side) with its
counterpart (25G/50G Ethernet Consortium) standard PCS type (25GBASE-R or
50GBASE-R2).

ethtool is not aware of and does not support Marvell proprietary PCS types;
it only knows about standard PCS types.  So the PF driver must pass (to
ethtool) information about LIO3's PHY line-side (not PHY host-side).

To that end, replace the entries of the cgx_link_mode[] lookup table that
correspond to the proprietary PCS types with their standard counterparts.

Also, set the bits of the macro OTX2_ETHTOOL_SUPPORTED_MODES that
correspond to the proprietary modes/types.

Change-Id: I993906364747abb4f75ae5ce235bf6af96ee70d0
Signed-off-by: Felix Manlunas <fmanlunas@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/17825
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
(cherry picked from commit c0b60c39f136e42619e9a8602b52e299af1359d1)
Reviewed-on: https://sj1git1.cavium.com/17834
[Kevin: Just some minor context mods in order to port to linux-yocto]
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index bd2e260d2ef7..9f5f171fcf67 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -41,7 +41,7 @@ struct otx2_stat {
 	.index = offsetof(struct otx2_dev_stats, stat) / sizeof(u64), \
 }
 
-#define OTX2_ETHTOOL_SUPPORTED_MODES 0x630CC23 //110001100001100110000100011
+#define OTX2_ETHTOOL_SUPPORTED_MODES 0x638CE23 //110001110001100111000100011
 #define OTX2_ETHTOOL_ALL_MODES (ULLONG_MAX)
 
 static const struct otx2_stat otx2_dev_stats[] = {
@@ -969,7 +969,7 @@ static void otx2_get_link_mode_info(u64 index, int mode,
 		ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT,
 		ETHTOOL_LINK_MODE_10000baseCR_Full_BIT,
 		ETHTOOL_LINK_MODE_25000baseSR_Full_BIT,
-		ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT,
+		ETHTOOL_LINK_MODE_25000baseCR_Full_BIT,
 		ETHTOOL_LINK_MODE_25000baseCR_Full_BIT,
 		ETHTOOL_LINK_MODE_25000baseKR_Full_BIT,
 		ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT,
@@ -979,7 +979,7 @@ static void otx2_get_link_mode_info(u64 index, int mode,
 		ETHTOOL_LINK_MODE_10000baseSR_Full_BIT,
 		ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT,
 		ETHTOOL_LINK_MODE_10000baseLR_Full_BIT,
-		ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT,
+		ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT,
 		ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT,
 		ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT,
 		ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT,
-- 
2.31.1

