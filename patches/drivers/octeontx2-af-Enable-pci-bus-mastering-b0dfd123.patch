From c4496bbfa9439d6c24c17c3841f3cd716e5a1c71 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Fri, 29 Mar 2019 13:32:22 +0530
Subject: [PATCH 0140/1921] octeontx2-af: Enable pci bus mastering

For RVU PF0 ie admin function, PCI bus mastering is by default
enabled by firmware. But when kernel driver is unbinded, it gets
disabled by the PCI subsystem which results interrupts not working
when driver is reloaded. Hence enabling bus mastering  in probe().
Also cleared transaction pending bit which gets set during driver
unbind due to clearing of bus mastering ME bit.

Change-Id: I33ab5c8fb075591e768528ed9dff93b186733a0f
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index 0d9e8bd4a4f4..c5541495d75e 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -2352,6 +2352,9 @@ static int rvu_register_interrupts(struct rvu *rvu)
 	}
 	rvu->irq_allocated[RVU_AF_INT_VEC_PFME] = true;
 
+	/* Clear TRPEND bit for all PF */
+	rvu_write64(rvu, BLKADDR_RVUM,
+		    RVU_AF_PFTRPEND, INTR_MASK(rvu->hw->total_pfs));
 	/* Enable ME interrupt for all PFs*/
 	rvu_write64(rvu, BLKADDR_RVUM,
 		    RVU_AF_PFME_INT, INTR_MASK(rvu->hw->total_pfs));
@@ -2703,6 +2706,7 @@ static int rvu_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 		goto err_release_regions;
 	}
 
+	pci_set_master(pdev);
 	rvu->ptp = ptp_get();
 	if (IS_ERR(rvu->ptp)) {
 		err = PTR_ERR(rvu->ptp);
-- 
2.31.1

