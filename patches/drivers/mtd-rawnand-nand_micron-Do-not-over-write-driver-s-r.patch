From e923fec70d7d5804fdb1cc742ed86e7e08d80c6e Mon Sep 17 00:00:00 2001
From: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
Date: Thu, 26 Dec 2019 03:57:40 -0700
Subject: [PATCH 0703/1852] mtd: rawnand: nand_micron: Do not over write
 driver's (read/write)_page() hooks

commit f84f332b3361b8bdf96f07afa19b4f104c20dbaa from
https://github.com/Xilinx/linux-xlnx.git

NAND controllers like ARASAN and PL353, do not work with
micron_nand_(read/write)_page_on_die_ecc, because these controller needs
specific read/write patterns that will not suite with micron read/writes.
Hence if controller driver has read_page() and write_page() hooks installed,
then don't overwrite these hooks.

Signed-off-by: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/nand/raw/nand_micron.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/mtd/nand/raw/nand_micron.c b/drivers/mtd/nand/raw/nand_micron.c
index 56654030ec7f..541fa293c486 100644
--- a/drivers/mtd/nand/raw/nand_micron.c
+++ b/drivers/mtd/nand/raw/nand_micron.c
@@ -501,8 +501,10 @@ static int micron_nand_init(struct nand_chip *chip)
 		chip->ecc.size = 512;
 		chip->ecc.strength = chip->base.eccreq.strength;
 		chip->ecc.algo = NAND_ECC_BCH;
-		chip->ecc.read_page = micron_nand_read_page_on_die_ecc;
-		chip->ecc.write_page = micron_nand_write_page_on_die_ecc;
+		if (!chip->ecc.read_page)
+			chip->ecc.read_page = micron_nand_read_page_on_die_ecc;
+		if (!chip->ecc.write_page)
+			chip->ecc.write_page = micron_nand_write_page_on_die_ecc;
 
 		if (ondie == MICRON_ON_DIE_MANDATORY) {
 			chip->ecc.read_page_raw = nand_read_page_raw_notsupp;
-- 
2.31.1

