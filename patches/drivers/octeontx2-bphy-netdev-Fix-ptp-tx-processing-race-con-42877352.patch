From fd6132d53d84d03e815f0591c5b9b53078255f1d Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveenm@marvell.com>
Date: Fri, 22 Jan 2021 11:57:03 +0530
Subject: [PATCH 1215/1921] octeontx2-bphy-netdev: Fix ptp tx processing race
 condition

There is a race condition observed with the order of setting
PTP_TX_IN_PROGRESS before checking ptp tx pending list empty.
The driver couldn't process the ptp pending queue to submit
the next requests. This patch fixes the issue by checking the
list empty before setting PTP_TX_IN_PROGRESS.

Change-Id: I5e8e128a2ad9b918e662831c90c05dea4a6ef863
Signed-off-by: Naveen Mamindlapalli <naveenm@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/44317
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
index 395721ff8ac2..6a7e24441d2c 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.c
@@ -906,8 +906,8 @@ static netdev_tx_t otx2_rfoe_eth_start_xmit(struct sk_buff *skb,
 	/* hw timestamp */
 	if (unlikely(skb_shinfo(skb)->tx_flags & SKBTX_HW_TSTAMP) &&
 	    priv->tx_hw_tstamp_en) {
-		if (!test_and_set_bit_lock(PTP_TX_IN_PROGRESS, &priv->state) &&
-		    list_empty(&priv->ptp_skb_list.list)) {
+		if (list_empty(&priv->ptp_skb_list.list) &&
+		    !test_and_set_bit_lock(PTP_TX_IN_PROGRESS, &priv->state)) {
 			skb_shinfo(skb)->tx_flags |= SKBTX_IN_PROGRESS;
 			priv->ptp_tx_skb = skb;
 			psm_cmd_lo = (struct psm_cmd_addjob_s *)
-- 
2.31.1

