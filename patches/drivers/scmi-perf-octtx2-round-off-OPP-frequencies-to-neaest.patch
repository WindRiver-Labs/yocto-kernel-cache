From 182602f7b64a919d1f06a6891ebfad18e72af2c0 Mon Sep 17 00:00:00 2001
From: Sujeet Baranwal <sbaranwal@marvell.com>
Date: Thu, 3 Oct 2019 13:01:48 -0700
Subject: [PATCH 439/767] scmi: perf: octtx2: round off OPP frequencies to
 neaest 100

commit 5a7be922c27c525c6cde54879c19c3b6e4bc6abd from
git@git.assembla.com:cavium/WindRiver.linux.git

Calculated frequencies based on the perf value and multiplier leads
to values which are not integral multiple of 100. octx2 chipsets
needs the frequencies to be integral multiple of 100.

Bug: IPBUSW-2243

Change-Id: I7d1488402c2f2b8deb78a7be43c98f4f86d69e3f
Signed-off-by: Sujeet Baranwal <sbaranwal@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/18608
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/firmware/arm_scmi/perf.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/drivers/firmware/arm_scmi/perf.c b/drivers/firmware/arm_scmi/perf.c
index 3c8ae7cc35de..dccd38eb4c3c 100644
--- a/drivers/firmware/arm_scmi/perf.c
+++ b/drivers/firmware/arm_scmi/perf.c
@@ -355,6 +355,23 @@ static int scmi_dev_domain_id(struct device *dev)
 	return clkspec.args[0];
 }
 
+static uint32_t roundoff_to_nearest_100(uint32_t freq)
+{
+	uint32_t quotient, remainder;
+	uint32_t freq_mhz;
+
+	freq_mhz = (freq / 1000000);
+	quotient = freq_mhz / 100;
+	remainder = freq_mhz % 100;
+
+	if (remainder >= 50)
+		freq_mhz = quotient * 100 + 100;
+	else
+		freq_mhz = quotient * 100;
+
+	return freq_mhz * 1000000;
+}
+
 static int scmi_dvfs_device_opps_add(const struct scmi_handle *handle,
 				     struct device *dev)
 {
@@ -373,6 +390,12 @@ static int scmi_dvfs_device_opps_add(const struct scmi_handle *handle,
 	for (opp = dom->opp, idx = 0; idx < dom->opp_count; idx++, opp++) {
 		freq = opp->perf * dom->mult_factor;
 
+		/*
+		 * marvell specific: need to round off to nearest hundered
+		 * if the calcuated frequency is not a multiple of 100 in MHz
+		 */
+		freq = roundoff_to_nearest_100(freq);
+
 		ret = dev_pm_opp_add(dev, freq, 0);
 		if (ret) {
 			dev_warn(dev, "failed to add opp %luHz\n", freq);
-- 
2.31.1

