From 7c0a30359be1e405faa8a46b8819211475755b86 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Tue, 22 Sep 2020 12:24:24 -0700
Subject: [PATCH 1649/1852] media: xilinx: hls: Fix warnings for NULL_RETURNS

commit 38aee58e72bc064f65ba8f1db202a60701b239b1 from
https://github.com/Xilinx/linux-xlnx.git

This patch fix the warnings for the NULL_RETURNS type.

The actual warnings are:

For __xhls_get_pad_format():
Event return_null: 	Explicitly returning null.

For xhls_get_format():
Event returned_null: 	"__xhls_get_pad_format" returns "NULL"
Event dereference: 	Dereferencing "__xhls_get_pad_format(xhls, cfg,
fmt->pad, fmt->which)", which is known to be "NULL"

For xhls_set_format():
Event returned_null: 	"__xhls_get_pad_format" returns "NULL".
Event var_assigned: 	Assigning: "format" = "NULL" return value from
"__xhls_get_pad_format".
Event dereference: 	Dereferencing "format", which is known to be
"NULL".

for xhls_create_controls():
Event returned_null: 	"v4l2_ctrl_new_custom" returns "NULL".
Event var_assigned: 	Assigning: "ctrl" = "NULL" return value from
"v4l2_ctrl_new_custom".
Event dereference: 	Dereferencing a pointer that might be "NULL"
"ctrl" when calling "v4l2_ctrl_s_ctrl_string".

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-hls.c | 36 ++++++++++++++++++----
 1 file changed, 30 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-hls.c b/drivers/media/platform/xilinx/xilinx-hls.c
index fc42977440a9..7f6e5fc62864 100644
--- a/drivers/media/platform/xilinx/xilinx-hls.c
+++ b/drivers/media/platform/xilinx/xilinx-hls.c
@@ -77,16 +77,23 @@ static int xhls_create_controls(struct xhls_device *xhls)
 {
 	struct v4l2_ctrl_config model = xhls_model_ctrl;
 	struct v4l2_ctrl *ctrl;
+	int ret;
 
 	model.max = strlen(xhls->compatible);
 	model.min = model.max;
 
-	v4l2_ctrl_handler_init(&xhls->ctrl_handler, 1);
+	ret = v4l2_ctrl_handler_init(&xhls->ctrl_handler, 1);
+	if (ret) {
+		dev_err(xhls->xvip.dev,
+			"failed to initializing controls (%d)\n", ret);
+		return ret;
+	}
 
 	ctrl = v4l2_ctrl_new_custom(&xhls->ctrl_handler, &model, NULL);
 
-	if (xhls->ctrl_handler.error) {
+	if (xhls->ctrl_handler.error || !ctrl) {
 		dev_err(xhls->xvip.dev, "failed to add controls\n");
+		v4l2_ctrl_handler_free(&xhls->ctrl_handler);
 		return xhls->ctrl_handler.error;
 	}
 
@@ -196,14 +203,22 @@ __xhls_get_pad_format(struct xhls_device *xhls,
 		      struct v4l2_subdev_pad_config *cfg,
 		      unsigned int pad, u32 which)
 {
+	struct v4l2_mbus_framefmt *format;
+
 	switch (which) {
 	case V4L2_SUBDEV_FORMAT_TRY:
-		return v4l2_subdev_get_try_format(&xhls->xvip.subdev, cfg, pad);
+		format = v4l2_subdev_get_try_format(&xhls->xvip.subdev,
+						    cfg, pad);
+		break;
 	case V4L2_SUBDEV_FORMAT_ACTIVE:
-		return &xhls->formats[pad];
+		format = &xhls->formats[pad];
+		break;
 	default:
-		return NULL;
+		format = NULL;
+		break;
 	}
+
+	return format;
 }
 
 static int xhls_get_format(struct v4l2_subdev *subdev,
@@ -211,8 +226,13 @@ static int xhls_get_format(struct v4l2_subdev *subdev,
 			   struct v4l2_subdev_format *fmt)
 {
 	struct xhls_device *xhls = to_hls(subdev);
+	struct v4l2_mbus_framefmt *format;
 
-	fmt->format = *__xhls_get_pad_format(xhls, cfg, fmt->pad, fmt->which);
+	format = __xhls_get_pad_format(xhls, cfg, fmt->pad, fmt->which);
+	if (!format)
+		return -EINVAL;
+
+	fmt->format = *format;
 
 	return 0;
 }
@@ -225,6 +245,8 @@ static int xhls_set_format(struct v4l2_subdev *subdev,
 	struct v4l2_mbus_framefmt *format;
 
 	format = __xhls_get_pad_format(xhls, cfg, fmt->pad, fmt->which);
+	if (!format)
+		return -EINVAL;
 
 	if (fmt->pad == XVIP_PAD_SOURCE) {
 		fmt->format = *format;
@@ -238,6 +260,8 @@ static int xhls_set_format(struct v4l2_subdev *subdev,
 	/* Propagate the format to the source pad. */
 	format = __xhls_get_pad_format(xhls, cfg, XVIP_PAD_SOURCE,
 					 fmt->which);
+	if (!format)
+		return -EINVAL;
 
 	xvip_set_format_size(format, fmt);
 
-- 
2.31.1

