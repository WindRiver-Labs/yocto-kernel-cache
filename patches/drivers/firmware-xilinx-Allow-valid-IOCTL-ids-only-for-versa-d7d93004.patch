From c8c315a3b63b206d73ea3326e74d680bf977546f Mon Sep 17 00:00:00 2001
From: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
Date: Tue, 3 Dec 2019 01:03:55 -0800
Subject: [PATCH 0069/1851] firmware: xilinx: Allow valid IOCTL ids only for
 versal

commit 3d0cb7703802f28cdeed253e0fb896bdda7c94e2 from
https://github.com/Xilinx/linux-xlnx.git

This patch updates the code to add checks for only
allowing valid IOCTL ids for versal before processing
the request.

Signed-off-by: Anurag Kumar Vulisha <anurag.kumar.vulisha@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
Signed-off-by: Rajan Vaja <rajan.vaja@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/firmware/xilinx/zynqmp.c | 39 ++++++++++++++++++++++++++++----
 1 file changed, 35 insertions(+), 4 deletions(-)

diff --git a/drivers/firmware/xilinx/zynqmp.c b/drivers/firmware/xilinx/zynqmp.c
index e18595ecddac..19dc6498e9b2 100644
--- a/drivers/firmware/xilinx/zynqmp.c
+++ b/drivers/firmware/xilinx/zynqmp.c
@@ -505,6 +505,34 @@ static int zynqmp_pm_clock_getparent(u32 clock_id, u32 *parent_id)
 	return ret;
 }
 
+/**
+ * versal_is_valid_ioctl() - Check whether IOCTL ID is valid or not for versal
+ * @ioctl_id:	IOCTL ID
+ *
+ * Return: 1 if IOCTL is valid else 0
+ */
+static inline int versal_is_valid_ioctl(u32 ioctl_id)
+{
+	switch (ioctl_id) {
+	case IOCTL_GET_RPU_OPER_MODE:
+	case IOCTL_SET_RPU_OPER_MODE:
+	case IOCTL_RPU_BOOT_ADDR_CONFIG:
+	case IOCTL_TCM_COMB_CONFIG:
+	case IOCTL_SET_TAPDELAY_BYPASS:
+	case IOCTL_WRITE_GGS:
+	case IOCTL_READ_GGS:
+	case IOCTL_WRITE_PGGS:
+	case IOCTL_READ_PGGS:
+	case IOCTL_SET_BOOT_HEALTH_STATUS:
+	case IOCTL_PROBE_COUNTER_READ:
+	case IOCTL_PROBE_COUNTER_WRITE:
+	case IOCTL_USB_SET_STATE:
+		return 1;
+	default:
+		return 0;
+	}
+}
+
 /**
  * zynqmp_is_valid_ioctl() - Check whether IOCTL ID is valid or not
  * @ioctl_id:	IOCTL ID
@@ -531,8 +559,6 @@ static inline int zynqmp_is_valid_ioctl(u32 ioctl_id)
 	case IOCTL_ULPI_RESET:
 	case IOCTL_SET_BOOT_HEALTH_STATUS:
 	case IOCTL_AFI:
-	case IOCTL_PROBE_COUNTER_READ:
-	case IOCTL_PROBE_COUNTER_WRITE:
 		return 1;
 	default:
 		return 0;
@@ -554,8 +580,13 @@ static inline int zynqmp_is_valid_ioctl(u32 ioctl_id)
 static int zynqmp_pm_ioctl(u32 node_id, u32 ioctl_id, u32 arg1, u32 arg2,
 			   u32 *out)
 {
-	if (!zynqmp_is_valid_ioctl(ioctl_id))
-		return -EINVAL;
+	if (of_find_compatible_node(NULL, NULL, "xlnx,versal")) {
+		if (!versal_is_valid_ioctl(ioctl_id))
+			return -EINVAL;
+	} else {
+		if (!zynqmp_is_valid_ioctl(ioctl_id))
+			return -EINVAL;
+	}
 
 	return zynqmp_pm_invoke_fn(PM_IOCTL, node_id, ioctl_id,
 				   arg1, arg2, out);
-- 
2.31.1

