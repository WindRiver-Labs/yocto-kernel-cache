From 7fe063f014e4e79ed49956d365d674b35492561d Mon Sep 17 00:00:00 2001
From: Sam Bobrowicz <sam@elite-embedded.com>
Date: Wed, 10 Oct 2018 17:21:55 -0700
Subject: [PATCH 0463/1852] xilinx: v4l: dma: Invoke s_power function of
 subdevice

commit 6c45583f290ff9fd8b916a83604216410b977562 from
https://github.com/Xilinx/linux-xlnx.git

This patch enables driver to invoke s_power, which is part of subdev
core APIs. This can put subdevice in power saving mode or normal
operation mode.

Signed-off-by: Sam Bobrowicz <sam@elite-embedded.com>
Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Signed-off-by: Sai Hari Chandana Kalluri <chandana.kalluri@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 40 +++++++++++++++++-----
 1 file changed, 32 insertions(+), 8 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index 5f7bf66693b4..6b7d3016fb90 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -137,22 +137,46 @@ static int xvip_pipeline_start_stop(struct xvip_composite_device *xdev,
 		 * start or stop the subdev only once in case if they are
 		 * shared between sub-graphs
 		 */
-		if (start != is_streaming) {
-			ret = v4l2_subdev_call(subdev, video, s_stream,
-					       start);
-			if (start && ret < 0 && ret != -ENOIOCTLCMD) {
-				dev_err(xdev->dev, "s_stream is failed on subdev\n");
-				xvip_subdev_set_streaming(xdev, subdev, !start);
+		if (start && !is_streaming) {
+			/* power-on subdevice */
+			ret = v4l2_subdev_call(subdev, core, s_power, 1);
+			if (ret < 0 && ret != -ENOIOCTLCMD) {
+				dev_err(xdev->dev,
+					"s_power on failed on subdev\n");
+				xvip_subdev_set_streaming(xdev, subdev, 0);
 				goto error;
 			}
+
+			/* stream-on subdevice */
+			ret = v4l2_subdev_call(subdev, video, s_stream, 1);
+			if (ret < 0 && ret != -ENOIOCTLCMD) {
+				dev_err(xdev->dev,
+					"s_stream on failed on subdev\n");
+				v4l2_subdev_call(subdev, core, s_power, 0);
+				xvip_subdev_set_streaming(xdev, subdev, 0);
+			}
+		} else if (!start && is_streaming) {
+			/* stream-off subdevice */
+			ret = v4l2_subdev_call(subdev, video, s_stream, 0);
+			if (ret < 0 && ret != -ENOIOCTLCMD) {
+				dev_err(xdev->dev,
+					"s_stream off failed on subdev\n");
+				xvip_subdev_set_streaming(xdev, subdev, 1);
+			}
+
+			/* power-off subdevice */
+			ret = v4l2_subdev_call(subdev, core, s_power, 0);
+			if (ret < 0 && ret != -ENOIOCTLCMD)
+				dev_err(xdev->dev,
+					"s_power off failed on subdev\n");
+
 		}
 	}
 
 error:
 	mutex_unlock(&mdev->graph_mutex);
 	media_graph_walk_cleanup(&graph);
-
-	return 0;
+	return ret;
 }
 
 /**
-- 
2.31.1

