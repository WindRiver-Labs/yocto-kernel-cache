From 99ad5120132cf4f60ce0f0aae65b091748167c2c Mon Sep 17 00:00:00 2001
From: Xingfeng Hu <xingfeng.hu@corigine.com>
Date: Fri, 12 Mar 2021 15:08:29 +0100
Subject: [PATCH 1549/1921] flow_offload: add support for packet-per-second
 policing

Allow flow_offload API to configure packet-per-second policing using rate
and burst parameters.

Dummy implementations of tcf_police_rate_pkt_ps() and
tcf_police_burst_pkt() are supplied which return 0, the unconfigured state.
This is to facilitate splitting the offload, driver, and TC code portion of
this feature into separate patches with the aim of providing a logical flow
for review. And the implementation of these helpers will be filled out by a
follow-up patch.

Change-Id: Ie76f126be7c2fda99a1b22d47adc3417b224de2a
Signed-off-by: Xingfeng Hu <xingfeng.hu@corigine.com>
Signed-off-by: Simon Horman <simon.horman@netronome.com>
Signed-off-by: Louis Peens <louis.peens@netronome.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Subbaraya Sundeep <sbhatta@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/52096
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 include/net/flow_offload.h     |  2 ++
 include/net/tc_act/tc_police.h | 12 ++++++++++++
 net/sched/cls_api.c            |  2 ++
 3 files changed, 16 insertions(+)

diff --git a/include/net/flow_offload.h b/include/net/flow_offload.h
index 1d06ffe1fc0d..ddbacebff551 100644
--- a/include/net/flow_offload.h
+++ b/include/net/flow_offload.h
@@ -170,6 +170,8 @@ struct flow_action_entry {
 		struct {				/* FLOW_ACTION_POLICE */
 			u32			burst;
 			u64			rate_bytes_ps;
+			u64			burst_pkt;
+			u64			rate_pkt_ps;
 		} police;
 	};
 };
diff --git a/include/net/tc_act/tc_police.h b/include/net/tc_act/tc_police.h
index 6b87e4aa7bfa..d7d0226494fd 100644
--- a/include/net/tc_act/tc_police.h
+++ b/include/net/tc_act/tc_police.h
@@ -95,4 +95,16 @@ static inline u32 tcf_police_burst(const struct tc_action *act)
 	return burst;
 }
 
+static inline u64 tcf_police_rate_pkt_ps(const struct tc_action *act)
+{
+	/* Not implemented */
+	return 0;
+}
+
+static inline u32 tcf_police_burst_pkt(const struct tc_action *act)
+{
+	/* Not implemented */
+	return 0;
+}
+
 #endif /* __NET_TC_POLICE_H */
diff --git a/net/sched/cls_api.c b/net/sched/cls_api.c
index 20cf503d32a1..cf8bc7c8f8f9 100644
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@ -3381,6 +3381,8 @@ int tc_setup_flow_action(struct flow_action *flow_action,
 			entry->police.burst = tcf_police_burst(act);
 			entry->police.rate_bytes_ps =
 				tcf_police_rate_bytes_ps(act);
+			entry->police.burst_pkt = tcf_police_burst_pkt(act);
+			entry->police.rate_pkt_ps = tcf_police_rate_pkt_ps(act);
 		} else {
 			goto err_out;
 		}
-- 
2.31.1

