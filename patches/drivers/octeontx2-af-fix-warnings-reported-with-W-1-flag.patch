From 3dc2822fefbfff109fc1d19e44bb3038a3170829 Mon Sep 17 00:00:00 2001
From: Hariprasad Kelam <hkelam@marvell.com>
Date: Sat, 9 Jan 2021 13:02:37 +0530
Subject: [PATCH 1058/1921] octeontx2-af: fix warnings reported with W=1 flag

This patch adds static qualifier to local functions to avoid
"[-Wmissing-prototypes]" warnings reported.

Fix "[Wunused-but-set-variable]" warning by removing unused
variable.

Change-Id: I63625930138cbe15ff0d67a422c4ad0f5d1e7594
Signed-off-by: Hariprasad Kelam <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/43224
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/cgx.c       | 2 +-
 drivers/net/ethernet/marvell/octeontx2/af/rpm.c       | 4 ++--
 drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c   | 4 ++--
 drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c | 4 ++--
 drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c   | 6 ++----
 5 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
index dbb78a54cb47..a651c61b7b77 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
@@ -1582,7 +1582,7 @@ bool is_higig2_enabled(void *cgxd, int lmac_id)
 	return (cfg & CGXX_SMUX_TX_CTL_HIGIG_EN);
 }
 
-void cgx_lmac_get_fifolen(struct cgx *cgx)
+static void cgx_lmac_get_fifolen(struct cgx *cgx)
 {
 	u64 cfg;
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rpm.c b/drivers/net/ethernet/marvell/octeontx2/af/rpm.c
index ca2000f30c01..7ea119d93417 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rpm.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rpm.c
@@ -8,12 +8,12 @@
 #include "cgx.h"
 #include "lmac_common.h"
 
-void rpm_write(struct cgx *rpm, u64 lmac, u64 offset, u64 val)
+static void rpm_write(struct cgx *rpm, u64 lmac, u64 offset, u64 val)
 {
 	cgx_write(rpm, lmac, offset, val);
 }
 
-u64 rpm_read(struct cgx *rpm, u64 lmac, u64 offset)
+static u64 rpm_read(struct cgx *rpm, u64 lmac, u64 offset)
 {
 	return	cgx_read(rpm, lmac, offset);
 }
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c
index da7983316edc..0d4f0f21e2ff 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c
@@ -503,8 +503,8 @@ int rvu_mbox_handler_cgx_stop_rxtx(struct rvu *rvu, struct msg_req *req,
 	return 0;
 }
 
-int rvu_lmac_get_stats(struct rvu *rvu, struct msg_req *req,
-		       void *rsp)
+static int rvu_lmac_get_stats(struct rvu *rvu, struct msg_req *req,
+			      void *rsp)
 {
 	int pf = rvu_get_pf(req->hdr.pcifunc);
 	struct cgx_mac_ops *mac_ops;
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c
index 35c4ef620e3e..9ef30388f984 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c
@@ -266,8 +266,8 @@ void rvu_program_channels(struct rvu *rvu)
 	rvu_rpm_set_channels(rvu);
 }
 
-int lmtst_map_table_ops(struct rvu *rvu, u32 index, u64 *val,
-			int lmt_tbl_op)
+static int lmtst_map_table_ops(struct rvu *rvu, u32 index, u64 *val,
+			       int lmt_tbl_op)
 {
 	void __iomem *lmt_map_base;
 	u64 tbl_base;
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
index 43df39d64fc7..04ab11c00b43 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
@@ -1748,13 +1748,11 @@ int rvu_mbox_handler_nix_txsch_alloc(struct rvu *rvu,
 	int link, blkaddr, rc = 0;
 	int lvl, idx, start, end;
 	struct nix_txsch *txsch;
-	struct rvu_pfvf *pfvf;
 	struct nix_hw *nix_hw;
 	u32 *pfvf_map;
 	int nixlf;
 	u16 schq;
 
-	pfvf = rvu_get_pfvf(rvu, pcifunc);
 	rc = nix_get_nixlf(rvu, pcifunc, &nixlf, &blkaddr);
 	if (rc)
 		return rc;
@@ -2831,7 +2829,7 @@ static int nix_af_mark_format_setup(struct rvu *rvu, struct nix_hw *nix_hw,
 	return 0;
 }
 
-void rvu_get_lbk_link_max_frs(struct rvu *rvu,  u16 *max_mtu)
+static void rvu_get_lbk_link_max_frs(struct rvu *rvu,  u16 *max_mtu)
 {
 	/* CN10K supports LBK FIFO size 72 KB */
 	if (rvu->hw->lbk_bufsize == 0x12000)
@@ -2840,7 +2838,7 @@ void rvu_get_lbk_link_max_frs(struct rvu *rvu,  u16 *max_mtu)
 		*max_mtu = NIC_HW_MAX_FRS;
 }
 
-void rvu_get_lmac_link_max_frs(struct rvu *rvu, u16 *max_mtu)
+static void rvu_get_lmac_link_max_frs(struct rvu *rvu, u16 *max_mtu)
 {
 	/* RPM supports FIFO len 128 KB */
 	if (rvu_cgx_get_fifolen(rvu) == 0x20000)
-- 
2.31.1

