From 4586d36304e494370123a757c43fa003648fedbc Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Fri, 24 Apr 2020 13:08:59 -0700
Subject: [PATCH 0464/1921] octeontx2-af: Make SSO/SSOW LF teardown less CPU
 intensive

Use rvu_poll_reg() instead of continuous reading on bit set.

Change-Id: I0690d4104254a0be47bf08d2df47fe0b24405b6e
Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/27477
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../ethernet/marvell/octeontx2/af/rvu_sso.c   | 22 +++++++------------
 1 file changed, 8 insertions(+), 14 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
index aed776675876..0ff69461de8c 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
@@ -296,10 +296,8 @@ int rvu_sso_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot)
 		    SSOW_LF_GWS_INT_MASK);
 
 	/* Prepare WS for GW operations. */
-	do {
-		reg = rvu_read64(rvu, ssow_blkaddr,
-				 SSOW_AF_BAR2_ALIASX(0, SSOW_LF_GWS_TAG));
-	} while (reg & BIT_ULL(63));
+	rvu_poll_reg(rvu, ssow_blkaddr, SSOW_AF_BAR2_ALIASX(0, SSOW_LF_GWS_TAG),
+		     BIT_ULL(63), true);
 
 	if (reg & BIT_ULL(62))
 		rvu_write64(rvu, ssow_blkaddr,
@@ -536,11 +534,9 @@ int rvu_ssow_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot)
 
 	/* HRM 14.13.4 (3) */
 	/* Wait till waitw/desched completes. */
-	do {
-		reg = rvu_read64(rvu, ssow_blkaddr,
-				 SSOW_AF_BAR2_ALIASX(slot,
-						     SSOW_LF_GWS_PENDSTATE));
-	} while (reg & (BIT_ULL(63) | BIT_ULL(58)));
+	rvu_poll_reg(rvu, ssow_blkaddr,
+		     SSOW_AF_BAR2_ALIASX(slot, SSOW_LF_GWS_PENDSTATE),
+		     BIT_ULL(63) | BIT_ULL(58), true);
 
 	reg = rvu_read64(rvu, ssow_blkaddr,
 			 SSOW_AF_BAR2_ALIASX(slot, SSOW_LF_GWS_TAG));
@@ -557,11 +553,9 @@ int rvu_ssow_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot)
 			    0x0);
 
 	/* Wait for desched to complete. */
-	do {
-		reg = rvu_read64(rvu, ssow_blkaddr,
-				 SSOW_AF_BAR2_ALIASX(slot,
-						     SSOW_LF_GWS_PENDSTATE));
-	} while (reg & BIT_ULL(58));
+	rvu_poll_reg(rvu, ssow_blkaddr,
+		     SSOW_AF_BAR2_ALIASX(slot, SSOW_LF_GWS_PENDSTATE),
+		     BIT_ULL(58), true);
 
 	rvu_write64(rvu, ssow_blkaddr,
 		    SSOW_AF_BAR2_ALIASX(0, SSOW_LF_GWS_NW_TIM), 0x0);
-- 
2.31.1

