From bdcf96700c2cf4d6d7b25396083eb3b1e8924d26 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Mon, 25 Jun 2018 14:48:26 -0700
Subject: [PATCH 0381/1851] drm: xlnx: zynqmp_dpsub: Support reserved memory

commit 07d2b13c5736d1f9470c77ce0ed64b9fff248a34 from
https://github.com/Xilinx/linux-xlnx.git

This adds support to use the assigned reserved memory for the buffer
allocation. The phandle to the reserved memory needs to be added to
the driver node using 'memory-region' property, as shown
in the example below.

	reserved: me@0x40000000 {
		compatible = "shared-dma-pool";
		reg = <0x0 0x40000000 0x0 0x10000000>;
		reusable;
	};

	zynqmp_dpsub: zynqmp-display@fd4a0000 {
		...
		memory-region = <&reserved>;
		...
	};

Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Reviewed-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/zynqmp_dpsub.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/zynqmp_dpsub.c b/drivers/gpu/drm/xlnx/zynqmp_dpsub.c
index 8ff251dd5359..9b3545348f7b 100644
--- a/drivers/gpu/drm/xlnx/zynqmp_dpsub.c
+++ b/drivers/gpu/drm/xlnx/zynqmp_dpsub.c
@@ -19,6 +19,7 @@
 #include <linux/component.h>
 #include <linux/module.h>
 #include <linux/of_platform.h>
+#include <linux/of_reserved_mem.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 
@@ -86,11 +87,14 @@ static int zynqmp_dpsub_probe(struct platform_device *pdev)
 	if (ret)
 		goto err_disp;
 
+	/* Try the reserved memory. Proceed if there's none */
+	of_reserved_mem_device_init(&pdev->dev);
+
 	/* Populate the sound child nodes */
 	ret = of_platform_populate(pdev->dev.of_node, NULL, NULL, &pdev->dev);
 	if (ret) {
 		dev_err(&pdev->dev, "failed to populate child nodes\n");
-		goto err_component;
+		goto err_rmem;
 	}
 
 	dpsub->master = xlnx_drm_pipeline_init(pdev);
@@ -105,7 +109,8 @@ static int zynqmp_dpsub_probe(struct platform_device *pdev)
 
 err_populate:
 	of_platform_depopulate(&pdev->dev);
-err_component:
+err_rmem:
+	of_reserved_mem_device_release(&pdev->dev);
 	component_del(&pdev->dev, &zynqmp_dpsub_component_ops);
 err_disp:
 	zynqmp_disp_remove(pdev);
@@ -123,6 +128,7 @@ static int zynqmp_dpsub_remove(struct platform_device *pdev)
 
 	xlnx_drm_pipeline_exit(dpsub->master);
 	of_platform_depopulate(&pdev->dev);
+	of_reserved_mem_device_release(&pdev->dev);
 	component_del(&pdev->dev, &zynqmp_dpsub_component_ops);
 
 	err = zynqmp_disp_remove(pdev);
-- 
2.31.1

