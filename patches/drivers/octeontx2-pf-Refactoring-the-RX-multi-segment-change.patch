From 00381d46955deebc4d7df2c3d74a288a2632b323 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Fri, 27 Nov 2020 14:32:04 +0530
Subject: [PATCH 0945/1921] octeontx2-pf: Refactoring the RX multi segment
 changes.

This patch refactors and fixes minor issue while handling
multi segment RX CQE.

Change-Id: I042d35d3ae34f0974d33b4d35c3721004a7933ba
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/41172
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
(cherry picked from commit 17b609e91601123813552af1b03a2ad1c24a02bd)
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/41174
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_txrx.c         | 75 +++++++------------
 1 file changed, 27 insertions(+), 48 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
index 11b3ea83d956..b28efe7edc40 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
@@ -320,26 +320,44 @@ static bool otx2_check_rcv_errors(struct otx2_nic *pfvf,
 	return true;
 }
 
-static bool otx2_rcv_pkt_handler(struct otx2_nic *pfvf,
+static void otx2_rcv_pkt_handler(struct otx2_nic *pfvf,
 				 struct napi_struct *napi,
 				 struct otx2_cq_queue *cq,
 				 struct nix_cqe_rx_s *cqe)
 {
 	struct nix_rx_parse_s *parse = &cqe->parse;
+	struct nix_rx_sg_s *sg = &cqe->sg;
 	struct sk_buff *skb = NULL;
+	void *end, *start;
+	u64 *seg_addr;
+	u16 *seg_size;
+	int seg;
 
 	if (unlikely(parse->errlev || parse->errcode)) {
 		if (otx2_check_rcv_errors(pfvf, cqe, cq->cq_idx))
-			return false;
+			return;
 	}
 
+	if (pfvf->xdp_prog)
+		if (otx2_xdp_rcv_pkt_handler(pfvf, cqe, cq))
+			return;
+
 	skb = napi_get_frags(napi);
 	if (unlikely(!skb))
-		return false;
+		return;
 
-	if (pfvf->xdp_prog)
-		if (otx2_xdp_rcv_pkt_handler(pfvf, cqe, cq))
-			return false;
+	start = (void *)sg;
+	end = start + ((cqe->parse.desc_sizem1 + 1) * 16);
+	while (start < end) {
+		sg = (struct nix_rx_sg_s *)start;
+		seg_addr = &sg->seg_addr;
+		seg_size = (void *)sg;
+		for (seg = 0; seg < sg->segs; seg++, seg_addr++) {
+			otx2_skb_add_frag(pfvf, skb, *seg_addr, seg_size[seg], parse);
+			cq->pool_ptrs++;
+		}
+		start += sizeof(*sg);
+	}
 
 	otx2_set_rxhash(pfvf, cqe, skb);
 
@@ -348,22 +366,7 @@ static bool otx2_rcv_pkt_handler(struct otx2_nic *pfvf,
 		skb->ip_summed = CHECKSUM_UNNECESSARY;
 
 	otx2_set_taginfo(parse, skb);
-
-	return true;
-}
-
-static void otx2_rcv_add_frags(struct otx2_nic *pfvf,
-			       struct napi_struct *napi,
-			       struct otx2_cq_queue *cq,
-			       struct nix_cqe_rx_s *cqe,
-			       u64 iova, int len)
-{
-	struct nix_rx_parse_s *parse = &cqe->parse;
-	/* skb is checked for NULL before calling this function */
-	struct sk_buff *skb = napi_get_frags(napi);
-
-	otx2_skb_add_frag(pfvf, skb, iova, len, parse);
-	cq->pool_ptrs++;
+	napi_gro_frags(napi);
 }
 
 static int otx2_rx_napi_handler(struct otx2_nic *pfvf,
@@ -371,9 +374,7 @@ static int otx2_rx_napi_handler(struct otx2_nic *pfvf,
 				struct otx2_cq_queue *cq, int budget)
 {
 	struct nix_cqe_rx_s *cqe;
-	struct nix_rx_sg_s *sg;
 	int processed_cqe = 0;
-	u8 segs;
 
 	/* Make sure HW writes to CQ are done */
 	dma_rmb();
@@ -388,30 +389,8 @@ static int otx2_rx_napi_handler(struct otx2_nic *pfvf,
 		cq->cq_head++;
 		cq->cq_head &= (cq->cqe_cnt - 1);
 
-		if (!otx2_rcv_pkt_handler(pfvf, napi, cq, cqe))
-			goto next;
-
-		sg = &cqe->sg;
-		while (sg->subdc == NIX_SUBDC_SG && sg->segs) {
-			/* Hardware supports three segements per SG */
-			for (segs = 0; segs < sg->segs; segs++) {
-				if (segs == 0)
-					otx2_rcv_add_frags(pfvf, napi, cq, cqe,
-							   sg->seg_addr,
-							   sg->seg_size);
-				if (segs == 1)
-					otx2_rcv_add_frags(pfvf, napi, cq, cqe,
-							   sg->seg2_addr,
-							   sg->seg2_size);
-				if (segs == 2)
-					otx2_rcv_add_frags(pfvf, napi, cq, cqe,
-							   sg->seg3_addr,
-							   sg->seg3_size);
-			}
-			sg++;
-		}
-		napi_gro_frags(napi);
-next:
+		otx2_rcv_pkt_handler(pfvf, napi, cq, cqe);
+
 		cqe->hdr.cqe_type = NIX_XQE_TYPE_INVALID;
 		cqe->sg.seg_addr = 0x00;
 		processed_cqe++;
-- 
2.31.1

