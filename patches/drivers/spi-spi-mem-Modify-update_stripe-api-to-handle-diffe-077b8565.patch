From ec2a8488a0c767ee77fc94c1e78a3a5eb1286568 Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Thu, 2 Apr 2020 00:07:02 +0530
Subject: [PATCH 1308/1851] spi: spi-mem: Modify update_stripe api to handle
 different commands with same opcode value

commit 3d2ef6611abe859faf9080d1b6d2811ec9a581f2 from
https://github.com/Xilinx/linux-xlnx.git

Write status register 2 command(SPINOR_OP_WRSR2) and 4byte Quad page
program command(SPINOR_OP_PP_1_4_4_4B) has the same opcode(0x3e) value.
In dual parallel mode the stripe flag of the transfer structure should be
enabled for SPINOR_OP_PP_1_4_4_4B and disabled for SPINOR_OP_WRSR2 commands
respectively.
As per the current implementation of the update_stripe() api the stripe
flag is disabled for both the commands.

This patch modifies update_stripe() api to enable the stripe for
SPINOR_OP_PP_1_4_4_4B and disable it for SPINOR_OP_WRSR2 commands.

Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/spi/spi-mem.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/spi/spi-mem.c b/drivers/spi/spi-mem.c
index 83f5d722120f..db67779218db 100644
--- a/drivers/spi/spi-mem.c
+++ b/drivers/spi/spi-mem.c
@@ -15,19 +15,19 @@
 
 #define SPI_MEM_MAX_BUSWIDTH		8
 
-bool update_stripe(const u8 opcode)
+bool update_stripe(const struct spi_mem_op *op)
 {
-	if (opcode ==  SPINOR_OP_BE_4K ||
-	    opcode ==  SPINOR_OP_BE_32K ||
-	    opcode ==  SPINOR_OP_CHIP_ERASE ||
-	    opcode ==  SPINOR_OP_SE ||
-	    opcode ==  SPINOR_OP_BE_32K_4B ||
-	    opcode ==  SPINOR_OP_SE_4B ||
-	    opcode == SPINOR_OP_BE_4K_4B ||
-	    opcode ==  SPINOR_OP_WRSR ||
-	    opcode ==  SPINOR_OP_WREAR ||
-	    opcode ==  SPINOR_OP_BRWR ||
-	    opcode ==  SPINOR_OP_WRSR2)
+	if (op->cmd.opcode ==  SPINOR_OP_BE_4K ||
+	    op->cmd.opcode ==  SPINOR_OP_BE_32K ||
+	    op->cmd.opcode ==  SPINOR_OP_CHIP_ERASE ||
+	    op->cmd.opcode ==  SPINOR_OP_SE ||
+	    op->cmd.opcode ==  SPINOR_OP_BE_32K_4B ||
+	    op->cmd.opcode ==  SPINOR_OP_SE_4B ||
+	    op->cmd.opcode == SPINOR_OP_BE_4K_4B ||
+	    op->cmd.opcode ==  SPINOR_OP_WRSR ||
+	    op->cmd.opcode ==  SPINOR_OP_WREAR ||
+	    op->cmd.opcode ==  SPINOR_OP_BRWR ||
+	    (op->cmd.opcode ==  SPINOR_OP_WRSR2 && !op->addr.nbytes))
 		return false;
 
 	return true;
@@ -382,7 +382,7 @@ int spi_mem_exec_op(struct spi_mem *mem, const struct spi_mem_op *op)
 			xfers[xferpos].tx_nbits = op->data.buswidth;
 		}
 
-		xfers[xferpos].stripe = update_stripe(op->cmd.opcode);
+		xfers[xferpos].stripe = update_stripe(op);
 		xfers[xferpos].len = op->data.nbytes;
 		spi_message_add_tail(&xfers[xferpos], &msg);
 		xferpos++;
-- 
2.31.1

