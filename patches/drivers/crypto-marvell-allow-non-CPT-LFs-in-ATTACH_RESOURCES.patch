From a109f8ad710136b649bbe896086684c07d2f7d45 Mon Sep 17 00:00:00 2001
From: Srujana Challa <schalla@marvell.com>
Date: Wed, 7 Apr 2021 16:51:27 +0530
Subject: [PATCH 1343/1921] crypto: marvell: allow non CPT LFs in
 ATTACH_RESOURCES mbox

Existing CPT PF driver doesn't allow non CPT LFs to be
attached to a CPT VF. So, this patch removes the check
to allow non CPT LFs also as it is unnecessary.

Signed-off-by: Srujana Challa <schalla@marvell.com>
Change-Id: I25f6758db0e044d4b1010b9df6e45acd2ab54db4
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/49714
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <SunilKovvuri.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../crypto/marvell/cn10k/cn10k_cptpf_mbox.c   | 22 -------------------
 .../marvell/octeontx2/otx2_cptpf_mbox.c       | 22 -------------------
 2 files changed, 44 deletions(-)

diff --git a/drivers/crypto/marvell/cn10k/cn10k_cptpf_mbox.c b/drivers/crypto/marvell/cn10k/cn10k_cptpf_mbox.c
index 3d309a33f72d..9e3dac13d45c 100644
--- a/drivers/crypto/marvell/cn10k/cn10k_cptpf_mbox.c
+++ b/drivers/crypto/marvell/cn10k/cn10k_cptpf_mbox.c
@@ -225,24 +225,6 @@ static int forward_to_af(struct cn10k_cptpf_dev *cptpf,
 	return 0;
 }
 
-static int check_attach_rsrcs_req(struct cn10k_cptpf_dev *cptpf,
-				  struct cn10k_cptvf_info *vf,
-				  struct mbox_msghdr *req, int size)
-{
-	struct rsrc_attach *rsrc_req = (struct rsrc_attach *)req;
-
-	if (rsrc_req->sso > 0 || rsrc_req->ssow > 0 || rsrc_req->npalf > 0 ||
-	    rsrc_req->timlfs > 0 || rsrc_req->nixlf > 0) {
-		dev_err(&cptpf->pdev->dev,
-			"Invalid ATTACH_RESOURCES request from %s\n",
-			dev_name(&vf->vf_dev->dev));
-
-		return -EINVAL;
-	}
-
-	return forward_to_af(cptpf, vf, req, size);
-}
-
 static int reply_eng_grp_num_msg(struct cn10k_cptpf_dev *cptpf,
 				 struct cn10k_cptvf_info *vf,
 				 struct mbox_msghdr *req)
@@ -422,10 +404,6 @@ static int cptpf_handle_vf_req(struct cn10k_cptpf_dev *cptpf,
 		return otx2_reply_invalid_msg(&cptpf->vfpf_mbox, vf->vf_id,
 					      req->pcifunc, req->id);
 	switch (req->id) {
-	case MBOX_MSG_ATTACH_RESOURCES:
-		err = check_attach_rsrcs_req(cptpf, vf, req, size);
-		break;
-
 	case MBOX_MSG_GET_ENG_GRP_NUM:
 		err = reply_eng_grp_num_msg(cptpf, vf, req);
 		break;
diff --git a/drivers/crypto/marvell/octeontx2/otx2_cptpf_mbox.c b/drivers/crypto/marvell/octeontx2/otx2_cptpf_mbox.c
index d4cdf35653da..06fe731dd4d7 100644
--- a/drivers/crypto/marvell/octeontx2/otx2_cptpf_mbox.c
+++ b/drivers/crypto/marvell/octeontx2/otx2_cptpf_mbox.c
@@ -234,24 +234,6 @@ static int forward_to_af(struct otx2_cptpf_dev *cptpf,
 	return 0;
 }
 
-static int check_attach_rsrcs_req(struct otx2_cptpf_dev *cptpf,
-				  struct otx2_cptvf_info *vf,
-				  struct mbox_msghdr *req, int size)
-{
-	struct rsrc_attach *rsrc_req = (struct rsrc_attach *)req;
-
-	if (rsrc_req->sso > 0 || rsrc_req->ssow > 0 || rsrc_req->npalf > 0 ||
-	    rsrc_req->timlfs > 0 || rsrc_req->nixlf > 0) {
-		dev_err(&cptpf->pdev->dev,
-			"Invalid ATTACH_RESOURCES request from %s\n",
-			dev_name(&vf->vf_dev->dev));
-
-		return -EINVAL;
-	}
-
-	return forward_to_af(cptpf, vf, req, size);
-}
-
 static int reply_ready_msg(struct otx2_cptpf_dev *cptpf,
 			   struct otx2_cptvf_info *vf,
 			   struct mbox_msghdr *req)
@@ -453,10 +435,6 @@ static int cptpf_handle_vf_req(struct otx2_cptpf_dev *cptpf,
 		err = reply_ready_msg(cptpf, vf, req);
 		break;
 
-	case MBOX_MSG_ATTACH_RESOURCES:
-		err = check_attach_rsrcs_req(cptpf, vf, req, size);
-		break;
-
 	case MBOX_MSG_GET_ENG_GRP_NUM:
 		err = reply_eng_grp_num_msg(cptpf, vf, req);
 		break;
-- 
2.31.1

