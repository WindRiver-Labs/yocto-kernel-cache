From 8f250e5699dc5a0ed919025b6a3ec59148e12c92 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Fri, 15 Nov 2019 14:54:51 +0530
Subject: [PATCH 444/767] octeontx2-pf: Flush pending SQE on teardown

commit 81bca1e5456ace6f7caf79013ef3daf71051b81a from
git@git.assembla.com:cavium/WindRiver.linux.git

Ensure that all SQEs of SQ are processed before disabling SMQ
in PF/VF teardown.

Change-Id: Ic7bea55335a332e5dbc891432911f485fbd8c333
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/19038
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
(cherry picked from commit 9335e7e73a98c4191e56d286affcc1d18a244314)
Reviewed-on: https://sj1git1.cavium.com/21070
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.c       | 19 +++++++++++++++++++
 .../marvell/octeontx2/nic/otx2_common.h       |  1 +
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c  |  7 +++++--
 3 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index 9c173e565bd5..0df9d6501ebd 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -553,6 +553,25 @@ int otx2_txschq_stop(struct otx2_nic *pfvf)
 	return err;
 }
 
+void otx2_sqb_flush(struct otx2_nic *pfvf)
+{
+	int qidx, sqe_tail, sqe_head;
+	u64 incr, *ptr, val;
+
+	ptr = (u64 *)otx2_get_regaddr(pfvf, NIX_LF_SQ_OP_STATUS);
+	for (qidx = 0; qidx < pfvf->hw.tx_queues; qidx++) {
+		incr = (u64)qidx << 32;
+		while (1) {
+			val = otx2_atomic64_add(incr, ptr);
+			sqe_head = (val >> 20) & 0x3F;
+			sqe_tail = (val >> 28) & 0x3F;
+			if (sqe_head == sqe_tail)
+				break;
+			usleep_range(1, 3);
+		}
+	}
+}
+
 /* RED and drop levels of CQ on packet reception.
  * For CQ level is measure of emptiness ( 0x0 = full, 255 = empty).
  */
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index dade789f2029..548ec6075bc9 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -702,6 +702,7 @@ int otx2_config_nix_queues(struct otx2_nic *pfvf);
 int otx2_txschq_config(struct otx2_nic *pfvf, int lvl);
 int otx2_txsch_alloc(struct otx2_nic *pfvf);
 int otx2_txschq_stop(struct otx2_nic *pfvf);
+void otx2_sqb_flush(struct otx2_nic *pfvf);
 dma_addr_t otx2_alloc_rbuf(struct otx2_nic *pfvf, struct otx2_pool *pool,
 			   gfp_t gfp);
 int otx2_rxtx_enable(struct otx2_nic *pfvf, bool enable);
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index a8b3ea2536d1..a62b88c88d32 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1414,6 +1414,9 @@ static void otx2_free_hw_resources(struct otx2_nic *pf)
 	struct msg_req *req;
 	int qidx, err;
 
+	/* Ensure all SQE are processed */
+	otx2_sqb_flush(pf);
+
 	/* Stop transmission */
 	err = otx2_txschq_stop(pf);
 	if (err)
@@ -1425,8 +1428,6 @@ static void otx2_free_hw_resources(struct otx2_nic *pf)
 		otx2_nix_config_bp(pf, false);
 	otx2_mbox_unlock(mbox);
 
-	otx2_free_sq_res(pf);
-
 	/* Disable RQs */
 	otx2_ctx_disable(mbox, NIX_AQ_CTYPE_RQ, false);
 
@@ -1439,6 +1440,8 @@ static void otx2_free_hw_resources(struct otx2_nic *pf)
 			otx2_cleanup_tx_cqes(pf, cq);
 	}
 
+	otx2_free_sq_res(pf);
+
 	/* Free RQ buffer pointers*/
 	otx2_free_aura_ptr(pf, AURA_NIX_RQ);
 
-- 
2.31.1

