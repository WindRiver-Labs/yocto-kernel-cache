From 32cd8af79e50b51145a661d1c40d456753abce37 Mon Sep 17 00:00:00 2001
From: Rakesh Babu <rsaladi2@marvell.com>
Date: Mon, 17 Aug 2020 16:28:12 +0530
Subject: [PATCH 0701/1921] octeontx2-af: Free RVU NIX IRQs properly.

As 98xx has 2 NIX blocks, "nix_hw" data instance is passed as cookie to
RVU NIX IRQ handlers instead of "rvu" data instance to distinguish among
the 2 NIX IRQ handlers. To free these Interrupt handlers "nix_hw" instance
should be useds as cookie, but it is left unchanged with "rvu" data
instance. This leads to kernel panic when removing the AF driver. This
patch fixes this panic.

Change-Id: Iaa08e65877e6394f6e7eb923110707fef0448c2e
Signed-off-by: Rakesh Babu <rsaladi2@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/34980
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
index f246946cc770..a5de4555c936 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_nix.c
@@ -4368,13 +4368,13 @@ static void rvu_nix_blk_unregister_interrupts(struct rvu *rvu,
 
 	if (rvu->irq_allocated[offs + NIX_AF_INT_VEC_RVU]) {
 		free_irq(pci_irq_vector(rvu->pdev, offs + NIX_AF_INT_VEC_RVU),
-			 rvu);
+			 nix_hw);
 		rvu->irq_allocated[offs + NIX_AF_INT_VEC_RVU] = false;
 	}
 
 	for (i = NIX_AF_INT_VEC_AF_ERR; i < NIX_AF_INT_VEC_CNT; i++)
 		if (rvu->irq_allocated[offs + i]) {
-			free_irq(pci_irq_vector(rvu->pdev, offs + i), rvu);
+			free_irq(pci_irq_vector(rvu->pdev, offs + i), nix_hw);
 			rvu->irq_allocated[offs + i] = false;
 		}
 }
-- 
2.31.1

