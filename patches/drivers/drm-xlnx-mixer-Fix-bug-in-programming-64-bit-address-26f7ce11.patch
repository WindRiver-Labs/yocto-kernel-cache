From f2605eb27f4e17df8642a03fcc409435bfafee65 Mon Sep 17 00:00:00 2001
From: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Date: Mon, 9 Jul 2018 00:20:11 -0700
Subject: [PATCH 0384/1851] drm: xlnx: mixer: Fix bug in programming 64-bit
 address

commit 3b0021de5e92e277350beb14e5798f3677149672 from
https://github.com/Xilinx/linux-xlnx.git

In the current implementation, the upper 32-bit address is programmed
followed by lower 32-bit address to mixer registers. Instead, it should
be the other way. This patch ensures that the 64-bit address programmed
correctly.

Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_mixer.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_mixer.c b/drivers/gpu/drm/xlnx/xlnx_mixer.c
index fadb8e20d519..1d9a0f97b6e9 100644
--- a/drivers/gpu/drm/xlnx/xlnx_mixer.c
+++ b/drivers/gpu/drm/xlnx/xlnx_mixer.c
@@ -372,8 +372,8 @@ static inline void reg_writel(void __iomem *base, int offset, u32 val)
 
 static inline void reg_writeq(void __iomem *base, int offset, u64 val)
 {
-	writel(upper_32_bits(val), base + offset);
-	writel(lower_32_bits(val), base + offset + 4);
+	writel(lower_32_bits(val), base + offset);
+	writel(upper_32_bits(val), base + offset + 4);
 }
 
 static inline u32 reg_readl(void __iomem *base, int offset)
-- 
2.31.1

