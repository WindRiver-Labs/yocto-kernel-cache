From 41b186ed49b94de641489e7181577c9596fc2e2a Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Tue, 25 Feb 2020 12:41:05 +0530
Subject: [PATCH 1335/1852] Revert "net: phy: call state machine synchronously
 in phy_stop"

commit cfcb9ff98bda89bc1b4c85563598f0376d1d36c0 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit e8cfd9d6c7727a067b38dbe7655ca02377fdb301.

An issue was observed with TI DP83867 PHYs on Xilixn boards where ifconfig
down/up does not work. This was traced to changes in phy_stop where the
state machine is stopped. It is as yet unclear why this is affecting this
PHY and it is being debugged. These patches are being reverted as a
workaround because this affects basic functionality.

Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/net/phy/phy.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
index 9fec03678874..fd819ac49e26 100644
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -868,8 +868,6 @@ void phy_stop(struct phy_device *phydev)
 
 	mutex_unlock(&phydev->lock);
 
-	phy_state_machine(&phydev->state_queue.work);
-
 	/* Cannot call flush_scheduled_work() here as desired because
 	 * of rtnl_lock(), but PHY_HALTED shall guarantee irq handler
 	 * will not reenable interrupts.
-- 
2.31.1

