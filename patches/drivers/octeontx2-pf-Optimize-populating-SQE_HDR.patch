From febd0f34284fd7607ad174736bde2ea4f03fafdd Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Wed, 30 Oct 2019 11:52:28 +0530
Subject: [PATCH 396/767] octeontx2-pf: Optimize populating SQE_HDR

commit fc87b5d941e7357f1da2cd4fab5a71f6e230017d from
git@git.assembla.com:cavium/WindRiver.linux.git

Fields aura, qidx, pnc, df in SQE_HDR doesn't change for each
SQE (or packet). Hence avoid repopulating them for every
SQE, this saves few cycles.

Change-Id: Ia968853def360aaa360888ec2328c97022e30436
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/18066
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_txrx.c         | 23 ++++++++++++-------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
index 16ce810735dd..9513381d7e5f 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
@@ -640,13 +640,18 @@ static void otx2_sqe_add_hdr(struct otx2_nic *pfvf, struct otx2_snd_queue *sq,
 {
 	int proto = 0;
 
+	/* Check if SQE was framed before, if yes then no need to
+	 * set these constants again anf again.
+	 */
+	if (!sqe_hdr->total) {
+		/* Don't free Tx buffers to Aura */
+		sqe_hdr->df = 1;
+		sqe_hdr->aura = sq->aura_id;
+		/* Post a CQE Tx after pkt transmission */
+		sqe_hdr->pnc = 1;
+		sqe_hdr->sq = qidx;
+	}
 	sqe_hdr->total = skb->len;
-	/* Don't free Tx buffers to Aura */
-	sqe_hdr->df = 1;
-	sqe_hdr->aura = sq->aura_id;
-	/* Post a CQE Tx after pkt transmission */
-	sqe_hdr->pnc = 1;
-	sqe_hdr->sq = qidx;
 	/* Set SQE identifier which will be used later for freeing SKB */
 	sqe_hdr->sqe_id = sq->head;
 
@@ -929,8 +934,10 @@ bool otx2_sq_append_skb(struct net_device *netdev, struct otx2_snd_queue *sq,
 		return true;
 	}
 
-	/* Set SQE's SEND_HDR */
-	memset(sq->sqe_base, 0, sq->sqe_size);
+	/* Set SQE's SEND_HDR.
+	 * Do not clear the first 64bit as it contains constant info.
+	 */
+	memset(sq->sqe_base + 8, 0, sq->sqe_size - 8);
 	sqe_hdr = (struct nix_sqe_hdr_s *)(sq->sqe_base);
 	otx2_sqe_add_hdr(pfvf, sq, sqe_hdr, skb, qidx);
 	offset = sizeof(*sqe_hdr);
-- 
2.31.1

