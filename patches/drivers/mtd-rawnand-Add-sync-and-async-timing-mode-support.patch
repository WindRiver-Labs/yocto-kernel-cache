From d99bd716467e18c1f18575863a6c7e1d6abc0ca0 Mon Sep 17 00:00:00 2001
From: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
Date: Thu, 5 Dec 2019 02:19:40 -0700
Subject: [PATCH 0012/1852] mtd: rawnand: Add sync and async timing mode
 support

commit cbb56fde78b2f2617856523a561f10102c622c8f from
https://github.com/Xilinx/linux-xlnx.git

The current NAND layer is supporting only SDR modes, hence
struct onfi_params is not having sync timing mode parameter,
so add src_sync_timing_mode onfi parameter to struct onfi_params
and provide the apis to get sync and async onfi parameter timing values.

These are needed to switch the NAND controllers to operate in high
speed modes like NVDDR and NVDDR2.

Signed-off-by: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/nand/raw/nand_onfi.c |  1 +
 include/linux/mtd/onfi.h         |  1 +
 include/linux/mtd/rawnand.h      | 18 ++++++++++++++++++
 3 files changed, 20 insertions(+)

diff --git a/drivers/mtd/nand/raw/nand_onfi.c b/drivers/mtd/nand/raw/nand_onfi.c
index 8fe8d7bdd203..efa349958b0c 100644
--- a/drivers/mtd/nand/raw/nand_onfi.c
+++ b/drivers/mtd/nand/raw/nand_onfi.c
@@ -294,6 +294,7 @@ int nand_onfi_detect(struct nand_chip *chip)
 	onfi->tR = le16_to_cpu(p->t_r);
 	onfi->tCCS = le16_to_cpu(p->t_ccs);
 	onfi->async_timing_mode = le16_to_cpu(p->async_timing_mode);
+	onfi->src_sync_timing_mode = le16_to_cpu(p->src_sync_timing_mode);
 	onfi->vendor_revision = le16_to_cpu(p->vendor_revision);
 	memcpy(onfi->vendor, p->vendor, sizeof(p->vendor));
 	chip->parameters.onfi = onfi;
diff --git a/include/linux/mtd/onfi.h b/include/linux/mtd/onfi.h
index 339ac798568e..9e8366f4517f 100644
--- a/include/linux/mtd/onfi.h
+++ b/include/linux/mtd/onfi.h
@@ -171,6 +171,7 @@ struct onfi_params {
 	u16 tR;
 	u16 tCCS;
 	u16 async_timing_mode;
+	u16 src_sync_timing_mode;
 	u16 vendor_revision;
 	u8 vendor[88];
 };
diff --git a/include/linux/mtd/rawnand.h b/include/linux/mtd/rawnand.h
index ac3884a28dea..f921a5d51e71 100644
--- a/include/linux/mtd/rawnand.h
+++ b/include/linux/mtd/rawnand.h
@@ -1240,6 +1240,24 @@ static inline bool nand_is_slc(struct nand_chip *chip)
 	return nanddev_bits_per_cell(&chip->base) == 1;
 }
 
+/* return the supported asynchronous timing mode. */
+static inline int onfi_get_async_timing_mode(struct nand_chip *chip)
+{
+	if (!chip->parameters.onfi)
+		return ONFI_TIMING_MODE_UNKNOWN;
+
+	return chip->parameters.onfi->async_timing_mode;
+}
+
+/* return the supported synchronous timing mode. */
+static inline int onfi_get_sync_timing_mode(struct nand_chip *chip)
+{
+	if (!chip->parameters.onfi)
+		return ONFI_TIMING_MODE_UNKNOWN;
+
+	return le16_to_cpu(chip->parameters.onfi->src_sync_timing_mode);
+}
+
 /**
  * Check if the opcode's address should be sent only on the lower 8 bits
  * @command: opcode to check
-- 
2.31.1

