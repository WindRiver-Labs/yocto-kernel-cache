From 7aa99d0864ad084b196b1b03ebdca911c399055d Mon Sep 17 00:00:00 2001
From: Harman Kalra <hkalra@marvell.com>
Date: Thu, 1 Jul 2021 16:54:35 +0530
Subject: [PATCH 1634/1921] soc: marvell: hw_access: renaming to hw access
 driver

Since the scope of this driver wont be limited to just CSR
access but much more than that.

Change-Id: I75fa7af74a28ce95a40ad68b0444721973cec4b2
Signed-off-by: Harman Kalra <hkalra@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/55859
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
Tested-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/soc/marvell/Kconfig                   |  4 ++--
 drivers/soc/marvell/Makefile                  |  2 +-
 drivers/soc/marvell/csr-access/Makefile       |  9 -------
 drivers/soc/marvell/hw-access/Makefile        |  9 +++++++
 .../hw_rw_access.c}                           | 24 +++++++++----------
 5 files changed, 24 insertions(+), 24 deletions(-)
 delete mode 100644 drivers/soc/marvell/csr-access/Makefile
 create mode 100644 drivers/soc/marvell/hw-access/Makefile
 rename drivers/soc/marvell/{csr-access/hw_csr_access.c => hw-access/hw_rw_access.c} (88%)

diff --git a/drivers/soc/marvell/Kconfig b/drivers/soc/marvell/Kconfig
index 56e2f88a3260..94378d323be0 100644
--- a/drivers/soc/marvell/Kconfig
+++ b/drivers/soc/marvell/Kconfig
@@ -139,11 +139,11 @@ config MRVL_PHY_DIAGNOSTICS
 	  functionality offered by ethtool. Requires PHY driver support in ATF.
 
 config HW_CSR_ACCESS
-       tristate "Access HW Device Config Space Registers"
+	tristate "Access HW Device Config Space"
         default m
 	help
 	  provides an interface which enables user space utility to read from or to write
-	  to HW Device Config Space Registers.
+	  to HW Device Config Space Registers, Contexts, Memory.
 
 config OCTEONTX_SERDES
 	tristate "OcteonTX2 serdes debug commands"
diff --git a/drivers/soc/marvell/Makefile b/drivers/soc/marvell/Makefile
index 831f5699afc8..bbd1e9c33da6 100644
--- a/drivers/soc/marvell/Makefile
+++ b/drivers/soc/marvell/Makefile
@@ -5,7 +5,7 @@ obj-y		+= octeontx2-dpi/
 obj-y		+= octeontx2-sdp/
 obj-y		+= octeontx2-npa/
 obj-y		+= octeontx2-llc/
-obj-y 		+= csr-access/
+obj-y 		+= hw-access/
 obj-y 		+= octeontx2-serdes/
 obj-y           += cn10ka-swup/
 obj-$(CONFIG_OCTEONTX_INFO) += octeontx_info.o
diff --git a/drivers/soc/marvell/csr-access/Makefile b/drivers/soc/marvell/csr-access/Makefile
deleted file mode 100644
index adb108f96f8c..000000000000
--- a/drivers/soc/marvell/csr-access/Makefile
+++ /dev/null
@@ -1,9 +0,0 @@
-# SPDX-License-Identifier: GPL-2.0
-#
-## Makefile for Hardware device CSR Access driver
-#
-
-ccflags-y += -I$(src)
-obj-$(CONFIG_HW_CSR_ACCESS) := csr_access.o
-
-csr_access-y := hw_csr_access.o
diff --git a/drivers/soc/marvell/hw-access/Makefile b/drivers/soc/marvell/hw-access/Makefile
new file mode 100644
index 000000000000..865e3ec2f0d1
--- /dev/null
+++ b/drivers/soc/marvell/hw-access/Makefile
@@ -0,0 +1,9 @@
+# SPDX-License-Identifier: GPL-2.0
+#
+## Makefile for Hardware device access driver
+#
+
+ccflags-y += -I$(src)
+obj-$(CONFIG_HW_CSR_ACCESS) := hw_access.o
+
+hw_access-y := hw_rw_access.o
diff --git a/drivers/soc/marvell/csr-access/hw_csr_access.c b/drivers/soc/marvell/hw-access/hw_rw_access.c
similarity index 88%
rename from drivers/soc/marvell/csr-access/hw_csr_access.c
rename to drivers/soc/marvell/hw-access/hw_rw_access.c
index a24a2361a114..8a4d4d009e01 100644
--- a/drivers/soc/marvell/csr-access/hw_csr_access.c
+++ b/drivers/soc/marvell/hw-access/hw_rw_access.c
@@ -17,8 +17,8 @@
 #include <linux/module.h>
 #include <linux/uaccess.h>
 
-#define DEVICE_NAME			"csr_access"
-#define CLASS_NAME			"csr_access_class"
+#define DEVICE_NAME			"hw_access"
+#define CLASS_NAME			"hw_access_class"
 /* Smallest start physical address of all HW devices */
 #define REG_PHYS_BASEADDR		0x802000000000
 /* Last physical address - First phsycial address + 1 will be the
@@ -40,7 +40,7 @@ struct hw_reg_cfg {
 static struct class *hw_reg_class;
 static int majorNumber;
 
-static int csr_access_open(struct inode *inode, struct file *filp)
+static int hw_access_open(struct inode *inode, struct file *filp)
 {
 	void __iomem *reg_base = NULL;
 	int err;
@@ -57,7 +57,7 @@ static int csr_access_open(struct inode *inode, struct file *filp)
 	return 0;
 }
 
-static long csr_access_ioctl(struct file *filp, unsigned int cmd,
+static long hw_access_ioctl(struct file *filp, unsigned int cmd,
 			   unsigned long arg)
 {
 	void __iomem *regbase = filp->private_data;
@@ -128,7 +128,7 @@ static long csr_access_ioctl(struct file *filp, unsigned int cmd,
 	}
 }
 
-static int csr_access_release(struct inode *inode, struct file *filp)
+static int hw_access_release(struct inode *inode, struct file *filp)
 {
 	iounmap(filp->private_data);
 	filp->private_data = NULL;
@@ -137,12 +137,12 @@ static int csr_access_release(struct inode *inode, struct file *filp)
 }
 
 static const struct file_operations mmap_fops = {
-	.open = csr_access_open,
-	.unlocked_ioctl = csr_access_ioctl,
-	.release = csr_access_release,
+	.open = hw_access_open,
+	.unlocked_ioctl = hw_access_ioctl,
+	.release = hw_access_release,
 };
 
-static int __init csr_access_module_init(void)
+static int __init hw_access_module_init(void)
 {
 	static struct device *hw_reg_device;
 
@@ -171,14 +171,14 @@ static int __init csr_access_module_init(void)
 	return 0;
 }
 
-static void __exit csr_access_module_exit(void)
+static void __exit hw_access_module_exit(void)
 {
 	device_destroy(hw_reg_class, MKDEV(majorNumber, 0));
 	class_destroy(hw_reg_class);
 	unregister_chrdev(majorNumber, DEVICE_NAME);
 }
 
-module_init(csr_access_module_init);
-module_exit(csr_access_module_exit);
+module_init(hw_access_module_init);
+module_exit(hw_access_module_exit);
 MODULE_AUTHOR("Marvell International Ltd.");
 MODULE_LICENSE("GPL v2");
-- 
2.31.1

