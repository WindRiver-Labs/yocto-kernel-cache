From 15ba63333b925aabbada5443be24a90bbdf1d844 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Wed, 2 May 2018 18:08:44 +0530
Subject: [PATCH 0347/1851] v4l: xilinx: dma: Terminate DMA when media pipeline
 fails to start

commit 898d330d96e4aaeec22724c112c3b94c7283c36c from
https://github.com/Xilinx/linux-xlnx.git

If an incorrectly configured media pipeline is started, the allocated
dma descriptors aren't freed. This leads to kernel oops when pipeline
is configured correctly and run subsequently. This patch fixes this
issue by freeing the descriptors on media pipeline start failure.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Tested-by: Anil Kumar Mamidala <amamidal@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: waiting (media)
Link: https://www.spinics.net/lists/linux-media/msg133380.html
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index b549e4ac8ed5..5db61a5957df 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -610,10 +610,10 @@ static int xvip_dma_start_streaming(struct vb2_queue *vq, unsigned int count)
 	return 0;
 
 error_stop:
-	dmaengine_terminate_all(dma->dma);
 	media_pipeline_stop(&dma->video.entity);
 
 error:
+	dmaengine_terminate_all(dma->dma);
 	/* Give back all queued buffers to videobuf2. */
 	spin_lock_irq(&dma->queued_lock);
 	list_for_each_entry_safe(buf, nbuf, &dma->queued_bufs, queue) {
-- 
2.31.1

