From bd63d89d6784d4e07ddf7373d17c5b0482ff8ee0 Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Thu, 6 Aug 2020 12:07:32 -0700
Subject: [PATCH 1501/1851] misc: xilinx-ai-engine: reg access from userspace
 uses relative address

commit b93ca224c0f80bf682a9fc6cd0689e2885c64540 from
https://github.com/Xilinx/linux-xlnx.git

The address from userspace is relative address to the start of the AI
engine partition, change the handling in the kernel driver not to assume
it is absolute address.

Signed-off-by: Wendy Liang <wendy.liang@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/misc/xilinx-ai-engine/ai-engine-part.c | 4 ++++
 include/uapi/linux/xlnx-ai-engine.h            | 2 +-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/xilinx-ai-engine/ai-engine-part.c b/drivers/misc/xilinx-ai-engine/ai-engine-part.c
index 9d32e05354b6..707caefc58ba 100644
--- a/drivers/misc/xilinx-ai-engine/ai-engine-part.c
+++ b/drivers/misc/xilinx-ai-engine/ai-engine-part.c
@@ -148,6 +148,8 @@ static int aie_part_write_register(struct aie_partition *apart, size_t offset,
 		return -EINVAL;
 	}
 
+	/* offset is expected to be relative to the start of the partition */
+	offset += aie_cal_regoff(apart->adev, apart->range.start, 0);
 	ret = aie_part_reg_validation(apart, offset, len, 1);
 	if (ret < 0) {
 		dev_err(&apart->dev, "failed to write to 0x%zx,0x%zx.\n",
@@ -188,6 +190,8 @@ static int aie_part_read_register(struct aie_partition *apart, size_t offset,
 	void __iomem *va;
 	int ret;
 
+	/* offset is expected to be relative to the start of the partition */
+	offset += aie_cal_regoff(apart->adev, apart->range.start, 0);
 	ret = aie_part_reg_validation(apart, offset, len, 0);
 	if (ret) {
 		dev_err(&apart->dev, "Invalid read request 0x%zx,0x%zx.\n",
diff --git a/include/uapi/linux/xlnx-ai-engine.h b/include/uapi/linux/xlnx-ai-engine.h
index 4f0407d9338c..f59226cbe993 100644
--- a/include/uapi/linux/xlnx-ai-engine.h
+++ b/include/uapi/linux/xlnx-ai-engine.h
@@ -74,7 +74,7 @@ struct aie_mem_args {
  * struct aie_reg_args - AIE access register arguments
  * @op: if this request is to read, write or poll register
  * @mask: mask for mask write, 0 for not mask write
- * @offset: offset of register in the AIE device
+ * @offset: offset of register to the start of an AI engine partition
  * @val: value to write or get
  */
 struct aie_reg_args {
-- 
2.31.1

