From 8b15efbb8cfff6a208fafe407682de43523ffc62 Mon Sep 17 00:00:00 2001
From: Ovidiu Panait <ovidiu.panait@windriver.com>
Date: Thu, 14 Oct 2021 16:10:10 +0000
Subject: [PATCH 2/3] Revert "ice: Support XDP UMEM wake up mechanism"

This reverts commit 2c318c554a703724b1c5eb6cc4a8b4635a6ef019.

The ice ethernet driver in LTS19 was updated to the 5.12 codebase in
LINUXEXEC-10558 and adjusted to match various 5.2 APIs. It also added this
commit that relies on xsk_umem_uses_need_wakeup() API, which is not implemented
in 5.2 kernel. This currently causes the following build error when
CONFIG_XDP_SOCKETS=y:
drivers/net/ethernet/intel/ice/ice_xsk.c:941:6: error: implicit declaration of function 'xsk_umem_uses_need_wakeup' [-Werror=implicit-function-declaration]
|   941 |  if (xsk_umem_uses_need_wakeup(rx_ring->xsk_umem)) {
|       |      ^~~~~~~~~~~~~~~~~~~~~~~~~

To fix this, revert this commit, as the need_wakeup AF_XDP feature is not
implemented in 5.2.

Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 drivers/net/ethernet/intel/ice/ice_xsk.c | 18 ------------------
 1 file changed, 18 deletions(-)

diff --git a/drivers/net/ethernet/intel/ice/ice_xsk.c b/drivers/net/ethernet/intel/ice/ice_xsk.c
index 77f8cb33a5c5..72bb44f987ea 100644
--- a/drivers/net/ethernet/intel/ice/ice_xsk.c
+++ b/drivers/net/ethernet/intel/ice/ice_xsk.c
@@ -938,15 +938,6 @@ int ice_clean_rx_irq_zc(struct ice_ring *rx_ring, int budget)
 	ice_finalize_xdp_rx(rx_ring, xdp_xmit);
 	ice_update_rx_ring_stats(rx_ring, total_rx_packets, total_rx_bytes);
 
-	if (xsk_umem_uses_need_wakeup(rx_ring->xsk_umem)) {
-		if (failure || rx_ring->next_to_clean == rx_ring->next_to_use)
-			xsk_set_rx_need_wakeup(rx_ring->xsk_umem);
-		else
-			xsk_clear_rx_need_wakeup(rx_ring->xsk_umem);
-
-		return (int)total_rx_packets;
-	}
-
 	return failure ? budget : (int)total_rx_packets;
 }
 
@@ -996,8 +987,6 @@ static bool ice_xmit_zc(struct ice_ring *xdp_ring, int budget)
 	if (tx_desc) {
 		ice_xdp_ring_update_tail(xdp_ring);
 		xsk_umem_consume_tx_done(xdp_ring->xsk_umem);
-		if (xsk_umem_uses_need_wakeup(xdp_ring->xsk_umem))
-			xsk_clear_tx_need_wakeup(xdp_ring->xsk_umem);
 	}
 
 	return budget > 0 && work_done;
@@ -1073,13 +1062,6 @@ bool ice_clean_tx_irq_zc(struct ice_ring *xdp_ring, int budget)
 	if (xsk_frames)
 		xsk_umem_complete_tx(xdp_ring->xsk_umem, xsk_frames);
 
-	if (xsk_umem_uses_need_wakeup(xdp_ring->xsk_umem)) {
-		if (xdp_ring->next_to_clean == xdp_ring->next_to_use)
-			xsk_set_tx_need_wakeup(xdp_ring->xsk_umem);
-		else
-			xsk_clear_tx_need_wakeup(xdp_ring->xsk_umem);
-	}
-
 	ice_update_tx_ring_stats(xdp_ring, total_packets, total_bytes);
 	xmit_done = ice_xmit_zc(xdp_ring, ICE_DFLT_IRQ_WORK);
 
-- 
2.31.1

