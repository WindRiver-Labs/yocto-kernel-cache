From 00ffebf5656175c6a1eaa06f2bf234ec8316c17d Mon Sep 17 00:00:00 2001
From: Pavan Nikhilesh <pbhagavatula@marvell.com>
Date: Fri, 23 Apr 2021 19:28:54 +0530
Subject: [PATCH 1491/1921] octeontx2-af: cn10k: enable getwork prefetching

GETWORK prefetching to GWCs is disabled on reset, enable it during
SSO init.

Signed-off-by: Pavan Nikhilesh <pbhagavatula@marvell.com>
Change-Id: I800eeb128834fc84a07e694a510cf86394317be5
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/50536
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu.h       |  1 +
 drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c | 10 ++++++++++
 drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h   |  1 +
 drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c   |  3 +++
 4 files changed, 15 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
index 0d52baaa67ea..a0c90c53c7dc 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
@@ -768,6 +768,7 @@ void rvu_sso_unregister_interrupts(struct rvu *rvu);
 int rvu_sso_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot_id);
 int rvu_ssow_lf_teardown(struct rvu *rvu, u16 pcifunc, int lf, int slot_id);
 void rvu_sso_hwgrp_config_thresh(struct rvu *rvu, int blkaddr, int lf);
+void rvu_sso_block_cn10k_init(struct rvu *rvu, int blkaddr);
 
 /* NPA APIs */
 int rvu_npa_init(struct rvu *rvu);
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c
index e6cf044f6bd5..05d70a669484 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cn10k.c
@@ -471,6 +471,16 @@ void rvu_reset_lmt_map_tbl(struct rvu *rvu, u16 pcifunc)
 	}
 }
 
+void rvu_sso_block_cn10k_init(struct rvu *rvu, int blkaddr)
+{
+	u64 reg;
+
+	reg = rvu_read64(rvu, blkaddr, SSO_AF_WS_CFG);
+	/* Enable GET_WORK prefetching to the GWCs. */
+	reg &= ~BIT_ULL(4);
+	rvu_write64(rvu, blkaddr, SSO_AF_WS_CFG, reg);
+}
+
 void rvu_nix_block_cn10k_init(struct rvu *rvu, struct nix_hw *nix_hw)
 {
 	int blkaddr = nix_hw->blkaddr;
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
index 6adea7fa84a6..2652bf80d73b 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_reg.h
@@ -442,6 +442,7 @@
 #define SSO_AF_CONST1			(0x1008)
 #define SSO_AF_NOS_CNT			(0x1050)
 #define SSO_AF_AW_WE			(0x1080)
+#define SSO_AF_WS_CFG			(0x1088)
 #define SSO_AF_LF_HWGRP_RST		(0x10e0)
 #define SSO_AF_AW_CFG			(0x10f0)
 #define SSO_AF_BLK_RST			(0x10f8)
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
index 9fdf53eac3af..0455946fd4fa 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sso.c
@@ -1375,6 +1375,9 @@ int rvu_sso_init(struct rvu *rvu)
 	if (blkaddr < 0)
 		return 0;
 
+	if (!is_rvu_otx2(rvu))
+		rvu_sso_block_cn10k_init(rvu, blkaddr);
+
 	reg = rvu_read64(rvu, blkaddr, SSO_AF_CONST);
 	/* number of SSO hardware work slots */
 	sso->sso_hws = (reg >> 56) & 0xFF;
-- 
2.31.1

