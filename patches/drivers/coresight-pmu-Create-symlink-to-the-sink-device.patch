From 0996106eed3d5105c22790a636f298b5043a4dad Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmay@marvell.com>
Date: Thu, 8 Oct 2020 14:28:38 +0530
Subject: [PATCH 1887/1921] coresight: pmu: Create symlink to the sink device

Create a symlink to the actual sink device from the
ETM pmu device. This is would help the perf tool to
determine features provided by the sink.

Example:
While decoding the trace using perf tool, we need to
know if the sink supports formatted trace. To get this
information, we need to read the FFSR register of the
"enabled sink" which is exposed by sysfs.

Similarly based on the use case we can determine more
properties of the sink if its exposed to ETM_PMU perf
device.

Change-Id: I05a4eba4f7a234cc9c4fde45059dea38dd881266
Signed-off-by: Tanmay Jagdale <tanmay@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/hwtracing/coresight/coresight-etm-perf.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/hwtracing/coresight/coresight-etm-perf.c b/drivers/hwtracing/coresight/coresight-etm-perf.c
index 6f398377fec9..51c7f9f4eea6 100644
--- a/drivers/hwtracing/coresight/coresight-etm-perf.c
+++ b/drivers/hwtracing/coresight/coresight-etm-perf.c
@@ -666,6 +666,7 @@ int etm_perf_add_symlink_sink(struct coresight_device *csdev)
 	struct device *pmu_dev = etm_pmu.dev;
 	struct device *dev = &csdev->dev;
 	struct dev_ext_attribute *ea;
+	char sink_name[sizeof("sink_tmc_etxxxxx")];
 
 	if (csdev->type != CORESIGHT_DEV_TYPE_SINK &&
 	    csdev->type != CORESIGHT_DEV_TYPE_LINKSINK)
@@ -700,6 +701,10 @@ int etm_perf_add_symlink_sink(struct coresight_device *csdev)
 	if (!ret)
 		csdev->ea = ea;
 
+	/* Create a symlink to the actual sink device */
+	sprintf(sink_name, "sink_%s", name);
+	ret = sysfs_create_link(&pmu_dev->kobj, &dev->kobj, sink_name);
+
 	return ret;
 }
 
@@ -707,6 +712,8 @@ void etm_perf_del_symlink_sink(struct coresight_device *csdev)
 {
 	struct device *pmu_dev = etm_pmu.dev;
 	struct dev_ext_attribute *ea = csdev->ea;
+	const char *name;
+	char sink_name[sizeof("sink_tmc_etxxxxx")];
 
 	if (csdev->type != CORESIGHT_DEV_TYPE_SINK &&
 	    csdev->type != CORESIGHT_DEV_TYPE_LINKSINK)
@@ -715,6 +722,9 @@ void etm_perf_del_symlink_sink(struct coresight_device *csdev)
 	if (!ea)
 		return;
 
+	name = dev_name(&csdev->dev);
+	sprintf(sink_name, "sink_%s", name);
+	sysfs_remove_link(&pmu_dev->kobj, sink_name);
 	sysfs_remove_file_from_group(&pmu_dev->kobj,
 				     &ea->attr.attr, "sinks");
 	csdev->ea = NULL;
-- 
2.31.1

