From e9916a8ca89d148bb865d2dd276dffeebba8b341 Mon Sep 17 00:00:00 2001
From: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
Date: Mon, 13 Jan 2020 15:26:31 +0530
Subject: [PATCH 0835/1852] PCI: XDMA PL PCIe: Fix Multi MSI data programming

commit eddc424bbb4e32410c8825a038542eaaab1a3015 from
https://github.com/Xilinx/linux-xlnx.git

Devices requesting multiple MSI, message data being programmed
is modified by device.
Avoid modified message data falling into another device data
range.

Signed-off-by: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: not-upstreamable
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/pci/controller/pcie-xdma-pl.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/controller/pcie-xdma-pl.c b/drivers/pci/controller/pcie-xdma-pl.c
index 1c99efdb187f..d523f7c08508 100644
--- a/drivers/pci/controller/pcie-xdma-pl.c
+++ b/drivers/pci/controller/pcie-xdma-pl.c
@@ -411,7 +411,7 @@ static int xilinx_irq_domain_alloc(struct irq_domain *domain, unsigned int virq,
 {
 	struct xilinx_pcie_port *pcie = domain->host_data;
 	struct xilinx_msi *msi = &pcie->msi;
-	int bit;
+	int bit, tst_bit;
 	int i;
 
 	mutex_lock(&msi->lock);
@@ -421,6 +421,15 @@ static int xilinx_irq_domain_alloc(struct irq_domain *domain, unsigned int virq,
 		mutex_unlock(&msi->lock);
 		return -ENOSPC;
 	}
+
+	if ((bit % nr_irqs) == 0) {
+		bit = bit;
+	} else if (nr_irqs > 1) {
+		tst_bit = bit & ((1 << ilog2(nr_irqs)) - 1);
+		bit = bit - tst_bit;
+		bit = bit + nr_irqs;
+	}
+
 	bitmap_set(msi->bitmap, bit, nr_irqs);
 
 	for (i = 0; i < nr_irqs; i++) {
-- 
2.31.1

