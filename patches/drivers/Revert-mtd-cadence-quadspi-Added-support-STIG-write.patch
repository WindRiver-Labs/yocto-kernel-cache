From e92016110bc6a5369faaa30138f791bdb872d76c Mon Sep 17 00:00:00 2001
From: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
Date: Fri, 14 Feb 2020 16:47:29 +0530
Subject: [PATCH 1211/1852] Revert "mtd: cadence-quadspi: Added support STIG
 write"

commit 6fa59228255c19374c90f3340636fe3c3e836ce9 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit 0839b1f9241c113ae211ae4a634379f3a91f1a59.

Signed-off-by: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
State: not-upstreamable
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/spi-nor/cadence-quadspi.c | 74 +--------------------------
 drivers/mtd/spi-nor/spi-nor.c         |  3 +-
 include/linux/mtd/spi-nor.h           |  2 -
 3 files changed, 3 insertions(+), 76 deletions(-)

diff --git a/drivers/mtd/spi-nor/cadence-quadspi.c b/drivers/mtd/spi-nor/cadence-quadspi.c
index 3dfff21c2cbd..727bd14aac23 100644
--- a/drivers/mtd/spi-nor/cadence-quadspi.c
+++ b/drivers/mtd/spi-nor/cadence-quadspi.c
@@ -37,8 +37,7 @@
 /* Quirks */
 #define CQSPI_NEEDS_WR_DELAY		BIT(0)
 #define CQSPI_HAS_DMA			BIT(1)
-#define CQSPI_STIG_WRITE		BIT(2)
-#define CQSPI_SUPPORT_RESET		BIT(3)
+#define CQSPI_SUPPORT_RESET		BIT(2)
 
 /* Capabilities mask */
 #define CQSPI_BASE_HWCAPS_MASK					\
@@ -101,7 +100,6 @@ struct cqspi_st {
 	dma_addr_t		dma_addr;
 	u8			edge_mode;
 	bool			extra_dummy;
-	bool			stig_write;
 	u8			access_mode;
 	int (*indirect_read_dma)(struct spi_nor *nor, u_char *rxbuf,
 				 loff_t from_addr, size_t n_rx);
@@ -790,71 +788,6 @@ static int cqspi_write_setup(struct spi_nor *nor, const u8 opcode)
 	return 0;
 }
 
-static int cqspi_stig_write(struct spi_nor *nor, loff_t addr,
-			    const u8 *txbuf, unsigned int n_tx)
-{
-	struct cqspi_flash_pdata *f_pdata = nor->priv;
-	struct cqspi_st *cqspi = f_pdata->cqspi;
-	void __iomem *reg_base = cqspi->iobase;
-	unsigned int reg;
-	unsigned int data;
-	int ret;
-	unsigned int pgmlen = 0, wr_len;
-
-	if (n_tx && !txbuf) {
-		dev_err(nor->dev,
-			"Invalid input argument, cmdlen %d txbuf 0x%p\n",
-			n_tx, txbuf);
-		return -EINVAL;
-	}
-	pgmlen = n_tx;
-	if (n_tx > 8)
-		n_tx = 8;
-
-	while (pgmlen) {
-		ret = nor->write_reg(nor, SPINOR_OP_WREN, NULL, 0);
-		if (ret)
-			return ret;
-
-		reg = nor->program_opcode << CQSPI_REG_CMDCTRL_OPCODE_LSB;
-		reg |= (0x1 << CQSPI_REG_CMDCTRL_WR_EN_LSB);
-		reg |= ((n_tx - 1) & CQSPI_REG_CMDCTRL_WR_BYTES_MASK) <<
-			CQSPI_REG_CMDCTRL_WR_BYTES_LSB;
-		reg |= (0x1 << CQSPI_REG_CMDCTRL_ADDR_EN_LSB);
-		reg |= ((nor->addr_width - 1) &
-			CQSPI_REG_CMDCTRL_ADD_BYTES_MASK) <<
-			CQSPI_REG_CMDCTRL_ADD_BYTES_LSB;
-		writel(addr, reg_base + CQSPI_REG_CMDADDRESS);
-
-		wr_len = n_tx > 4 ? 4 : n_tx;
-		data = 0;
-		memcpy(&data, txbuf, wr_len);
-		writel(data, reg_base + CQSPI_REG_CMDWRITEDATALOWER);
-		if (n_tx > 4) {
-			txbuf += wr_len;
-			wr_len = n_tx - wr_len;
-			data = 0;
-			memcpy(&data, txbuf, wr_len);
-			writel(data, reg_base + CQSPI_REG_CMDWRITEDATAUPPER);
-		}
-
-		txbuf += wr_len;
-		pgmlen -= n_tx;
-		addr += n_tx;
-		n_tx = pgmlen > 8 ? 8 : pgmlen;
-		ret = cqspi_exec_flash_cmd(cqspi, reg);
-		if (ret)
-			return ret;
-
-		if (nor->program_opcode != SPINOR_OP_WRCR) {
-			ret = spi_nor_wait_till_ready(nor);
-			if (ret)
-				return ret;
-		}
-	}
-	return 0;
-}
-
 static int cqspi_indirect_write_execute(struct spi_nor *nor, loff_t to_addr,
 					const u8 *txbuf, const size_t n_tx)
 {
@@ -1230,8 +1163,6 @@ static ssize_t cqspi_write(struct spi_nor *nor, loff_t to,
 	if (f_pdata->use_direct_mode) {
 		memcpy_toio(cqspi->ahb_base + to, buf, len);
 		ret = cqspi_wait_idle(cqspi);
-	} else if (cqspi->stig_write) {
-		ret = cqspi_stig_write(nor, to, buf, len);
 	} else {
 		ret = cqspi_indirect_write_execute(nor, to, buf, len);
 	}
@@ -2027,7 +1958,6 @@ static int cqspi_probe(struct platform_device *pdev)
 		cqspi->read_dma = true;
 	}
 
-	cqspi->stig_write = false;
 	if (of_device_is_compatible(pdev->dev.of_node,
 				    "xlnx,versal-ospi-1.0")) {
 		cqspi->eemi_ops = zynqmp_pm_get_eemi_ops();
@@ -2138,7 +2068,7 @@ static const struct cqspi_driver_platdata versal_ospi = {
 	.hwcaps_mask = (SNOR_HWCAPS_READ | SNOR_HWCAPS_READ_FAST |
 			SNOR_HWCAPS_PP | SNOR_HWCAPS_PP_8_8_8 |
 			SNOR_HWCAPS_READ_1_1_8 | SNOR_HWCAPS_READ_8_8_8),
-	.quirks = CQSPI_HAS_DMA | CQSPI_STIG_WRITE | CQSPI_SUPPORT_RESET,
+	.quirks = CQSPI_HAS_DMA | CQSPI_SUPPORT_RESET,
 };
 
 static const struct of_device_id cqspi_dt_ids[] = {
diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 6600c87135ca..f911b2ff84ba 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -940,12 +940,11 @@ static int spi_nor_wait_till_ready_with_timeout(struct spi_nor *nor,
 	return -ETIMEDOUT;
 }
 
-int spi_nor_wait_till_ready(struct spi_nor *nor)
+static int spi_nor_wait_till_ready(struct spi_nor *nor)
 {
 	return spi_nor_wait_till_ready_with_timeout(nor,
 						    DEFAULT_READY_WAIT_JIFFIES);
 }
-EXPORT_SYMBOL_GPL(spi_nor_wait_till_ready);
 
 /*
  * Erase the whole flash memory
diff --git a/include/linux/mtd/spi-nor.h b/include/linux/mtd/spi-nor.h
index 2141fb185c23..a7dea18c8214 100644
--- a/include/linux/mtd/spi-nor.h
+++ b/include/linux/mtd/spi-nor.h
@@ -706,6 +706,4 @@ int spi_nor_scan(struct spi_nor *nor, const char *name,
  */
 void spi_nor_restore(struct spi_nor *nor);
 
-int spi_nor_wait_till_ready(struct spi_nor *nor);
-
 #endif
-- 
2.31.1

