From 09501296e170250cd796e0afce5799f634adbac4 Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Mon, 31 Aug 2020 02:27:41 -0600
Subject: [PATCH 1540/1851] spi: spi-zynq-qspi: Check return value of
 clk_enable api

commit c9a2a5bd60980012ff98e3a27450de0c52e0a436 from
https://github.com/Xilinx/linux-xlnx.git

In two different instances the return value of "clk_enable" API was
neither captured nor checked. Fixed it by capturing the return value
and then checking for any error.

Addresses-Coverity: "check_return"
Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/spi/spi-zynq-qspi.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/spi/spi-zynq-qspi.c b/drivers/spi/spi-zynq-qspi.c
index 9d70cd2862f6..51e4c5c7e2cd 100644
--- a/drivers/spi/spi-zynq-qspi.c
+++ b/drivers/spi/spi-zynq-qspi.c
@@ -303,14 +303,25 @@ static void zynq_qspi_txfifo_op(struct zynq_qspi *xqspi, unsigned int size)
  *
  * This function enables SPI master controller.
  *
- * Return:	Always 0
+ * Return:	0 on success and error value on error
  */
 static int zynq_prepare_transfer_hardware(struct spi_master *master)
 {
+	struct device *dev = &master->dev;
 	struct zynq_qspi *xqspi = spi_master_get_devdata(master);
+	int ret = 0;
 
-	clk_enable(xqspi->refclk);
-	clk_enable(xqspi->pclk);
+	ret = clk_enable(xqspi->refclk);
+	if (ret) {
+		dev_err(dev, "Cannot enable device clock.\n");
+		return ret;
+	}
+	ret = clk_enable(xqspi->pclk);
+	if (ret) {
+		dev_err(dev, "Cannot enable APB clock.\n");
+		clk_disable(xqspi->refclk);
+		return ret;
+	}
 	zynq_qspi_write(xqspi, ZYNQ_QSPI_ENABLE_OFFSET,
 			ZYNQ_QSPI_ENABLE_ENABLE_MASK);
 
-- 
2.31.1

