From 92aab9894941984067c6a89386f2cd77daaca74a Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Fri, 21 Aug 2020 18:18:19 +0530
Subject: [PATCH 0694/1921] octeontx2-pf: Fix receive buffer size calculation

Not considering L2 header while calculating receive buffer
size resulting in pkt spilling over to next buffer. Since
we no longer support multi-segmented receive pkts while
processing CQE_RX these pkts are treated as errors and dropped.
This patch fixes the issue to makesure pkt fits in single segment.

Change-Id: Ic09325e614b2508d0473e7ecd4cf117a98e2f02a
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/34366
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/nic/otx2_pf.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 388254b6086c..e298f45b1d8f 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1324,14 +1324,18 @@ static int otx2_init_hw_resources(struct otx2_nic *pf)
 	hw->sqpool_cnt = hw->tot_tx_queues;
 	hw->pool_cnt = hw->rqpool_cnt + hw->sqpool_cnt;
 
+	/* Get the size of receive buffers to allocate.
+	 *
+	 * Depending interface mode ie timestamp and/or Higig2 enabled
+	 * and presence of DSA tags in L2 header, the packet size would
+	 * vary, hence consider all while calculating receive buffer size.
+	 */
+	pf->rbsize = pf->netdev->mtu + OTX2_ETH_HLEN;
+	pf->rbsize += OTX2_HW_TIMESTAMP_LEN + pf->addl_mtu + pf->xtra_hdr;
 	if (!pf->xdp_prog)
-	/* Get the size of receive buffers to allocate */
-		pf->rbsize = RCV_FRAG_LEN(OTX2_HW_TIMESTAMP_LEN +
-					  pf->netdev->mtu +
-					  pf->addl_mtu + pf->xtra_hdr);
+		pf->rbsize = RCV_FRAG_LEN(pf->rbsize);
 	else
-		pf->rbsize = RCV_FRAG_LEN(XDP_PACKET_HEADROOM +
-					  pf->netdev->mtu);
+		pf->rbsize = RCV_FRAG_LEN(XDP_PACKET_HEADROOM + pf->rbsize);
 
 	otx2_mbox_lock(mbox);
 	/* NPA init */
-- 
2.31.1

