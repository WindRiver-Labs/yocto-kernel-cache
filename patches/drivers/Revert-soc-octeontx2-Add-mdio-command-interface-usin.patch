From cbc5dba9dcbfc54f18c4227d954d2d7d1439c7a3 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Fri, 2 Aug 2019 15:23:15 +0530
Subject: [PATCH 294/767] Revert "soc: octeontx2: Add mdio command interface
 using debugfs"

commit c7b590803090c7b9e8cb745fd5f2f268eb0a2e4f from
git@git.assembla.com:cavium/WindRiver.linux.git

This reverts commit 4641fa15a5a56fede6add56057588a5c9aecca80.
Will commit after resolving build issues.

Change-Id: I66da303841552dc6fac8b9f13a4d70c7abeafe15
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/13537
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/soc/marvell/Kconfig        |  17 -----
 drivers/soc/marvell/Makefile       |   2 -
 drivers/soc/marvell/mdio_debugfs.c | 119 -----------------------------
 3 files changed, 138 deletions(-)
 delete mode 100644 drivers/soc/marvell/mdio_debugfs.c

diff --git a/drivers/soc/marvell/Kconfig b/drivers/soc/marvell/Kconfig
index 699ef923aa12..d96cbc842071 100644
--- a/drivers/soc/marvell/Kconfig
+++ b/drivers/soc/marvell/Kconfig
@@ -75,21 +75,4 @@ config OCTEONTX2_DPI_PF
 	  DPI (DMA packet interface) provides DMA support for MAC.
 	  This driver intializes dpi PF device and enables VF's for supporting
 	  different types of DMA transfers.
-
-config GTI_WATCHDOG
-       tristate "GTI Watchdog driver"
-	depends on ARM64 && ARM64_VHE
-	---help---
-	GTI Watchdog driver, provides ioctl's for applications to
-	setup and disable the NMI Watchdog and also provides an
-	mmap() interface to map GTI device memory into process
-	address space for the application to directly poke the
-	GTI watchdog without any kernel support and entry.
-
-config MDIO_DEBUGFS
-       tristate "Stub driver for debugfs support for mdio commands "
-	depends on OCTEONTX2_AF
-	help
-	provides debugfs support to initiate mdio commands via smc call
-	to the atf.
 endmenu
diff --git a/drivers/soc/marvell/Makefile b/drivers/soc/marvell/Makefile
index 2c3e2e1f6cce..1d90ab9270ba 100644
--- a/drivers/soc/marvell/Makefile
+++ b/drivers/soc/marvell/Makefile
@@ -1,5 +1,3 @@
 # SPDX-License-Identifier: GPL-2.0
 obj-y		+= octeontx2-rm/
 obj-y		+= octeontx2-dpi/
-obj-y		+= gti/
-obj-$(CONFIG_MDIO_DEBUGFS) += mdio_debugfs.o
diff --git a/drivers/soc/marvell/mdio_debugfs.c b/drivers/soc/marvell/mdio_debugfs.c
deleted file mode 100644
index 652108960499..000000000000
--- a/drivers/soc/marvell/mdio_debugfs.c
+++ /dev/null
@@ -1,119 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0
-/*
- * Copyright (C) 2018 Marvell International Ltd.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-
-#ifdef CONFIG_DEBUG_FS
-
-#include <linux/fs.h>
-#include <linux/debugfs.h>
-#include <linux/module.h>
-#include <linux/pci.h>
-#include <linux/string.h>
-#include <linux/uaccess.h>
-#include <linux/arm-smccc.h>
-
-#define OCTEONTX_MDIO_DBG_READ            0xc2000d01
-#define OCTEONTX_MDIO_DBG_WRITE           0xc2000d02
-
-struct dentry *pfile;
-static int parse_cmd_buffer_ctx(char *cmd_buf, size_t *count,
-				const char __user *buffer,
-				int *a, bool *write)
-{
-	int bytes_not_copied;
-	char *subtoken;
-	int ret, i;
-
-	bytes_not_copied = copy_from_user(cmd_buf, buffer, *count);
-	if (bytes_not_copied)
-		return -EFAULT;
-
-	cmd_buf[*count] = '\0';
-	for (i = 0; i < 5; i++) {
-		subtoken = strsep(&cmd_buf, " ");
-		ret = subtoken ? kstrtoint(subtoken, 10, &a[i]) : -EINVAL;
-		if (ret < 0)
-			return ret;
-	}
-	if (cmd_buf) {
-		subtoken = strsep(&cmd_buf, " ");
-		ret = subtoken ? kstrtoint(subtoken, 10, &a[i]) : -EINVAL;
-		if (ret < 0)
-			return ret;
-		*write = true;
-	}
-	if (cmd_buf)
-		return -EINVAL;
-	return ret;
-}
-
-static ssize_t dbg_mdio_write(struct file *filp,
-			      const char __user *buffer,
-			      size_t count, loff_t *ppos)
-{
-	struct arm_smccc_res res;
-	bool write = false;
-	char *cmd_buf;
-	int ret, a[6];
-
-	if ((*ppos != 0) || !count)
-		return -EINVAL;
-
-	cmd_buf = kzalloc(count + 1, GFP_KERNEL);
-	if (!cmd_buf)
-		return count;
-
-	ret = parse_cmd_buffer_ctx(cmd_buf, &count, buffer, a, &write);
-	if (ret < 0) {
-		pr_info("Usage: echo  <cgxlmac> <mode> <addr> <devad> <reg> [value] > mdio_cmd\n");
-		goto done;
-	} else {
-		if (write)
-			arm_smccc_smc(OCTEONTX_MDIO_DBG_WRITE, a[0], a[1], a[2],
-				      a[3], a[4], a[5], 0, &res);
-		else
-			arm_smccc_smc(OCTEONTX_MDIO_DBG_READ, a[0], a[1], a[2],
-				      a[3], a[4], 0, 0, &res);
-		pr_info("MDIO COMMAND RESULT\n");
-		pr_info("===================\n");
-		pr_info("res[0]:\t%ld\n", res.a0);
-		pr_info("res[1]:\t%ld\n", res.a1);
-		pr_info("res[2]:\t%ld\n", res.a2);
-		pr_info("res[3]:\t%ld\n", res.a3);
-	}
-done:
-	kfree(cmd_buf);
-	return ret ? ret : count;
-}
-
-static const struct file_operations dbg_mdio_fops = {
-	.owner = THIS_MODULE,
-	.open = simple_open,
-	.write = dbg_mdio_write,
-};
-
-static int dbg_mdio_init(void)
-{
-	pfile = debugfs_create_file("mdio_cmd", 0644, NULL, NULL,
-				    &dbg_mdio_fops);
-	if (!pfile)
-		goto create_failed;
-	return 0;
-create_failed:
-	pr_err("Failed to create debugfs dir/file for mdio_cmd\n");
-	debugfs_remove_recursive(pfile);
-	return 0;
-}
-
-static void dbg_mdio_exit(void)
-{
-	debugfs_remove_recursive(pfile);
-}
-module_init(dbg_mdio_init);
-module_exit(dbg_mdio_exit);
-#endif /* CONFIG_DEBUG_FS */
-- 
2.31.1

