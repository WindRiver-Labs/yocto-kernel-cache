From cf28673d98070d8afbe72bc4d33582e8db816caf Mon Sep 17 00:00:00 2001
From: Saurabh Sengar <saurabh.singh@xilinx.com>
Date: Mon, 11 Jun 2018 17:50:23 +0530
Subject: [PATCH 0368/1852] drm: xlnx: vtc: exporting interrupt APIs

commit 62a8051b104151da9e676ba986e9a32829a9b8a1 from
https://github.com/Xilinx/linux-xlnx.git

Exporting interrupt APIs outside of vtc driver.
Also adding new vblank specific enable/disable APIs

Signed-off-by: Saurabh Sengar <saurabh.singh@xilinx.com>
Acked-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_vtc.c | 22 ++++++++++++++++++++--
 drivers/gpu/drm/xlnx/xlnx_vtc.h |  4 ++++
 2 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_vtc.c b/drivers/gpu/drm/xlnx/xlnx_vtc.c
index 72866468d671..f189b783327e 100644
--- a/drivers/gpu/drm/xlnx/xlnx_vtc.c
+++ b/drivers/gpu/drm/xlnx/xlnx_vtc.c
@@ -513,6 +513,14 @@ void xlnx_vtc_reset(struct xilinx_vtc *vtc)
 	xilinx_drm_writel(vtc->base, VTC_CTL, reg | VTC_CTL_RU);
 }
 
+/* enable vblank interrupt */
+void xlnx_vtc_vblank_enable(struct xilinx_vtc *vtc)
+{
+	xilinx_drm_writel(vtc->base, VTC_IER, VTC_IXR_G_VBLANK |
+			  xilinx_drm_readl(vtc->base, VTC_IER));
+}
+EXPORT_SYMBOL_GPL(xlnx_vtc_vblank_enable);
+
 /* enable interrupt */
 static inline void xilinx_vtc_intr_enable(struct xilinx_vtc *vtc, u32 intr)
 {
@@ -527,18 +535,28 @@ static inline void xilinx_vtc_intr_disable(struct xilinx_vtc *vtc, u32 intr)
 			  xilinx_drm_readl(vtc->base, VTC_IER));
 }
 
+/* disable vblank interrupt */
+void xlnx_vtc_vblank_disable(struct xilinx_vtc *vtc)
+{
+	xilinx_drm_writel(vtc->base, VTC_IER, ~(VTC_IXR_G_VBLANK) &
+			  xilinx_drm_readl(vtc->base, VTC_IER));
+}
+EXPORT_SYMBOL_GPL(xlnx_vtc_vblank_disable);
+
 /* get interrupt */
-static inline u32 xlnx_vtc_intr_get(struct xilinx_vtc *vtc)
+u32 xlnx_vtc_intr_get(struct xilinx_vtc *vtc)
 {
 	return xilinx_drm_readl(vtc->base, VTC_IER) &
 	       xilinx_drm_readl(vtc->base, VTC_ISR) & VTC_IXR_ALLINTR_MASK;
 }
+EXPORT_SYMBOL_GPL(xlnx_vtc_intr_get);
 
 /* clear interrupt */
-static inline void xlnx_vtc_intr_clear(struct xilinx_vtc *vtc, u32 intr)
+void xlnx_vtc_intr_clear(struct xilinx_vtc *vtc, u32 intr)
 {
 	xilinx_drm_writel(vtc->base, VTC_ISR, intr & VTC_IXR_ALLINTR_MASK);
 }
+EXPORT_SYMBOL_GPL(xlnx_vtc_intr_clear);
 
 /* interrupt handler */
 static irqreturn_t xilinx_vtc_intr_handler(int irq, void *data)
diff --git a/drivers/gpu/drm/xlnx/xlnx_vtc.h b/drivers/gpu/drm/xlnx/xlnx_vtc.h
index 533abbf932c9..6737a47cf9b3 100644
--- a/drivers/gpu/drm/xlnx/xlnx_vtc.h
+++ b/drivers/gpu/drm/xlnx/xlnx_vtc.h
@@ -36,5 +36,9 @@ struct device_node;
 
 struct xilinx_vtc *xlnx_vtc_probe(struct device *dev,
 				    struct device_node *node);
+void xlnx_vtc_vblank_enable(struct xilinx_vtc *vtc);
+void xlnx_vtc_vblank_disable(struct xilinx_vtc *vtc);
+u32 xlnx_vtc_intr_get(struct xilinx_vtc *vtc);
+void xilinx_vtc_intr_clear(struct xilinx_vtc *vtc, u32 intr);
 
 #endif /* _XILINX_VTC_H_ */
-- 
2.31.1

