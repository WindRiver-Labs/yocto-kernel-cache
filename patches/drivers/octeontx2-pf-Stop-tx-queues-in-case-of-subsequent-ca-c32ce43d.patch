From 90cfed21e4e78a409a09e9f023ccc5e346a268bd Mon Sep 17 00:00:00 2001
From: Hariprasad Kelam <hkelam@marvell.com>
Date: Fri, 15 May 2020 18:52:41 +0530
Subject: [PATCH 0503/1921] octeontx2-pf: Stop tx queues in case of subsequent
 calls failure

Currently in otx2_open in  failure of mcam allocation or
nix_lf_start we are not stopping tx queues which are already
started in link_event. Hence stop tx queues

Change-Id: I8893d46558e7902fa3c1d8961a83172c6ecc48fe
Signed-off-by: Hariprasad Kelam <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/28646
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index a44e92c8de82..0afaa450e98c 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1655,7 +1655,7 @@ int otx2_open(struct net_device *netdev)
 		if (!(pf->flags & OTX2_FLAG_MCAM_ENTRIES_ALLOC)) {
 			err = otx2_alloc_mcam_entries(pf);
 			if (err)
-				goto err_free_cints;
+				goto err_tx_stop_queues;
 		}
 	}
 
@@ -1680,10 +1680,13 @@ int otx2_open(struct net_device *netdev)
 
 	err = otx2_rxtx_enable(pf, true);
 	if (err)
-		goto err_free_cints;
+		goto err_tx_stop_queues;
 
 	return 0;
 
+err_tx_stop_queues:
+	netif_tx_stop_all_queues(netdev);
+	netif_carrier_off(netdev);
 err_free_cints:
 	otx2_free_cints(pf, qidx);
 	vec = pci_irq_vector(pf->pdev,
-- 
2.31.1

