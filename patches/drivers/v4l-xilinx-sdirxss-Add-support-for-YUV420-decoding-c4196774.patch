From 7cc2f8da8582ad129c281c7d679f2b17d05118b2 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Tue, 6 Mar 2018 10:23:22 +0530
Subject: [PATCH 0317/1851] v4l: xilinx: sdirxss: Add support for YUV420
 decoding

commit 2d7e2cd38282361d9ff091cedd048a50d7b98faa from
https://github.com/Xilinx/linux-xlnx.git

Add support for YUV420 10bpc decoding from the ST352 payload.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../media/platform/xilinx/xilinx-sdirxss.c    | 26 +++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-sdirxss.c b/drivers/media/platform/xilinx/xilinx-sdirxss.c
index 41c4a2360e1f..2d66c1e05345 100644
--- a/drivers/media/platform/xilinx/xilinx-sdirxss.c
+++ b/drivers/media/platform/xilinx/xilinx-sdirxss.c
@@ -242,6 +242,11 @@
 #define XST352_BYTE3_ACT_LUMA_COUNT_MASK	BIT(22)
 #define XST352_BYTE3_ACT_LUMA_COUNT_OFFSET	22
 
+#define XST352_BYTE3_COLOR_FORMAT_MASK		GENMASK(19, 16)
+#define XST352_BYTE3_COLOR_FORMAT_OFFSET	16
+#define XST352_BYTE3_COLOR_FORMAT_422		0x0
+#define XST352_BYTE3_COLOR_FORMAT_420		0x3
+
 /**
  * enum sdi_family_enc - SDI Transport Video Format Detected with Active Pixels
  * @XSDIRX_SMPTE_ST_274: SMPTE ST 274 detected with AP 1920x1080
@@ -590,6 +595,7 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 	struct xsdirxss_core *core = &state->core;
 	u32 mode, payload = 0, val, family, valid, tscan;
 	u8 byte1 = 0, active_luma = 0, pic_type = 0, framerate = 0;
+	u8 sampling = XST352_BYTE3_COLOR_FORMAT_422;
 	struct v4l2_mbus_framefmt *format = &state->formats[0];
 
 	mode = xsdirxss_read(core, XSDIRX_MODE_DET_STAT_REG);
@@ -615,6 +621,8 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 				XST352_BYTE2_FPS_MASK;
 		tscan = (payload & XST352_BYTE2_TS_TYPE_MASK) >>
 				XST352_BYTE2_TS_TYPE_OFFSET;
+		sampling = (payload & XST352_BYTE3_COLOR_FORMAT_MASK) >>
+			   XST352_BYTE3_COLOR_FORMAT_OFFSET;
 	} else {
 		dev_dbg(core->dev, "No ST352 payload available : Mode = %d\n",
 			mode);
@@ -799,6 +807,18 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 			format->field = V4L2_FIELD_INTERLACED;
 	}
 
+	switch (sampling) {
+	case XST352_BYTE3_COLOR_FORMAT_420:
+		format->code = MEDIA_BUS_FMT_VYYUYY8_1X24;
+		break;
+	case XST352_BYTE3_COLOR_FORMAT_422:
+		format->code = MEDIA_BUS_FMT_UYVY8_1X16;
+		break;
+	default:
+		dev_err(core->dev, "Unsupported color format : %d\n", sampling);
+		return -EINVAL;
+	}
+
 	xsdirxss_get_framerate(&state->frame_interval, framerate);
 
 	dev_dbg(core->dev, "Stream width = %d height = %d Field = %d payload = 0x%08x ts = 0x%08x\n",
@@ -806,6 +826,7 @@ static int xsdirx_get_stream_properties(struct xsdirxss_state *state)
 	dev_dbg(core->dev, "frame rate numerator = %d denominator = %d\n",
 		state->frame_interval.numerator,
 		state->frame_interval.denominator);
+	dev_dbg(core->dev, "Stream code = 0x%x\n", format->code);
 	return 0;
 }
 
@@ -1560,8 +1581,9 @@ static int xsdirxss_parse_of(struct xsdirxss_state *xsdirxss)
 		dev_dbg(core->dev, "vf_code = %d bpc = %d bpp = %d\n",
 			format->vf_code, format->width, format->bpp);
 
-		if (format->vf_code != XVIP_VF_YUV_422) {
-			dev_err(core->dev, "Incorrect UG934 video format set. Accepts only YUV422\n");
+		if (format->vf_code != XVIP_VF_YUV_422 &&
+		    format->vf_code != XVIP_VF_YUV_420) {
+			dev_err(core->dev, "Incorrect UG934 video format set.\n");
 			return -EINVAL;
 		}
 		xsdirxss->vip_format = format;
-- 
2.31.1

