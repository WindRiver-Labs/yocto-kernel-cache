From 3021bddaee8897c55717ebb3547e907bf4808bd0 Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Mon, 15 Jul 2019 20:51:55 -0700
Subject: [PATCH 287/767] octeontx2-af: Skip CGX probe if not connected to NIX

commit 57b46de7704085af05e40a18c87cfa8bc76ee6b9 from
git@git.assembla.com:cavium/WindRiver.linux.git

The CGX's not connected to NIX will be used by user space applications
directly so skip probing inside kernel drivers.

Change-Id: I12f739c0b0428c9c18d379ed09186faa0ed6b4b8
Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/13290
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/cgx.c | 14 ++++++++++++--
 drivers/net/ethernet/marvell/octeontx2/af/rvu.h | 12 ++++++++++--
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
index cbf653aee97f..35ae91223a30 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
@@ -1208,6 +1208,13 @@ static int cgx_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	cgx->cgx_id = (pci_resource_start(pdev, PCI_CFG_REG_BAR_NUM) >> 24)
 		& CGX_ID_MASK;
 
+	 /* Skip probe if CGX is not mapped to NIX */
+	if (!is_cgx_mapped_to_nix(pdev->subsystem_device, cgx->cgx_id)) {
+		dev_notice(dev, "skip cgx%d probe\n", cgx->cgx_id);
+		err = -ENOMEM;
+		goto err_release_regions;
+	}
+
 	/* init wq for processing linkup requests */
 	INIT_WORK(&cgx->cgx_cmd_work, cgx_lmac_linkup_work);
 	cgx->cgx_cmd_workq = alloc_workqueue("cgx_cmd_workq", 0, 0);
@@ -1244,8 +1251,11 @@ static void cgx_remove(struct pci_dev *pdev)
 {
 	struct cgx *cgx = pci_get_drvdata(pdev);
 
-	cgx_lmac_exit(cgx);
-	list_del(&cgx->cgx_list);
+	if (cgx) {
+		cgx_lmac_exit(cgx);
+		list_del(&cgx->cgx_list);
+	}
+
 	pci_free_irq_vectors(pdev);
 	pci_release_regions(pdev);
 	pci_disable_device(pdev);
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
index 5b9b20865146..fa4ac514391a 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
@@ -22,7 +22,9 @@
 
 /* Subsystem Device ID */
 #define PCI_SUBSYS_DEVID_96XX                  0xB200
-#define PCI_SUBSYS_DEVID_95XX                  0xB200
+#define PCI_SUBSYS_DEVID_95XX_RVU              0xB200
+#define PCI_SUBSYS_DEVID_95XX                  0xB300
+#define PCI_SUBSYS_DEVID_LOKI                  0xB400
 
 /* PCI BAR nos */
 #define	PCI_AF_REG_BAR_NUM			0
@@ -499,7 +501,13 @@ static inline bool is_rvu_95xx_A0(struct rvu *rvu)
 	struct pci_dev *pdev = rvu->pdev;
 
 	return ((pdev->revision == 0x10) || (pdev->revision == 0x11)) &&
-		(pdev->subsystem_device == PCI_SUBSYS_DEVID_95XX);
+		(pdev->subsystem_device == PCI_SUBSYS_DEVID_95XX_RVU);
+}
+
+static inline bool is_cgx_mapped_to_nix(unsigned short id, u8 cgx_id)
+{
+	return !(cgx_id && (id == PCI_SUBSYS_DEVID_95XX ||
+			    id == PCI_SUBSYS_DEVID_LOKI));
 }
 
 /* Function Prototypes
-- 
2.31.1

