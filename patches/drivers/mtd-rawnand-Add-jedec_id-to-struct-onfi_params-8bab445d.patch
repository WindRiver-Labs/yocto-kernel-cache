From adcd5745281dfe4340dee42a781ed9a465647a2e Mon Sep 17 00:00:00 2001
From: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
Date: Thu, 5 Dec 2019 02:19:41 -0700
Subject: [PATCH 0013/1851] mtd: rawnand: Add jedec_id to struct onfi_params

commit 535b606b074de913935e28235504c248c657f9ea from
https://github.com/Xilinx/linux-xlnx.git

During the write oob operation the core will reset the NAND flash,
which switches the flash device to SDR mode from its previously
configured mode but leaves controller in its previous configured
mode which causes wrong clock synchronization between controller
and flash device leads to data mismatch.
The core is issuing the reset because of hardware bugs in some
of the chips like TOSHIBA.
So limit this reset only to TOSHIBA parts. inorder to do that
we need jedec_id. so add jedec_id to struct onfi_params

We don't even need this update if we have nand_setup_data_interface()
hook. but we don't support this because this interface is not supporting
high speed modes.

Signed-off-by: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/nand/raw/nand_base.c | 8 +++++---
 drivers/mtd/nand/raw/nand_onfi.c | 1 +
 include/linux/mtd/onfi.h         | 2 ++
 3 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/mtd/nand/raw/nand_base.c b/drivers/mtd/nand/raw/nand_base.c
index 360b61411f07..536b09a035f8 100644
--- a/drivers/mtd/nand/raw/nand_base.c
+++ b/drivers/mtd/nand/raw/nand_base.c
@@ -467,9 +467,11 @@ static int nand_do_write_oob(struct nand_chip *chip, loff_t to,
 	 * if we don't do this. I have no clue why, but I seem to have 'fixed'
 	 * it in the doc2000 driver in August 1999.  dwmw2.
 	 */
-	ret = nand_reset(chip, chipnr);
-	if (ret)
-		return ret;
+	if (chip->parameters.onfi->jedec_id == NAND_MFR_TOSHIBA) {
+		ret = nand_reset(chip, chipnr);
+		if (ret)
+			return ret;
+	}
 
 	nand_select_target(chip, chipnr);
 
diff --git a/drivers/mtd/nand/raw/nand_onfi.c b/drivers/mtd/nand/raw/nand_onfi.c
index efa349958b0c..a6873750e857 100644
--- a/drivers/mtd/nand/raw/nand_onfi.c
+++ b/drivers/mtd/nand/raw/nand_onfi.c
@@ -294,6 +294,7 @@ int nand_onfi_detect(struct nand_chip *chip)
 	onfi->tR = le16_to_cpu(p->t_r);
 	onfi->tCCS = le16_to_cpu(p->t_ccs);
 	onfi->async_timing_mode = le16_to_cpu(p->async_timing_mode);
+	onfi->jedec_id = le16_to_cpu(p->jedec_id);
 	onfi->src_sync_timing_mode = le16_to_cpu(p->src_sync_timing_mode);
 	onfi->vendor_revision = le16_to_cpu(p->vendor_revision);
 	memcpy(onfi->vendor, p->vendor, sizeof(p->vendor));
diff --git a/include/linux/mtd/onfi.h b/include/linux/mtd/onfi.h
index 9e8366f4517f..4cc752853c62 100644
--- a/include/linux/mtd/onfi.h
+++ b/include/linux/mtd/onfi.h
@@ -163,6 +163,7 @@ struct onfi_ext_param_page {
  * @async_timing_mode: Supported asynchronous timing mode
  * @vendor_revision: Vendor specific revision number
  * @vendor: Vendor specific data
+ * @jedec_id: jedec id of the flash
  */
 struct onfi_params {
 	int version;
@@ -174,6 +175,7 @@ struct onfi_params {
 	u16 src_sync_timing_mode;
 	u16 vendor_revision;
 	u8 vendor[88];
+	u8 jedec_id;
 };
 
 #endif /* __LINUX_MTD_ONFI_H */
-- 
2.31.1

