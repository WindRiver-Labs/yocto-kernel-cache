From 41918d6c83fd73339dfce6ac3b9e6608f24f85e3 Mon Sep 17 00:00:00 2001
From: Tanmay Jagdale <tanmay@marvell.com>
Date: Sat, 29 May 2021 11:35:52 +0000
Subject: [PATCH 1596/1921] Revert "coresight: Make sysFS functional on
 topolgies with per core sink"

This reverts commit 4117c4613284cc51720309dd1311e03925d91736.

- Reverting this patch to bring in newer version of the patch that
  was merged upstream.
- Updated coresight_get_enabled_sink() call in coresight_disable()
  to avoid build failure.

Change-Id: Ic7368397f051055ebe6d461c509f50def824c3b4
Signed-off-by: Tanmay Jagdale <tanmay@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/52994
Tested-by: Linu Cherian <lcherian@marvell.com>
Reviewed-by: Linu Cherian <lcherian@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../hwtracing/coresight/coresight-etm-perf.c  |  2 +-
 drivers/hwtracing/coresight/coresight-priv.h  |  3 +--
 drivers/hwtracing/coresight/coresight.c       | 25 +++----------------
 3 files changed, 5 insertions(+), 25 deletions(-)

diff --git a/drivers/hwtracing/coresight/coresight-etm-perf.c b/drivers/hwtracing/coresight/coresight-etm-perf.c
index 47b8acadba67..9b0c5d719232 100644
--- a/drivers/hwtracing/coresight/coresight-etm-perf.c
+++ b/drivers/hwtracing/coresight/coresight-etm-perf.c
@@ -223,7 +223,7 @@ static void *etm_setup_aux(struct perf_event *event, void **pages,
 		id = (u32)event->attr.config2;
 		sink = coresight_get_sink_by_id(id);
 	} else {
-		sink = coresight_get_enabled_sink(NULL, true);
+		sink = coresight_get_enabled_sink(true);
 	}
 
 	if (!sink)
diff --git a/drivers/hwtracing/coresight/coresight-priv.h b/drivers/hwtracing/coresight/coresight-priv.h
index 6e07e7b42094..48a46ccd1296 100644
--- a/drivers/hwtracing/coresight/coresight-priv.h
+++ b/drivers/hwtracing/coresight/coresight-priv.h
@@ -194,8 +194,7 @@ static inline void coresight_write_reg_pair(void __iomem *addr, u64 val,
 void coresight_disable_path(struct list_head *path);
 int coresight_enable_path(struct list_head *path, u32 mode, void *sink_data);
 struct coresight_device *coresight_get_sink(struct list_head *path);
-struct coresight_device *
-coresight_get_enabled_sink(struct coresight_device *source, bool reset);
+struct coresight_device *coresight_get_enabled_sink(bool reset);
 struct coresight_device *coresight_get_sink_by_id(u32 id);
 struct list_head *coresight_build_path(struct coresight_device *csdev,
 				       struct coresight_device *sink);
diff --git a/drivers/hwtracing/coresight/coresight.c b/drivers/hwtracing/coresight/coresight.c
index 8e2cb96fb29a..9446045a0bdf 100644
--- a/drivers/hwtracing/coresight/coresight.c
+++ b/drivers/hwtracing/coresight/coresight.c
@@ -508,10 +508,6 @@ static int coresight_enabled_sink(struct device *dev, const void *data)
 
 /**
  * coresight_get_enabled_sink - returns the first enabled sink found on the bus
- * In case the child port for the given source device is a per core sink,
- * no bus search is done if the sink is in enabled state.
- *
- * @source: Coresight source device reference
  * @deactivate:	Whether the 'enable_sink' flag should be reset
  *
  * When operated from perf the deactivate parameter should be set to 'true'.
@@ -522,25 +518,10 @@ static int coresight_enabled_sink(struct device *dev, const void *data)
  * parameter should be set to 'false', hence mandating users to explicitly
  * clear the flag.
  */
-struct coresight_device *
-coresight_get_enabled_sink(struct coresight_device *source, bool deactivate)
+struct coresight_device *coresight_get_enabled_sink(bool deactivate)
 {
-	struct coresight_device *child;
 	struct device *dev = NULL;
 
-	if (source == NULL || source->pdata->nr_outport != 1)
-		goto skip_single_sink_check;
-
-	/* If the connected port is a sink with single trace source,
-	 * nothing to search further on the bus.
-	 */
-	child = source->pdata->conns[0].child_dev;
-	if (child->pdata->nr_inport == 1) {
-		if (coresight_enabled_sink(&child->dev, &deactivate))
-			return child;
-	}
-
-skip_single_sink_check:
 	dev = bus_find_device(&coresight_bustype, NULL, &deactivate,
 			      coresight_enabled_sink);
 
@@ -788,7 +769,7 @@ int coresight_enable(struct coresight_device *csdev)
 	 * Search for a valid sink for this session but don't reset the
 	 * "enable_sink" flag in sysFS.  Users get to do that explicitly.
 	 */
-	sink = coresight_get_enabled_sink(csdev, false);
+	sink = coresight_get_enabled_sink(false);
 	if (!sink) {
 		ret = -EINVAL;
 		goto out;
@@ -880,7 +861,7 @@ void coresight_disable(struct coresight_device *csdev)
 	}
 
 	if (!is_etm_sync_mode_hw()) {
-		sink = coresight_get_enabled_sink(csdev, false);
+		sink = coresight_get_enabled_sink(false);
 		if (!sink)
 			goto out;
 		/* Remove source reference
-- 
2.31.1

