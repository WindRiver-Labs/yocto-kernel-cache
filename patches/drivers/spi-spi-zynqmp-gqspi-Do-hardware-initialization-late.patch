From 3aba762eca534b949283fd8fa6a54ab3840a1c9c Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Wed, 1 Jul 2020 22:32:20 +0530
Subject: [PATCH 1415/1852] spi: spi-zynqmp-gqspi: Do hardware initialization
 later in probe

commit bad54eadf99cedbbb4c579320f1cfcc34a953b48 from
https://github.com/Xilinx/linux-xlnx.git

In probe the qspi controller is configured to operate at high frequencies.
This configuration is done in the hardware initialization function.
To achieve this the driver needs to set the clock and data tap delay
values as per the operating frequency.
But In current implementation the hardware initialization function is
called much before, the operating frequency information is available to
the driver. Due to this at higher frequencies the driver is not able to
set the appropriate clock and data tap delay values.
Fixed it by delaying hardware initialization, so that operating frequency
information is available when calling the function.

Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Acked-by: Naga Sureshkumar Relli <naga.sureshkumar.relli@xilinx.com>
Signed-off-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/spi/spi-zynqmp-gqspi.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/spi/spi-zynqmp-gqspi.c b/drivers/spi/spi-zynqmp-gqspi.c
index 27c793cdf634..5fc514597f78 100644
--- a/drivers/spi/spi-zynqmp-gqspi.c
+++ b/drivers/spi/spi-zynqmp-gqspi.c
@@ -1299,9 +1299,6 @@ static int zynqmp_qspi_probe(struct platform_device *pdev)
 	if (of_property_read_bool(pdev->dev.of_node, "has-io-mode"))
 		xqspi->io_mode = true;
 
-	/* QSPI controller initializations */
-	zynqmp_qspi_init_hw(xqspi);
-
 	pm_runtime_mark_last_busy(&pdev->dev);
 	pm_runtime_put_autosuspend(&pdev->dev);
 	xqspi->irq = platform_get_irq(pdev, 0);
@@ -1365,6 +1362,9 @@ static int zynqmp_qspi_probe(struct platform_device *pdev)
 	if (master->dev.parent == NULL)
 		master->dev.parent = &master->dev;
 
+	/* QSPI controller initializations */
+	zynqmp_qspi_init_hw(xqspi);
+
 	ret = spi_register_master(master);
 	if (ret)
 		goto clk_dis_all;
-- 
2.31.1

