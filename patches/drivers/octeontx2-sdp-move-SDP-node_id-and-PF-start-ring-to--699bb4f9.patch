From 6db61923f098805d49464a0f22574df8b9c0ece1 Mon Sep 17 00:00:00 2001
From: Radha Mohan Chintakuntla <radhac@marvell.com>
Date: Mon, 25 Jan 2021 14:33:04 -0800
Subject: [PATCH 1218/1921] octeontx2-sdp: move SDP node_id and PF start ring
 to SDP PF driver

Move the SDP node_id and PF starting ring numbers to SDP PF driver.
This information gets sent to AF via the mailbox. So this patch also
gets rid of node_id init in the AF driver.

Signed-off-by: Radha Mohan Chintakuntla <radhac@marvell.com>
Change-Id: I0c01be9c8a853c80cc5e477df1c821b55e62b62b
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/44423
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../ethernet/marvell/octeontx2/af/rvu_sdp.c   | 16 +++----------
 drivers/soc/marvell/octeontx2-sdp/sdp.c       | 24 +++++++++++++++----
 2 files changed, 22 insertions(+), 18 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c
index 93201dbb3ea2..8b1f1c3ad6a2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_sdp.c
@@ -68,17 +68,6 @@ int rvu_sdp_init(struct rvu *rvu)
 		if (!pfvf->sdp_info)
 			return -ENOMEM;
 
-		/* To differentiate a PF between SDP0 or SDP1 we make use of the
-		 * revision ID field in the config space. The revision is filled
-		 * by the firmware.
-		 * 0 means SDP0
-		 * 1 means SDP1
-		 */
-		if (pdev->revision)
-			pfvf->sdp_info->node_id = 1;
-		else
-			pfvf->sdp_info->node_id = 0;
-
 		dev_info(rvu->dev, "SDP PF number:%d\n", sdp_pf_num[i]);
 
 		put_device(&pdev->dev);
@@ -96,7 +85,8 @@ rvu_mbox_handler_set_sdp_chan_info(struct rvu *rvu,
 	struct rvu_pfvf *pfvf = rvu_get_pfvf(rvu, req->hdr.pcifunc);
 
 	memcpy(pfvf->sdp_info, &req->info, sizeof(struct sdp_node_info));
-	dev_info(rvu->dev, "AF: max_vfs %d num_pf_rings %d pf_srn %d\n",
-		 req->info.max_vfs, req->info.num_pf_rings, req->info.pf_srn);
+	dev_info(rvu->dev, "AF: SDP%d max_vfs %d num_pf_rings %d pf_srn %d\n",
+		 req->info.node_id, req->info.max_vfs, req->info.num_pf_rings,
+		 req->info.pf_srn);
 	return 0;
 }
diff --git a/drivers/soc/marvell/octeontx2-sdp/sdp.c b/drivers/soc/marvell/octeontx2-sdp/sdp.c
index 6978e36c22eb..152da151a960 100644
--- a/drivers/soc/marvell/octeontx2-sdp/sdp.c
+++ b/drivers/soc/marvell/octeontx2-sdp/sdp.c
@@ -1232,6 +1232,24 @@ static int sdp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 		goto get_rinfo_failed;
 	}
 
+	/* To differentiate a PF between SDP0 or SDP1 we make use of the
+	 * revision ID field in the config space. The revision is filled
+	 * by the firmware.
+	 * 0 means SDP0
+	 * 1 means SDP1
+	 */
+	if (pdev->revision)
+		info.node_id = 1;
+	else
+		info.node_id = 0;
+
+
+	/*
+	 * For 98xx there are 2xSDPs so start the PF ring from 128 for SDP1
+	 * SDP0 has PCI revid 0 and SDP1 has PCI revid 1
+	 */
+	info.pf_srn = pdev->revision ? 128 : info.pf_srn;
+
 	err = send_chan_info(sdp, &info);
 	if (err) {
 		err = -EINVAL;
@@ -1243,11 +1261,7 @@ static int sdp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	fw_rinfo.s.rppf = info.num_pf_rings;
 	fw_rinfo.s.rpvf = info.vf_rings[0];
 	fw_rinfo.s.numvf = info.max_vfs - 1;
-	/*
-	 * For 98xx there are 2xSDPs so start the PF ring from 128 for SDP1
-	 * SDP0 has PCI revid 0 and SDP1 has PCI revid 1
-	 */
-	fw_rinfo.s.pf_srn = pdev->revision ? 128 : info.pf_srn;
+	fw_rinfo.s.pf_srn = info.pf_srn;
 
 	dev_info(&pdev->dev, "Ring info 0x%llx\n", fw_rinfo.u);
 	writeq(fw_rinfo.u, sdp->sdp_base + SDPX_RINGX_IN_PKT_CNT(0));
-- 
2.31.1

