From e86123b98c02cf1950d59a713acfb18e682a1207 Mon Sep 17 00:00:00 2001
From: Piyush Mehta <piyush.mehta@xilinx.com>
Date: Wed, 15 Jul 2020 12:30:54 +0530
Subject: [PATCH 1446/1851] usb: dwc3: Error handling for a function return
 value

commit db78e251e7afb3e6f21de048b33d98a7e02d0e85 from
https://github.com/Xilinx/linux-xlnx.git

This patch handles the function return value.

Reported Coverity warning: CHECKED_RETURN

Signed-off-by: Piyush Mehta <piyush.mehta@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/usb/dwc3/core.c               |  7 ++++---
 drivers/usb/dwc3/debugfs.c            | 12 +++++++++---
 drivers/usb/dwc3/dwc3-of-simple.c     | 21 ++++++++++++++++++++-
 drivers/usb/dwc3/gadget_hibernation.c | 10 ++++++++--
 4 files changed, 41 insertions(+), 9 deletions(-)

diff --git a/drivers/usb/dwc3/core.c b/drivers/usb/dwc3/core.c
index 22a53f7ce13d..963707b87990 100644
--- a/drivers/usb/dwc3/core.c
+++ b/drivers/usb/dwc3/core.c
@@ -1450,7 +1450,8 @@ static void dwc3_get_properties(struct dwc3 *dwc)
 				&tx_de_emphasis);
 	device_property_read_string(dev, "snps,hsphy_interface",
 				    &dwc->hsphy_interface);
-	device_property_read_u32(dev, "snps,quirk-frame-length-adjustment",
+	(void)device_property_read_u32(dev,
+				"snps,quirk-frame-length-adjustment",
 				 &dwc->fladj);
 
 	dwc->refclk_fladj = device_property_read_bool(dev,
@@ -1706,7 +1707,7 @@ static int dwc3_remove(struct platform_device *pdev)
 {
 	struct dwc3	*dwc = platform_get_drvdata(pdev);
 
-	pm_runtime_get_sync(&pdev->dev);
+	(void)pm_runtime_get_sync(&pdev->dev);
 
 	dwc3_debugfs_exit(dwc);
 	dwc3_core_exit_mode(dwc);
@@ -1715,7 +1716,7 @@ static int dwc3_remove(struct platform_device *pdev)
 	dwc3_core_exit(dwc);
 	dwc3_ulpi_exit(dwc);
 
-	pm_runtime_put_sync(&pdev->dev);
+	(void)pm_runtime_put_sync(&pdev->dev);
 	pm_runtime_allow(&pdev->dev);
 	pm_runtime_disable(&pdev->dev);
 
diff --git a/drivers/usb/dwc3/debugfs.c b/drivers/usb/dwc3/debugfs.c
index 25b753635879..8feed6e7ef72 100644
--- a/drivers/usb/dwc3/debugfs.c
+++ b/drivers/usb/dwc3/debugfs.c
@@ -611,7 +611,7 @@ static ssize_t dwc3_link_state_write(struct file *file,
 		return -EINVAL;
 	}
 
-	dwc3_gadget_set_link_state(dwc, state);
+	(void)dwc3_gadget_set_link_state(dwc, state);
 	spin_unlock_irqrestore(&dwc->lock, flags);
 
 	return count;
@@ -646,6 +646,7 @@ static ssize_t dwc3_hiber_enable_write(struct file *file,
 	struct seq_file		*s = file->private_data;
 	struct dwc3		*dwc = s->private;
 	char			buf[32];
+	int			ret;
 
 	if (copy_from_user(&buf, ubuf, min_t(size_t, sizeof(buf) - 1, count)))
 		return -EFAULT;
@@ -654,11 +655,16 @@ static ssize_t dwc3_hiber_enable_write(struct file *file,
 	if (!strncmp(buf, "Enable", 6)) {
 		dwc3_gadget_exit(dwc);
 		dwc->has_hibernation = 1;
-		dwc3_gadget_init(dwc);
+		ret = dwc3_gadget_init(dwc);
+		if (ret)
+			return -EINVAL;
+
 	} else if (!strncmp(buf, "Disable", 6)) {
 		dwc3_gadget_exit(dwc);
 		dwc->has_hibernation = 0;
-		dwc3_gadget_init(dwc);
+		ret = dwc3_gadget_init(dwc);
+		if (ret)
+			return -EINVAL;
 	} else {
 		return -EINVAL;
 	}
diff --git a/drivers/usb/dwc3/dwc3-of-simple.c b/drivers/usb/dwc3/dwc3-of-simple.c
index bac775a9cc27..bd9732c023d4 100644
--- a/drivers/usb/dwc3/dwc3-of-simple.c
+++ b/drivers/usb/dwc3/dwc3-of-simple.c
@@ -373,7 +373,12 @@ static int dwc3_of_simple_probe(struct platform_device *pdev)
 
 	pm_runtime_set_active(dev);
 	pm_runtime_enable(dev);
-	pm_runtime_get_sync(dev);
+
+	ret = pm_runtime_get_sync(dev);
+	if (ret < 0) {
+		dev_err(dev, "pm_runtime_get_sync failed, error %d\n", ret);
+		return ret;
+	}
 
 	return 0;
 
@@ -463,7 +468,15 @@ static int dwc3_zynqmp_power_req(struct dwc3 *dwc, bool on)
 	struct device_node *node = of_get_parent(dwc->dev->of_node);
 
 	pdev_parent = of_find_device_by_node(node);
+	if (!pdev_parent) {
+		dev_err(dwc->dev, "Failed to get device parent\n");
+		return -EINVAL;
+	}
+
 	simple = platform_get_drvdata(pdev_parent);
+	if (!simple)
+		return -ENOMEM;
+
 	reg_base = simple->regs;
 
 	/* Check if entering into D3 state is allowed during suspend */
@@ -554,7 +567,13 @@ static int dwc3_versal_power_req(struct dwc3 *dwc, bool on)
 	struct device_node *node = of_get_parent(dwc->dev->of_node);
 
 	pdev_parent = of_find_device_by_node(node);
+	if (!pdev_parent) {
+		dev_err(dwc->dev, "Failed to get device node\n");
+		return -EINVAL;
+	}
 	simple = platform_get_drvdata(pdev_parent);
+	if (!simple)
+		return -ENOMEM;
 
 	if (!eemi_ops->ioctl || !eemi_ops->reset_assert)
 		return -ENOMEM;
diff --git a/drivers/usb/dwc3/gadget_hibernation.c b/drivers/usb/dwc3/gadget_hibernation.c
index 850c59625892..9d1cb2aae464 100644
--- a/drivers/usb/dwc3/gadget_hibernation.c
+++ b/drivers/usb/dwc3/gadget_hibernation.c
@@ -211,7 +211,10 @@ static int restore_eps(struct dwc3 *dwc)
 				cmd = DWC3_DEPCMD_STARTTRANSFER |
 					DWC3_DEPCMD_PARAM(0);
 
-				dwc3_send_gadget_ep_cmd(dep, cmd, &params);
+				ret = dwc3_send_gadget_ep_cmd(dep, cmd,
+								&params);
+				if (ret < 0)
+					return ret;
 
 				dwc3_gadget_ep_get_transfer_index(dep);
 			} else {
@@ -435,7 +438,10 @@ void gadget_wakeup_interrupt(struct dwc3 *dwc)
 	dwc3_simple_wakeup_capable(dwc->dev, false);
 
 	/* Initialize the core and restore the saved registers */
-	dwc3_core_init(dwc);
+	ret = dwc3_core_init(dwc);
+	if (ret)
+		goto err;
+
 	restore_regs(dwc);
 
 	/* ask controller to save the non-sticky registers */
-- 
2.31.1

