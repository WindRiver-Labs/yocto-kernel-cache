From 3e32172226155ae62b1d7b53b8dc191f8d711406 Mon Sep 17 00:00:00 2001
From: Wendy Liang <wendy.liang@xilinx.com>
Date: Tue, 15 Sep 2020 15:14:18 -0700
Subject: [PATCH 1594/1852] misc: xilinx-ai-engine: Add extern functions to
 reset partition

commit 8fd59abf4d4f85a069b7b4c86b72e9e455de1fcc from
https://github.com/Xilinx/linux-xlnx.git

Add extern functions to reset AI engine partition and indicate AI
engine driver when the AI engine partition reconfiguration is done so
that the driver can scan to see to get the clock states of the tiles.

Signed-off-by: Wendy Liang <wendy.liang@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/misc/xilinx-ai-engine/ai-engine-dev.c | 38 +++++++++++++++++++
 include/linux/xlnx-ai-engine.h                | 12 ++++++
 2 files changed, 50 insertions(+)

diff --git a/drivers/misc/xilinx-ai-engine/ai-engine-dev.c b/drivers/misc/xilinx-ai-engine/ai-engine-dev.c
index f79c46d1ba1d..cd88a1a5d27a 100644
--- a/drivers/misc/xilinx-ai-engine/ai-engine-dev.c
+++ b/drivers/misc/xilinx-ai-engine/ai-engine-dev.c
@@ -669,6 +669,44 @@ void aie_partition_release(struct device *dev)
 }
 EXPORT_SYMBOL_GPL(aie_partition_release);
 
+/**
+ * aie_partition_reset() - Reset AI engine partition
+ * @dev: AI engine partition device
+ * @return: 0 for success, negative value for failure
+ */
+int aie_partition_reset(struct device *dev)
+{
+	struct aie_partition *apart;
+
+	if (WARN_ON(!dev))
+		return -EINVAL;
+
+	apart = dev_to_aiepart(dev);
+	return aie_part_reset(apart);
+}
+EXPORT_SYMBOL_GPL(aie_partition_reset);
+
+/**
+ * aie_partition_post_reinit() - Indicate AI engine partition driver the
+ *				 partition has been re-initialized.
+ * @dev: AI engine partition device
+ * @return: 0 for success, negative value for failure
+ *
+ * This function is called after the AI engine partition is reconfigured with
+ * PDI outside the AI engine driver.
+ */
+int aie_partition_post_reinit(struct device *dev)
+{
+	struct aie_partition *apart;
+
+	if (WARN_ON(!dev))
+		return -EINVAL;
+
+	apart = dev_to_aiepart(dev);
+	return aie_part_post_reinit(apart);
+}
+EXPORT_SYMBOL_GPL(aie_partition_post_reinit);
+
 static int __init xilinx_ai_engine_init(void)
 {
 	int ret;
diff --git a/include/linux/xlnx-ai-engine.h b/include/linux/xlnx-ai-engine.h
index dce26988a798..a030d578b8c3 100644
--- a/include/linux/xlnx-ai-engine.h
+++ b/include/linux/xlnx-ai-engine.h
@@ -83,6 +83,8 @@ bool aie_partition_is_available(struct aie_partition_req *req);
 struct device *aie_partition_request(struct aie_partition_req *req);
 int aie_partition_get_fd(struct device *dev);
 void aie_partition_release(struct device *dev);
+int aie_partition_reset(struct device *dev);
+int aie_partition_post_reinit(struct device *dev);
 
 int aie_register_error_notification(struct device *dev,
 				    void (*cb)(void *priv), void *priv);
@@ -112,6 +114,16 @@ static inline int aie_partition_get_fd(struct device *dev)
 
 static inline void aie_partition_release(struct device *dev) {}
 
+static inline int aie_partition_reset(struct device *dev)
+{
+	return -EINVAL;
+}
+
+static inline int aie_partition_post_reinit(struct device *dev)
+{
+	return -EINVAL;
+}
+
 static inline int
 aie_register_error_notification(struct device *dev, void (*cb)(void *priv),
 				void *priv)
-- 
2.31.1

