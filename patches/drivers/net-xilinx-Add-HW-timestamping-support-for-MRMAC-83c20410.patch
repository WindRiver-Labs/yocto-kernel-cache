From 36f898a4ce8b854c87c508392483f6a1c9a5b882 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Thu, 24 Sep 2020 13:16:54 +0530
Subject: [PATCH 1616/1851] net: xilinx: Add HW timestamping support for MRMAC

commit cc1dbf40f6648461a3ed104af6209d3a6ab12182 from
https://github.com/Xilinx/linux-xlnx.git

Include HW timestamping support for MRMAC.
Obtain PHC index from devicetree to support multiple lanes.
Reset timestamp FIFOs when MCDMA data path and BDs are reset.

Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
Reviewed-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../net/ethernet/xilinx/xilinx_axienet_main.c | 50 +++++++++++++++----
 .../ethernet/xilinx/xilinx_axienet_mcdma.c    |  3 +-
 2 files changed, 42 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index fe1e010e87be..1cce8827809d 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -641,6 +641,19 @@ static void axienet_device_reset(struct net_device *ndev)
 #endif
 	}
 
+#ifdef CONFIG_XILINX_AXI_EMAC_HWTSTAMP
+	if (lp->axienet_config->mactype == XAXIENET_MRMAC) {
+		axienet_rxts_iow(lp, XAXIFIFO_TXTS_RDFR,
+				 XAXIFIFO_TXTS_RESET_MASK);
+		axienet_rxts_iow(lp, XAXIFIFO_TXTS_SRR,
+				 XAXIFIFO_TXTS_RESET_MASK);
+		axienet_txts_iow(lp, XAXIFIFO_TXTS_RDFR,
+				 XAXIFIFO_TXTS_RESET_MASK);
+		axienet_txts_iow(lp, XAXIFIFO_TXTS_SRR,
+				 XAXIFIFO_TXTS_RESET_MASK);
+	}
+#endif
+
 	if ((lp->axienet_config->mactype == XAXIENET_1G) &&
 	    !lp->eth_hasnobuf) {
 		axienet_status = axienet_ior(lp, XAE_IP_OFFSET);
@@ -1036,7 +1049,8 @@ static void axienet_create_tsheader(u8 *buf, u8 msg_type,
 		memcpy(&val, buf, AXIENET_TS_HEADER_LEN);
 		swab64s(&val);
 		memcpy(buf, &val, AXIENET_TS_HEADER_LEN);
-	} else if (lp->axienet_config->mactype == XAXIENET_10G_25G) {
+	} else if (lp->axienet_config->mactype == XAXIENET_10G_25G ||
+		   lp->axienet_config->mactype == XAXIENET_MRMAC) {
 		memcpy(&tmp, buf, XXVENET_TS_HEADER_LEN);
 		axienet_txts_iow(lp, XAXIFIFO_TXTS_TXFD, tmp);
 		axienet_txts_iow(lp, XAXIFIFO_TXTS_TLR, XXVENET_TS_HEADER_LEN);
@@ -1159,7 +1173,8 @@ static int axienet_skb_tstsmp(struct sk_buff **__skb, struct axienet_dma_q *q,
 			}
 		}
 	} else if ((skb_shinfo(skb)->tx_flags & SKBTX_HW_TSTAMP) &&
-			  (lp->axienet_config->mactype == XAXIENET_10G_25G)) {
+			  (lp->axienet_config->mactype == XAXIENET_10G_25G ||
+			   lp->axienet_config->mactype == XAXIENET_MRMAC)) {
 			cur_p->ptp_tx_ts_tag = prandom_u32_max(XAXIFIFO_TXTS_TAG_MAX) + 1;
 			dev_dbg(lp->dev, "tx_tag:[%04x]\n",
 				cur_p->ptp_tx_ts_tag);
@@ -1172,7 +1187,8 @@ static int axienet_skb_tstsmp(struct sk_buff **__skb, struct axienet_dma_q *q,
 				skb_shinfo(skb)->tx_flags |= SKBTX_IN_PROGRESS;
 				cur_p->ptp_tx_skb = (phys_addr_t)skb_get(skb);
 			}
-	} else if (lp->axienet_config->mactype == XAXIENET_10G_25G) {
+	} else if (lp->axienet_config->mactype == XAXIENET_10G_25G ||
+		   lp->axienet_config->mactype == XAXIENET_MRMAC) {
 			dev_dbg(lp->dev, "tx_tag:NOOP\n");
 			axienet_create_tsheader(lp->tx_ptpheader,
 						TX_TS_OP_NOOP, q);
@@ -1473,7 +1489,8 @@ static int axienet_recv(struct net_device *ndev, int budget,
 			time64 = sec * NS_PER_SEC + nsec;
 			shhwtstamps = skb_hwtstamps(skb);
 			shhwtstamps->hwtstamp = ns_to_ktime(time64);
-		} else if (lp->axienet_config->mactype == XAXIENET_10G_25G) {
+		} else if (lp->axienet_config->mactype == XAXIENET_10G_25G ||
+			   lp->axienet_config->mactype == XAXIENET_MRMAC) {
 			axienet_rx_hwtstamp(lp, skb);
 		}
 	}
@@ -2127,7 +2144,8 @@ static int axienet_set_timestamp_mode(struct axienet_local *lp,
 		return -EINVAL;
 
 	/* Read the current value in the MAC TX CTRL register */
-	if (lp->axienet_config->mactype != XAXIENET_10G_25G)
+	if (lp->axienet_config->mactype != XAXIENET_10G_25G &&
+	    lp->axienet_config->mactype != XAXIENET_MRMAC)
 		regval = axienet_ior(lp, XAE_TC_OFFSET);
 
 	switch (config->tx_type) {
@@ -2146,11 +2164,13 @@ static int axienet_set_timestamp_mode(struct axienet_local *lp,
 		return -ERANGE;
 	}
 
-	if (lp->axienet_config->mactype != XAXIENET_10G_25G)
+	if (lp->axienet_config->mactype != XAXIENET_10G_25G &&
+	    lp->axienet_config->mactype != XAXIENET_MRMAC)
 		axienet_iow(lp, XAE_TC_OFFSET, regval);
 
 	/* Read the current value in the MAC RX RCW1 register */
-	if (lp->axienet_config->mactype != XAXIENET_10G_25G)
+	if (lp->axienet_config->mactype != XAXIENET_10G_25G &&
+	    lp->axienet_config->mactype != XAXIENET_MRMAC)
 		regval = axienet_ior(lp, XAE_RCW1_OFFSET);
 
 	/* On RX always timestamp everything */
@@ -2163,7 +2183,8 @@ static int axienet_set_timestamp_mode(struct axienet_local *lp,
 		regval |= XAE_RCW1_INBAND1588_MASK;
 	}
 
-	if (lp->axienet_config->mactype != XAXIENET_10G_25G)
+	if (lp->axienet_config->mactype != XAXIENET_10G_25G &&
+	    lp->axienet_config->mactype != XAXIENET_MRMAC)
 		axienet_iow(lp, XAE_RCW1_OFFSET, regval);
 
 	return 0;
@@ -2568,13 +2589,15 @@ static int axienet_ethtools_set_coalesce(struct net_device *ndev,
 static int axienet_ethtools_get_ts_info(struct net_device *ndev,
 					struct ethtool_ts_info *info)
 {
+	struct axienet_local *lp = netdev_priv(ndev);
+
 	info->so_timestamping = SOF_TIMESTAMPING_TX_HARDWARE |
 				SOF_TIMESTAMPING_RX_HARDWARE |
 				SOF_TIMESTAMPING_RAW_HARDWARE;
 	info->tx_types = (1 << HWTSTAMP_TX_OFF) | (1 << HWTSTAMP_TX_ON);
 	info->rx_filters = (1 << HWTSTAMP_FILTER_NONE) |
 			   (1 << HWTSTAMP_FILTER_ALL);
-	info->phc_index = 0;
+	info->phc_index = lp->phc_index;
 
 #ifdef CONFIG_XILINX_TSN_PTP
 	info->phc_index = axienet_phc_index;
@@ -3315,6 +3338,12 @@ static int axienet_probe(struct platform_device *pdev)
 			mrmac_gt_ctrl = lp->gt_ctrl;
 			mrmac_pll_reg = 1;
 		}
+#ifdef CONFIG_XILINX_AXI_EMAC_HWTSTAMP
+		ret = of_property_read_u32(pdev->dev.of_node, "xlnx,phcindex",
+					   &lp->phc_index);
+		if (ret)
+			dev_warn(&pdev->dev, "No phc index defaulting to 0\n");
+#endif
 		ret = of_property_read_u32(pdev->dev.of_node, "xlnx,gtlane",
 					   &lp->gt_lane);
 		if (ret) {
@@ -3351,7 +3380,8 @@ static int axienet_probe(struct platform_device *pdev)
 			goto free_netdev;
 		}
 
-		if (lp->axienet_config->mactype == XAXIENET_10G_25G) {
+		if (lp->axienet_config->mactype == XAXIENET_10G_25G ||
+		    lp->axienet_config->mactype == XAXIENET_MRMAC) {
 			np = of_parse_phandle(pdev->dev.of_node,
 					      "xlnx,rxtsfifo", 0);
 			if (IS_ERR(np)) {
diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_mcdma.c b/drivers/net/ethernet/xilinx/xilinx_axienet_mcdma.c
index 07203d48f7d3..4e6d14354620 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_mcdma.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_mcdma.c
@@ -728,7 +728,8 @@ void __maybe_unused axienet_mcdma_err_handler(unsigned long data)
 		axienet_iow(lp, XAE_FCC_OFFSET, XAE_FCC_FCRX_MASK);
 
 #ifdef CONFIG_XILINX_AXI_EMAC_HWTSTAMP
-	if (lp->axienet_config->mactype == XAXIENET_10G_25G) {
+	if (lp->axienet_config->mactype == XAXIENET_10G_25G ||
+	    lp->axienet_config->mactype == XAXIENET_MRMAC) {
 		axienet_rxts_iow(lp, XAXIFIFO_TXTS_RDFR,
 				 XAXIFIFO_TXTS_RESET_MASK);
 		axienet_rxts_iow(lp, XAXIFIFO_TXTS_SRR,
-- 
2.31.1

