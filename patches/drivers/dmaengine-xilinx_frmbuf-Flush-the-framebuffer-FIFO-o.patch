From cd7f24d83cb0cb4decfcaa45545fa636a4d9de75 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Fri, 27 Apr 2018 00:18:40 +0530
Subject: [PATCH 0169/1852] dmaengine: xilinx_frmbuf: Flush the framebuffer
 FIFO on halt

commit 6f93ff0304564e1bb428c603cc8cad012a3afb24 from
https://github.com/Xilinx/linux-xlnx.git

On framebuffer halt, set the flush bit of control register and wait for
the flush status bit to be set which indicates the framebuffer FIFO is
flushed. It waits for a maximum of 50 ms time for flush to happen.
This is done after framebuffer is stopped and all pending transactions
are done i.e. idle state is reached.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/dma/xilinx/xilinx_frmbuf.c | 31 ++++++++++++++++++++++++++++--
 1 file changed, 29 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_frmbuf.c b/drivers/dma/xilinx/xilinx_frmbuf.c
index e3cabde95282..bcfbd7b87a85 100644
--- a/drivers/dma/xilinx/xilinx_frmbuf.c
+++ b/drivers/dma/xilinx/xilinx_frmbuf.c
@@ -21,6 +21,7 @@
  */
 
 #include <linux/bitops.h>
+#include <linux/delay.h>
 #include <linux/dma/xilinx_frmbuf.h>
 #include <linux/dmapool.h>
 #include <linux/gpio/consumer.h>
@@ -58,6 +59,8 @@
 #define XILINX_FRMBUF_CTRL_AP_DONE		BIT(1)
 #define XILINX_FRMBUF_CTRL_AP_IDLE		BIT(2)
 #define XILINX_FRMBUF_CTRL_AP_READY		BIT(3)
+#define XILINX_FRMBUF_CTRL_FLUSH		BIT(5)
+#define XILINX_FRMBUF_CTRL_FLUSH_DONE		BIT(6)
 #define XILINX_FRMBUF_CTRL_AUTO_RESTART		BIT(7)
 #define XILINX_FRMBUF_GIE_EN			BIT(0)
 
@@ -98,8 +101,11 @@
 
 #define XILINX_FRMBUF_ALIGN_MUL			8
 
+#define WAIT_FOR_FLUSH_DONE			25
+
 /* Pixels per clock property flag */
 #define XILINX_PPC_PROP				BIT(0)
+#define XILINX_FLUSH_PROP			BIT(1)
 
 /**
  * struct xilinx_frmbuf_desc_hw - Hardware Descriptor
@@ -473,7 +479,7 @@ static const struct xilinx_frmbuf_feature xlnx_fbwr_cfg_v20 = {
 
 static const struct xilinx_frmbuf_feature xlnx_fbwr_cfg_v21 = {
 	.direction = DMA_DEV_TO_MEM,
-	.flags = XILINX_PPC_PROP
+	.flags = XILINX_PPC_PROP | XILINX_FLUSH_PROP,
 };
 
 static const struct xilinx_frmbuf_feature xlnx_fbrd_cfg_v20 = {
@@ -482,7 +488,7 @@ static const struct xilinx_frmbuf_feature xlnx_fbrd_cfg_v20 = {
 
 static const struct xilinx_frmbuf_feature xlnx_fbrd_cfg_v21 = {
 	.direction = DMA_MEM_TO_DEV,
-	.flags = XILINX_PPC_PROP
+	.flags = XILINX_PPC_PROP | XILINX_FLUSH_PROP,
 };
 
 static const struct of_device_id xilinx_frmbuf_of_ids[] = {
@@ -1175,6 +1181,27 @@ static int xilinx_frmbuf_terminate_all(struct dma_chan *dchan)
 	xilinx_frmbuf_free_descriptors(chan);
 	/* worst case frame-to-frame boundary; ensure frame output complete */
 	msleep(50);
+
+	if (chan->xdev->cfg->flags & XILINX_FLUSH_PROP) {
+		u8 count;
+
+		/*
+		 * Flush the framebuffer FIFO and
+		 * wait for max 50ms for flush done
+		 */
+		frmbuf_set(chan, XILINX_FRMBUF_CTRL_OFFSET,
+			   XILINX_FRMBUF_CTRL_FLUSH);
+		for (count = WAIT_FOR_FLUSH_DONE; count > 0; count--) {
+			if (frmbuf_read(chan, XILINX_FRMBUF_CTRL_OFFSET) &
+					XILINX_FRMBUF_CTRL_FLUSH_DONE)
+				break;
+			usleep_range(2000, 2100);
+		}
+
+		if (!count)
+			dev_err(chan->xdev->dev, "Framebuffer Flush not done!\n");
+	}
+
 	xilinx_frmbuf_chan_reset(chan);
 
 	return 0;
-- 
2.31.1

