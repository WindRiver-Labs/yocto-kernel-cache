From 285df09597ca0cd7cfe8e835aebcd86fad8e8271 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Mon, 17 Dec 2018 12:51:11 +0530
Subject: [PATCH 053/767] octeontx2-pf: Set skb->hash from HW

commit 7fb8010772fa734bf983ac16fbe9fc4cc96264ca from
git@git.assembla.com:cavium/WindRiver.linux.git

If rxhash offload is enabled then set skb's hash
to flow_tag from CQE Rx descriptor.

Change-Id: I6e94a0d0c3a619dd9e92e8059d4ac65275f30f8e
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.c       |  1 +
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c  |  4 +--
 .../marvell/octeontx2/nic/otx2_txrx.c         | 25 +++++++++++++++++++
 3 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index fcdb241d7949..433a2e468aa7 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -353,6 +353,7 @@ static int otx2_rq_init(struct otx2_nic *pfvf, u16 qidx, u16 lpb_aura)
 	aq->rq.lpb_aura = lpb_aura; /* Use large packet buffer aura */
 	aq->rq.lpb_sizem1 = (DMA_BUFFER_LEN / 8) - 1;
 	aq->rq.xqe_imm_size = 0; /* Copying of packet to CQE not needed */
+	aq->rq.flow_tagw = 32; /* Copy full 32bit flow_tag to CQE header */
 
 	/* Fill AQ info */
 	aq->qidx = qidx;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 950b82bdd0f6..cc090355e924 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -761,8 +761,8 @@ static int otx2_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	 */
 	pf->iommu_domain = iommu_get_domain_for_dev(dev);
 
-	netdev->hw_features = (NETIF_F_RXCSUM |
-			       NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
+	netdev->hw_features = (NETIF_F_RXCSUM | NETIF_F_IP_CSUM |
+			       NETIF_F_IPV6_CSUM | NETIF_F_RXHASH);
 	netdev->features |= netdev->hw_features;
 
 	netdev->netdev_ops = &otx2_netdev_ops;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
index 71261d600d40..c3e2d8110145 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_txrx.c
@@ -112,6 +112,29 @@ static void otx2_snd_pkt_handler(struct otx2_nic *pfvf,
 	}
 }
 
+static inline void otx2_set_rxhash(struct otx2_nic *pfvf,
+				   struct nix_cqe_hdr_s *cqe_hdr,
+				   struct sk_buff *skb)
+{
+	enum pkt_hash_types hash_type = PKT_HASH_TYPE_NONE;
+	struct otx2_rss_info *rss;
+	u32 hash = 0;
+
+	if (!(pfvf->netdev->features & NETIF_F_RXHASH))
+		return;
+
+	rss = &pfvf->hw.rss_info;
+	if (rss->flowkey_cfg) {
+		if (rss->flowkey_cfg &
+		    ~(NIX_FLOW_KEY_TYPE_IPV4 | NIX_FLOW_KEY_TYPE_IPV6))
+			hash_type = PKT_HASH_TYPE_L4;
+		else
+			hash_type = PKT_HASH_TYPE_L3;
+		hash = cqe_hdr->flow_tag;
+	}
+	skb_set_hash(skb, hash, hash_type);
+}
+
 static void otx2_skb_add_frag(struct otx2_nic *pfvf,
 			      struct sk_buff *skb, u64 iova, int len)
 {
@@ -224,6 +247,8 @@ static void otx2_rcv_pkt_handler(struct otx2_nic *pfvf,
 	if (!skb)
 		return;
 
+	otx2_set_rxhash(pfvf, cqe_hdr, skb);
+
 	skb_record_rx_queue(skb, cq->cq_idx);
 	skb->protocol = eth_type_trans(skb, pfvf->netdev);
 	if (pfvf->netdev->features & NETIF_F_RXCSUM)
-- 
2.31.1

