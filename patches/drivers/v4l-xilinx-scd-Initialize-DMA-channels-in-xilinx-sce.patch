From 418a450fd96a2e3401982c40d310a0d12bce035a Mon Sep 17 00:00:00 2001
From: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date: Wed, 3 Apr 2019 13:01:53 -0700
Subject: [PATCH 0605/1852] v4l: xilinx: scd: Initialize DMA channels in
 xilinx-scenechange-dma.c

commit 0c33974f5e3992ca2d11b1d79683d7c30bd0a62f from
https://github.com/Xilinx/linux-xlnx.git

Most of the DMA channel initialization is performed in
xilinx-scenechange-dma.c, but a small part is in
xilinx-scenechange-channel.c. Move all the initialization code to
xilinx-scenechange-dma.c, rename the xscd_dma_chan_probe() function to
xscd_dma_chan_init(), and simplify the code as the function can't fail.

Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../xilinx/xilinx-scenechange-channel.c       |  4 --
 .../platform/xilinx/xilinx-scenechange-dma.c  | 45 ++++++++-----------
 2 files changed, 19 insertions(+), 30 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-scenechange-channel.c b/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
index bff7f06dd519..80923b5f1355 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
+++ b/drivers/media/platform/xilinx/xilinx-scenechange-channel.c
@@ -372,10 +372,6 @@ int xscd_chan_init(struct xscd_device *xscd, unsigned int chan_id,
 	chan->xscd = xscd;
 	chan->id = chan_id;
 	chan->iomem = chan->xscd->iomem + chan->id * XSCD_CHAN_OFFSET;
-	chan->dmachan.id = chan->id;
-	chan->dmachan.iomem = chan->iomem;
-
-	xscd->channels[chan->id] = &chan->dmachan;
 
 	/* Initialize V4L2 subdevice and media entity */
 	subdev = &chan->subdev;
diff --git a/drivers/media/platform/xilinx/xilinx-scenechange-dma.c b/drivers/media/platform/xilinx/xilinx-scenechange-dma.c
index d9c9c84d063c..472341516220 100644
--- a/drivers/media/platform/xilinx/xilinx-scenechange-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-scenechange-dma.c
@@ -241,15 +241,6 @@ static void xscd_dma_chan_desc_cleanup(struct xscd_dma_chan *chan)
 	spin_unlock_irqrestore(&chan->lock, flags);
 }
 
-/**
- * xscd_dma_chan_remove - Per Channel remove function
- * @chan: Driver specific DMA channel
- */
-static void xscd_dma_chan_remove(struct xscd_dma_chan *chan)
-{
-	list_del(&chan->common.device_node);
-}
-
 /**
  * xscd_dma_dma_prep_interleaved - prepare a descriptor for a
  * DMA_SLAVE transaction
@@ -449,14 +440,17 @@ static struct dma_chan *of_scdma_xilinx_xlate(struct of_phandle_args *dma_spec,
 	return dma_get_slave_channel(&xscd->channels[chan_id]->common);
 }
 
-static struct xscd_dma_chan *
-xscd_dma_chan_probe(struct xscd_device *xscd, int chan_id)
+static void xscd_dma_chan_init(struct xscd_device *xscd, int chan_id)
 {
-	struct xscd_dma_chan *chan = xscd->channels[chan_id];
+	struct xscd_dma_chan *chan = &xscd->chans[chan_id]->dmachan;
 
+	chan->id = chan_id;
+	chan->iomem = xscd->iomem + chan->id * XSCD_CHAN_OFFSET;
 	chan->xscd = xscd;
 	chan->idle = true;
 
+	xscd->channels[chan->id] = chan;
+
 	spin_lock_init(&chan->lock);
 	INIT_LIST_HEAD(&chan->pending_list);
 	INIT_LIST_HEAD(&chan->done_list);
@@ -464,8 +458,15 @@ xscd_dma_chan_probe(struct xscd_device *xscd, int chan_id)
 		     (unsigned long)chan);
 	chan->common.device = &xscd->dma_device;
 	list_add_tail(&chan->common.device_node, &xscd->dma_device.channels);
+}
 
-	return chan;
+/**
+ * xscd_dma_chan_remove - Per Channel remove function
+ * @chan: Driver specific DMA channel
+ */
+static void xscd_dma_chan_remove(struct xscd_dma_chan *chan)
+{
+	list_del(&chan->common.device_node);
 }
 
 /**
@@ -477,7 +478,6 @@ xscd_dma_chan_probe(struct xscd_device *xscd, int chan_id)
 int xscd_dma_init(struct xscd_device *xscd)
 {
 	struct dma_device *ddev = &xscd->dma_device;
-	struct xscd_dma_chan *chan;
 	unsigned int chan_id;
 	int ret;
 
@@ -495,14 +495,8 @@ int xscd_dma_init(struct xscd_device *xscd)
 	ddev->device_terminate_all = xscd_dma_terminate_all;
 	ddev->device_prep_interleaved_dma = xscd_dma_prep_interleaved;
 
-	for (chan_id = 0; chan_id < xscd->num_streams; chan_id++) {
-		chan = xscd_dma_chan_probe(xscd, chan_id);
-		if (IS_ERR(chan)) {
-			dev_err(xscd->dev, "failed to probe a channel\n");
-			ret = PTR_ERR(chan);
-			goto error;
-		}
-	}
+	for (chan_id = 0; chan_id < xscd->num_streams; chan_id++)
+		xscd_dma_chan_init(xscd, chan_id);
 
 	ret = dma_async_device_register(ddev);
 	if (ret) {
@@ -524,10 +518,9 @@ int xscd_dma_init(struct xscd_device *xscd)
 	dma_async_device_unregister(ddev);
 
 error:
-	for (chan_id = 0; chan_id < xscd->num_streams; chan_id++) {
-		if (xscd->channels[chan_id])
-			xscd_dma_chan_remove(xscd->channels[chan_id]);
-	}
+	for (chan_id = 0; chan_id < xscd->num_streams; chan_id++)
+		xscd_dma_chan_remove(xscd->channels[chan_id]);
+
 	return ret;
 }
 
-- 
2.31.1

