From 07f2de70c38504cd98cd5c16590d63674d191293 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Fri, 27 Aug 2021 10:20:47 +0530
Subject: [PATCH 4/9] octeontx2-af: Add debug prints for NPC MCAM alloc
 failures

commit 2976eb6369aa27e56682cab4b38d53b915880a42 from
git@git.assembla.com:cavium/WindRiver.linux.git

Added debug prints for failures in NPC MCAM alloc
mailbox request.

Change-Id: I9fe33b291dad83c7f2c24bce19b7f8364db4b5ed
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/59979
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/rvu_npc.c  | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c
index 60aff4d47492..f7fe615348e2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c
@@ -2534,22 +2534,32 @@ int rvu_mbox_handler_npc_mcam_alloc_entry(struct rvu *rvu,
 	rsp->free_count = 0;
 
 	/* Check if ref_entry is within range */
-	if (req->priority && req->ref_entry >= mcam->bmap_entries)
+	if (req->priority && req->ref_entry >= mcam->bmap_entries) {
+		dev_err(rvu->dev, "%s: reference entry %d is out of range\n",
+			__func__, req->ref_entry);
 		return NPC_MCAM_INVALID_REQ;
+	}
 
 	/* ref_entry can't be '0' if requested priority is high.
 	 * Can't be last entry if requested priority is low.
 	 */
 	if ((!req->ref_entry && req->priority == NPC_MCAM_HIGHER_PRIO) ||
 	    ((req->ref_entry == (mcam->bmap_entries - 1)) &&
-	     req->priority == NPC_MCAM_LOWER_PRIO))
+	     req->priority == NPC_MCAM_LOWER_PRIO)) {
+		dev_err(rvu->dev, "%s: Invalid reference entry %d priority %d\n",
+			__func__, req->ref_entry, req->priority);
 		return NPC_MCAM_INVALID_REQ;
+	}
 
 	/* Since list of allocated indices needs to be sent to requester,
 	 * max number of non-contiguous entries per mbox msg is limited.
 	 */
-	if (!req->contig && req->count > NPC_MAX_NONCONTIG_ENTRIES)
+	if (!req->contig && req->count > NPC_MAX_NONCONTIG_ENTRIES) {
+		dev_err(rvu->dev,
+			"%s: %d Non-contiguous MCAM entries requested is morethan max (%d) allowed\n",
+			__func__, req->count, NPC_MAX_NONCONTIG_ENTRIES);
 		return NPC_MCAM_INVALID_REQ;
+	}
 
 	/* Alloc request from PFFUNC with no NIXLF attached should be denied */
 	if (!is_nixlf_attached(rvu, pcifunc))
-- 
2.31.1

