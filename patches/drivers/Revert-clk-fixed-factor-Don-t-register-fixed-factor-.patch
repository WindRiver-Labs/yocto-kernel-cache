From 879383df3b92948dd3f2f000ea24d6c27a480d16 Mon Sep 17 00:00:00 2001
From: Rajan Vaja <rajan.vaja@xilinx.com>
Date: Wed, 13 May 2020 00:41:25 -0700
Subject: [PATCH 1359/1852] Revert "clk: fixed-factor: Don't register fixed
 factor clk until parent clk is registered"

commit 69f9e2de1cbcf62b60a0f78d5bf637fce0b9c230 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit 9ec825cd8b30c9d2eb485e2ed75a30fbd2eab6dc.

There was a issue while using fixed-factor clock, as there can be a
instance where fixed-factor clock is register with reference to DT
node and without its parent registration.
To avoid such fixed factor clock registration, fixed factor clock is
not being register if parent name is not available.

This issue is properly handled in "clk: walk orphan list on clock
provider registration ". So revert "clk: fixed-factor: Don't register
fixed factor clk until parent clk is registered"

Signed-off-by: Rajan Vaja <rajan.vaja@xilinx.com>
State: not-upstreamable
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/clk/clk-fixed-factor.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/drivers/clk/clk-fixed-factor.c b/drivers/clk/clk-fixed-factor.c
index 3d14334591a4..8b343e59dc61 100644
--- a/drivers/clk/clk-fixed-factor.c
+++ b/drivers/clk/clk-fixed-factor.c
@@ -163,7 +163,6 @@ static struct clk_hw *_of_fixed_factor_clk_setup(struct device_node *node)
 {
 	struct clk_hw *hw;
 	const char *clk_name = node->name;
-	const char *parent_name = NULL;
 	unsigned long flags = 0;
 	u32 div, mult;
 	int ret;
@@ -181,9 +180,6 @@ static struct clk_hw *_of_fixed_factor_clk_setup(struct device_node *node)
 	}
 
 	of_property_read_string(node, "clock-output-names", &clk_name);
-	parent_name = of_clk_get_parent_name(node, 0);
-	if (!parent_name)
-		return ERR_PTR(-EPROBE_DEFER);
 
 	if (of_match_node(set_rate_parent_matches, node))
 		flags |= CLK_SET_RATE_PARENT;
@@ -215,8 +211,8 @@ void __init of_fixed_factor_clk_setup(struct device_node *node)
 {
 	_of_fixed_factor_clk_setup(node);
 }
-CLK_OF_DECLARE_DRIVER(fixed_factor_clk, "fixed-factor-clock",
-		      of_fixed_factor_clk_setup);
+CLK_OF_DECLARE(fixed_factor_clk, "fixed-factor-clock",
+		of_fixed_factor_clk_setup);
 
 static int of_fixed_factor_clk_remove(struct platform_device *pdev)
 {
-- 
2.31.1

