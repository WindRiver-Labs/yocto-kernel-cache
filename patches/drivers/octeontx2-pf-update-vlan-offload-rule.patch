From c56cafc31530b44dbe6291beb1e5edbf9fbd862d Mon Sep 17 00:00:00 2001
From: hariprasad <hari1219@gmail.com>
Date: Thu, 28 Nov 2019 17:59:52 +0530
Subject: [PATCH 423/767] octeontx2-pf: update vlan offload rule

commit 4ece484b7a0b62a79ab098f75c2a592839d4d7fb from
git@git.assembla.com:cavium/WindRiver.linux.git

MAC address field in vlan offload rule and interface mac address
needs to be same for VLAN offload functionality. So update mac
address field in vlan offload rule whenever user changes it.

Change-Id: I272ea3b94b7989fd15efd306c27dbae3dddfb2a6
Signed-off-by: hariprasad <hari1219@gmail.com>
Reviewed-on: https://sj1git1.cavium.com/19826
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../ethernet/marvell/octeontx2/nic/otx2_common.c  | 15 ++++++++++-----
 .../ethernet/marvell/octeontx2/nic/otx2_common.h  |  3 ++-
 .../ethernet/marvell/octeontx2/nic/otx2_flows.c   |  5 ++++-
 3 files changed, 16 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index c83236834fbc..de18887535c5 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -126,7 +126,7 @@ void otx2_get_stats64(struct net_device *netdev,
 EXPORT_SYMBOL(otx2_get_stats64);
 
 /* Sync MAC address with RVU */
-int otx2_hw_set_mac_addr(struct otx2_nic *pfvf, struct net_device *netdev)
+int otx2_hw_set_mac_addr(struct otx2_nic *pfvf, u8 *mac)
 {
 	struct nix_set_mac_addr *req;
 	int err;
@@ -138,7 +138,7 @@ int otx2_hw_set_mac_addr(struct otx2_nic *pfvf, struct net_device *netdev)
 		return -ENOMEM;
 	}
 
-	ether_addr_copy(req->mac_addr, netdev->dev_addr);
+	ether_addr_copy(req->mac_addr, mac);
 
 	err = otx2_sync_mbox_msg(&pfvf->mbox);
 	otx2_mbox_unlock(&pfvf->mbox);
@@ -186,9 +186,14 @@ int otx2_set_mac_address(struct net_device *netdev, void *p)
 	if (!is_valid_ether_addr(addr->sa_data))
 		return -EADDRNOTAVAIL;
 
-	memcpy(netdev->dev_addr, addr->sa_data, netdev->addr_len);
-
-	otx2_hw_set_mac_addr(pfvf, netdev);
+	if (!otx2_hw_set_mac_addr(pfvf, addr->sa_data)) {
+		memcpy(netdev->dev_addr, addr->sa_data, netdev->addr_len);
+		/* update dmac field in vlan offload rule */
+		if (pfvf->flags & OTX2_FLAG_RX_VLAN_SUPPORT)
+			otx2_install_rxvlan_offload_flow(pfvf);
+	} else {
+		return -EPERM;
+	}
 
 	return 0;
 }
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index 1a141420c77c..75e48838b436 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -666,7 +666,7 @@ static inline void otx2_dma_unmap_page(struct otx2_nic *pfvf,
 void otx2_free_cints(struct otx2_nic *pfvf, int n);
 void otx2_set_cints_affinity(struct otx2_nic *pfvf);
 
-int otx2_hw_set_mac_addr(struct otx2_nic *pfvf, struct net_device *netdev);
+int otx2_hw_set_mac_addr(struct otx2_nic *pfvf, u8 *mac);
 int otx2_set_mac_address(struct net_device *netdev, void *p);
 int otx2_hw_set_mtu(struct otx2_nic *pfvf, int mtu);
 void otx2_tx_timeout(struct net_device *netdev);
@@ -755,6 +755,7 @@ int otx2_remove_flow(struct otx2_nic *pfvf, u32 location);
 int otx2_prepare_flow_request(struct ethtool_rx_flow_spec *fsp,
 			      struct npc_install_flow_req *req);
 int otx2_enable_rxvlan(struct otx2_nic *pf, bool enable);
+int otx2_install_rxvlan_offload_flow(struct otx2_nic *pfvf);
 int otx2smqvf_probe(struct otx2_nic *vf);
 int otx2smqvf_remove(struct otx2_nic *vf);
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_flows.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_flows.c
index 96a4dbba25a3..39f439202235 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_flows.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_flows.c
@@ -506,11 +506,14 @@ int otx2_destroy_mcam_flows(struct otx2_nic *pfvf)
 	return 0;
 }
 
-static int otx2_install_rxvlan_offload_flow(struct otx2_nic *pfvf)
+int otx2_install_rxvlan_offload_flow(struct otx2_nic *pfvf)
 {
 	struct npc_install_flow_req *req;
 	int err;
 
+	if (!(pfvf->flags & OTX2_FLAG_MCAM_ENTRIES_ALLOC))
+		return -ENOMEM;
+
 	otx2_mbox_lock(&pfvf->mbox);
 	req = otx2_mbox_alloc_msg_npc_install_flow(&pfvf->mbox);
 	if (!req) {
-- 
2.31.1

