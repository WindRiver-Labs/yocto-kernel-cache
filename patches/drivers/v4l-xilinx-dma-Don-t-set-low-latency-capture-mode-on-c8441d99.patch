From 2f2ac78513f713a230e3147092b9b4f1884ec729 Mon Sep 17 00:00:00 2001
From: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Date: Wed, 7 Aug 2019 11:44:33 -0700
Subject: [PATCH 0653/1851] v4l: xilinx: dma: Don't set low latency capture
 mode on dma

commit e316350c0ae837e01dd117e664378e7321835536 from
https://github.com/Xilinx/linux-xlnx.git

This patch ensures that the low latency capture mode is not
communicated to dma driver. Because the dma driver does not
have to do anything specific to this feature.

This patch also renames the parameter from earlycb_mode to
low_latency_cap. And introduces control values to enable
and disable low latency capture mode.

Signed-off-by: Devarsh Thakkar <devarsh.thakkar@xilinx.com>
Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 30 ++++++++++------------
 drivers/media/platform/xilinx/xilinx-dma.h |  3 ++-
 include/uapi/linux/xilinx-v4l2-controls.h  |  4 +++
 3 files changed, 19 insertions(+), 18 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index b1b1cbbc5c65..dece219872b3 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -627,18 +627,6 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 
 	xilinx_xdma_set_fid(dma->dma, desc, fid);
 
-	/* Set low latency capture mode */
-	if (dma->earlycb_mode) {
-		int ret;
-
-		ret = xilinx_xdma_set_earlycb(dma->dma, desc,
-					      dma->earlycb_mode);
-		if (ret < 0) {
-			dev_err(dma->xdev->dev,
-				"Failed enable low latency mode\n");
-		}
-	}
-
 	spin_lock_irq(&dma->queued_lock);
 	list_add_tail(&buf->queue, &dma->queued_bufs);
 	spin_unlock_irq(&dma->queued_lock);
@@ -1132,18 +1120,26 @@ xvip_dma_set_ctrl(struct file *file, void *fh, struct v4l2_control *ctl)
 {
 	struct v4l2_fh *vfh = file->private_data;
 	struct xvip_dma *dma = to_xvip_dma(vfh->vdev);
+	int ret = 0;
 
 	if (vb2_is_busy(&dma->queue))
 		return -EBUSY;
 
-	if (ctl->id == V4L2_CID_XILINX_LOW_LATENCY) {
-		if (ctl->value)
-			dma->earlycb_mode = EARLY_CALLBACK_LOW_LATENCY;
+	switch (ctl->id)  {
+	case V4L2_CID_XILINX_LOW_LATENCY:
+		if (ctl->value == XVIP_LOW_LATENCY_ENABLE)
+			dma->low_latency_cap = true;
+		else if (ctl->value == XVIP_LOW_LATENCY_DISABLE)
+			dma->low_latency_cap = false;
 		else
-			dma->earlycb_mode = 0;
+			ret = -EINVAL;
+
+	break;
+	default:
+		ret = -EINVAL;
 	}
 
-	return 0;
+	return ret;
 }
 
 static int
diff --git a/drivers/media/platform/xilinx/xilinx-dma.h b/drivers/media/platform/xilinx/xilinx-dma.h
index d2e68fde42bf..61b05557d7f6 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.h
+++ b/drivers/media/platform/xilinx/xilinx-dma.h
@@ -76,6 +76,7 @@ static inline struct xvip_pipeline *to_xvip_pipeline(struct media_entity *e)
  * @xt: dma interleaved template for dma configuration
  * @sgl: data chunk structure for dma_interleaved_template
  * @prev_fid: Previous Field ID
+ * @low_latency_cap: Low latency capture mode
  */
 struct xvip_dma {
 	struct list_head list;
@@ -108,7 +109,7 @@ struct xvip_dma {
 	struct data_chunk sgl[1];
 
 	u32 prev_fid;
-	u32 earlycb_mode;
+	u32 low_latency_cap;
 };
 
 #define to_xvip_dma(vdev)	container_of(vdev, struct xvip_dma, video)
diff --git a/include/uapi/linux/xilinx-v4l2-controls.h b/include/uapi/linux/xilinx-v4l2-controls.h
index 61a02a326515..3c7eafcb7e1e 100644
--- a/include/uapi/linux/xilinx-v4l2-controls.h
+++ b/include/uapi/linux/xilinx-v4l2-controls.h
@@ -212,4 +212,8 @@
 
 /* Low latency mode */
 #define V4L2_CID_XILINX_LOW_LATENCY		(V4L2_CID_XILINX_VIP + 1)
+
+/* Control values to enable/disable low latency capture mode */
+#define XVIP_LOW_LATENCY_ENABLE		BIT(1)
+#define XVIP_LOW_LATENCY_DISABLE	BIT(2)
 #endif /* __UAPI_XILINX_V4L2_CONTROLS_H__ */
-- 
2.31.1

