From 3c89fdcf1b8ea0d885c997c3cd867fc4d6b29291 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Tue, 22 Sep 2020 12:24:16 -0700
Subject: [PATCH 1640/1851] v4l: xilinx: axis-switch: Fix warnings for
 NULL_RETURNS

commit ceae07561725b6390cbc7ea20c49cd19c05efea2 from
https://github.com/Xilinx/linux-xlnx.git

This patch fix the warnings for the NULL_RETURNS type.

The actual warnings are:

For xvsw_get_pad_format():
Event return_null: 	Explicitly returning null.

For xvsw_get_format():
Event returned_null: 	"xvsw_get_pad_format" returns "NULL".
Event dereference: 	Dereferencing "xvsw_get_pad_format(xvsw, cfg,
pad, fmt->which)", which is known to be "NULL".

For xvsw_set_format():
Event returned_null: 	"xvsw_get_pad_format" returns "NULL".
Event var_assigned: 	Assigning: "sinkformat" = "NULL" return value
from "xvsw_get_pad_format".
Event dereference: 	Dereferencing "sinkformat", which is known to be
"NULL".

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../platform/xilinx/xilinx-axis-switch.c      | 27 ++++++++++++++++---
 1 file changed, 23 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-axis-switch.c b/drivers/media/platform/xilinx/xilinx-axis-switch.c
index c43578cc0c47..120beb76af7b 100644
--- a/drivers/media/platform/xilinx/xilinx-axis-switch.c
+++ b/drivers/media/platform/xilinx/xilinx-axis-switch.c
@@ -129,14 +129,21 @@ xvsw_get_pad_format(struct xvswitch_device *xvsw,
 		    struct v4l2_subdev_pad_config *cfg,
 		    unsigned int pad, u32 which)
 {
+	struct v4l2_mbus_framefmt *get_fmt;
+
 	switch (which) {
 	case V4L2_SUBDEV_FORMAT_TRY:
-		return v4l2_subdev_get_try_format(&xvsw->subdev, cfg, pad);
+		get_fmt = v4l2_subdev_get_try_format(&xvsw->subdev, cfg, pad);
+		break;
 	case V4L2_SUBDEV_FORMAT_ACTIVE:
-		return &xvsw->formats[pad];
+		get_fmt = &xvsw->formats[pad];
+		break;
 	default:
-		return NULL;
+		get_fmt = NULL;
+		break;
 	}
+
+	return get_fmt;
 }
 
 static int xvsw_get_format(struct v4l2_subdev *subdev,
@@ -145,6 +152,7 @@ static int xvsw_get_format(struct v4l2_subdev *subdev,
 {
 	struct xvswitch_device *xvsw = to_xvsw(subdev);
 	int pad = fmt->pad;
+	struct v4l2_mbus_framefmt *get_fmt;
 
 	/*
 	 * If control reg routing and pad is source pad then
@@ -160,7 +168,11 @@ static int xvsw_get_format(struct v4l2_subdev *subdev,
 		}
 	}
 
-	fmt->format = *xvsw_get_pad_format(xvsw, cfg, pad, fmt->which);
+	get_fmt = xvsw_get_pad_format(xvsw, cfg, pad, fmt->which);
+	if (!get_fmt)
+		return -EINVAL;
+
+	fmt->format = *get_fmt;
 
 	return 0;
 }
@@ -199,11 +211,16 @@ static int xvsw_set_format(struct v4l2_subdev *subdev,
 
 		/* get sink pad format */
 		sinkformat = xvsw_get_pad_format(xvsw, cfg, 0, fmt->which);
+		if (!sinkformat)
+			return -EINVAL;
 
 		fmt->format = *sinkformat;
 
 		/* set sink pad format on source pad */
 		format = xvsw_get_pad_format(xvsw, cfg, fmt->pad, fmt->which);
+		if (!format)
+			return -EINVAL;
+
 		*format = *sinkformat;
 
 		return 0;
@@ -220,6 +237,8 @@ static int xvsw_set_format(struct v4l2_subdev *subdev,
 	 * In Control reg routing mode, set format only for sink pads.
 	 */
 	format = xvsw_get_pad_format(xvsw, cfg, fmt->pad, fmt->which);
+	if (!format)
+		return -EINVAL;
 
 	format->code = fmt->format.code;
 	format->width = clamp_t(unsigned int, fmt->format.width,
-- 
2.31.1

