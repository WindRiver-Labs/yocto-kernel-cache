From 5e393ed5dce19ac15477d38133b385f372e2908e Mon Sep 17 00:00:00 2001
From: Sai Pavan Boddu <sai.pavan.boddu@xilinx.com>
Date: Fri, 23 Oct 2020 18:08:50 +0530
Subject: [PATCH 1730/1852] usb: dwc3: Make dwc3 work with CONFIG_PM disabled

commit a1ef326a256c42b1ab38c6410184d453c928eb6e from
https://github.com/Xilinx/linux-xlnx.git

dwc3 needs to be compilable with CONFIG_PM disabled as mainline qemu
doesn't have any power management features in emulation.

Signed-off-by: Sai Pavan Boddu <sai.pavan.boddu@xilinx.com>
Acked-by: Manish Narani <manish.narani@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/usb/dwc3/Makefile         | 5 ++++-
 drivers/usb/dwc3/dwc3-of-simple.c | 8 ++++++++
 drivers/usb/dwc3/gadget.c         | 8 ++++++++
 3 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/dwc3/Makefile b/drivers/usb/dwc3/Makefile
index 5ec60cd8d0b5..8c460d262b0d 100644
--- a/drivers/usb/dwc3/Makefile
+++ b/drivers/usb/dwc3/Makefile
@@ -16,7 +16,10 @@ ifneq ($(filter y,$(CONFIG_USB_DWC3_HOST) $(CONFIG_USB_DWC3_DUAL_ROLE)\
 endif
 
 ifneq ($(filter y,$(CONFIG_USB_DWC3_GADGET) $(CONFIG_USB_DWC3_DUAL_ROLE) $(CONFIG_USB_DWC3_OTG)),)
-	dwc3-y				+= gadget.o ep0.o gadget_hibernation.o
+	dwc3-y				+= gadget.o ep0.o
+ifeq ($(CONFIG_PM), y)
+	dwc3-y				+= gadget_hibernation.o
+endif
 endif
 
 ifneq ($(CONFIG_USB_DWC3_OTG),)
diff --git a/drivers/usb/dwc3/dwc3-of-simple.c b/drivers/usb/dwc3/dwc3-of-simple.c
index bd9732c023d4..584469d27d26 100644
--- a/drivers/usb/dwc3/dwc3-of-simple.c
+++ b/drivers/usb/dwc3/dwc3-of-simple.c
@@ -68,7 +68,9 @@
 
 #define DWC3_OF_ADDRESS(ADDR)		((ADDR) - DWC3_GLOBALS_REGS_START)
 
+#ifdef CONFIG_PM
 static const struct zynqmp_eemi_ops *eemi_ops;
+#endif
 
 struct dwc3_of_simple {
 	struct device		*dev;
@@ -290,11 +292,13 @@ static int dwc3_of_simple_probe(struct platform_device *pdev)
 	if (!simple)
 		return -ENOMEM;
 
+#ifdef CONFIG_PM
 	eemi_ops = zynqmp_pm_get_eemi_ops();
 	if (IS_ERR(eemi_ops)) {
 		dev_err(dev, "Failed to get eemi_ops\n");
 		return PTR_ERR(eemi_ops);
 	}
+#endif
 
 	platform_set_drvdata(pdev, simple);
 	simple->dev = dev;
@@ -667,8 +671,10 @@ static int __maybe_unused dwc3_of_simple_suspend(struct device *dev)
 	struct dwc3_of_simple *simple = dev_get_drvdata(dev);
 
 	if (!simple->wakeup_capable && !simple->dwc->is_d3) {
+#ifdef CONFIG_PM
 		/* Ask ULPI to turn OFF Vbus */
 		dwc3_simple_vbus(simple->dwc, true);
+#endif
 
 		/* Disable the clocks */
 		clk_bulk_disable(simple->num_clocks, simple->clks);
@@ -695,8 +701,10 @@ static int __maybe_unused dwc3_of_simple_resume(struct device *dev)
 	if (simple->need_reset)
 		reset_control_deassert(simple->resets);
 
+#ifdef CONFIG_PM
 	/* Ask ULPI to turn ON Vbus */
 	dwc3_simple_vbus(simple->dwc, false);
+#endif
 
 	return 0;
 }
diff --git a/drivers/usb/dwc3/gadget.c b/drivers/usb/dwc3/gadget.c
index fedaff3ff7ee..0046843f8bb5 100644
--- a/drivers/usb/dwc3/gadget.c
+++ b/drivers/usb/dwc3/gadget.c
@@ -1510,9 +1510,11 @@ static int __dwc3_gadget_ep_queue(struct dwc3_ep *dep, struct dwc3_request *req)
 
 	/* If core is hibernated, need to wakeup (remote wakeup) */
 	if (dwc->is_hibernated) {
+#ifdef CONFIG_PM
 		dwc->force_hiber_wake = true;
 		gadget_wakeup_interrupt(dwc);
 		dwc->force_hiber_wake = false;
+#endif
 	}
 
 	/*
@@ -3177,12 +3179,14 @@ static void dwc3_gadget_wakeup_interrupt(struct dwc3 *dwc)
 
 static irqreturn_t wakeup_interrupt(int irq, void *_dwc)
 {
+#ifdef CONFIG_PM
 	struct dwc3 *dwc = (struct dwc3 *)_dwc;
 
 	spin_lock(&dwc->lock);
 	gadget_wakeup_interrupt(dwc);
 	spin_unlock(&dwc->lock);
 
+#endif
 	return IRQ_HANDLED;
 }
 
@@ -3317,8 +3321,10 @@ static void dwc3_gadget_hibernation_interrupt(struct dwc3 *dwc,
 	    (!(dwc->has_hibernation)))
 		return;
 
+#ifdef CONFIG_PM
 	/* enter hibernation here */
 	gadget_hibernation_interrupt(dwc);
+#endif
 }
 
 static void dwc3_gadget_interrupt(struct dwc3 *dwc,
@@ -3704,9 +3710,11 @@ int dwc3_gadget_suspend(struct dwc3 *dwc)
 		 * As we are about to suspend, wake the controller from
 		 * D3 & hibernation states
 		 */
+#ifdef CONFIG_PM
 		dwc->force_hiber_wake = true;
 		gadget_wakeup_interrupt(dwc);
 		dwc->force_hiber_wake = false;
+#endif
 	}
 
 	dwc3_gadget_run_stop(dwc, false, false);
-- 
2.31.1

