From d95fc39535e6e5937661aae2bd88dbf546634612 Mon Sep 17 00:00:00 2001
From: Felix Manlunas <fmanlunas@marvell.com>
Date: Thu, 17 Oct 2019 10:02:08 -0700
Subject: [PATCH 0301/1921] octeontx2-pf: Fix wrong info in ethtool's list of
 supported link modes

In otx2_get_link_mode_info(), the signed integer literal "1" is left-
shifted by a value obtained by the table lookup
"cgx_link_mode[bit_position]".  The result is then implicitly promoted from
signed int to u64 before it gets bitwise-ORed and assigned to
"ethtool_link_mode" (whose type is u64).

This is problematic if the result of the table lookup (which is used as the
number of bit positions to left shift) is greater than or equal to 31 (one
less than the bitwidth of an int).  Such a situation will lead to a wrong
value for "ethtool_link_mode", causing ethtool to show wrong or incomplete
information in the list of supported link modes.

Fix it by adding the "ULL" suffix to "1".

Change-Id: I411befd4ad23df2566bf5e9cd6141faeeb53a26c
Signed-off-by: Felix Manlunas <fmanlunas@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/17524
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
(cherry picked from commit 8b1d4774140e9b1ff99a49e2b6ab8b610631c2e9)
Reviewed-on: https://sj1git1.cavium.com/17537
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
index ba26b99ff778..085169db08c2 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
@@ -997,7 +997,7 @@ static void otx2_get_link_mode_info(u64 index, int mode,
 		if (bit_position ==  0)
 			ethtool_link_mode = 0x3F;
 
-		ethtool_link_mode |= 1 << cgx_link_mode[bit_position];
+		ethtool_link_mode |= 1ULL << cgx_link_mode[bit_position];
 		if (mode)
 			*link_ksettings->link_modes.advertising |=
 							ethtool_link_mode;
-- 
2.31.1

