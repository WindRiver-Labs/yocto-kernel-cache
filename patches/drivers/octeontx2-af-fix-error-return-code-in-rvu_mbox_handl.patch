From eb9477bb5239f85f30654623edaea37dfc975734 Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveenm@marvell.com>
Date: Sat, 15 May 2021 12:50:24 +0530
Subject: [PATCH 10/23] octeontx2-af: fix error return code in
 rvu_mbox_handler_set_vf_perm

commit c419cda0e1218833f11bfb1259bd23e3e7f582b3 from
git@git.assembla.com:cavium/WindRiver.linux.git

Fix to return success from rvu_mbox_handler_set_vf_perm() when the
NIXLF is not attached. This happens when PF driver disables VF trust
during reboot where VF driver is unloaded first & when VF is bind
to vfio-pci driver and SR-IOV is disabled by PF.

Change-Id: I26afb3b036c775fdbbfaed9d7b91a44aa5d14d6d
Fixes: efeb72a0cd70 ("octeontx2-af: Add multicast/promisc packet replication table")
Signed-off-by: Naveen Mamindlapalli <naveenm@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/51951
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
Tested-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/52282
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/af/rvu.c | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index ad9b8d1e2280..a53b9f348323 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -2048,21 +2048,20 @@ int rvu_mbox_handler_set_vf_perm(struct rvu *rvu, struct set_vf_perm *req,
 	target = (pcifunc & ~RVU_PFVF_FUNC_MASK) | (req->vf + 1);
 	pfvf = rvu_get_pfvf(rvu, target);
 
-	blkaddr = rvu_get_blkaddr(rvu, BLKTYPE_NIX, target);
-	if (blkaddr < 0)
-		return NPA_AF_ERR_AF_LF_INVALID;
-
-	nixlf = rvu_get_lf(rvu, &hw->block[blkaddr], pcifunc, 0);
-	if (nixlf < 0)
-		return NPA_AF_ERR_AF_LF_INVALID;
-
 	if (req->flags & RESET_VF_PERM)
 		pfvf->flags &= RVU_CLEAR_VF_PERM;
 	else if (test_bit(PF_SET_VF_TRUSTED, &pfvf->flags) ^
 		 (req->flags & VF_TRUSTED)) {
 		change_bit(PF_SET_VF_TRUSTED, &pfvf->flags);
+		/* disable multicast and promisc entries */
 		if (!test_bit(PF_SET_VF_TRUSTED, &pfvf->flags)) {
-			/* Delete multicast and promisc MCAM entries */
+			blkaddr = rvu_get_blkaddr(rvu, BLKTYPE_NIX, target);
+			if (blkaddr < 0)
+				return 0;
+			nixlf = rvu_get_lf(rvu, &hw->block[blkaddr],
+					   target, 0);
+			if (nixlf < 0)
+				return 0;
 			npc_enadis_default_mce_entry(rvu, target, nixlf,
 						     NIXLF_ALLMULTI_ENTRY,
 						     false);
-- 
2.31.1

