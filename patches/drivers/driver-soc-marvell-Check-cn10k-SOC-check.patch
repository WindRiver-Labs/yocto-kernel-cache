From d33569cc820bbef49c837c3aa12fa63b13704516 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <Chandrakala.Chavva@cavium.com>
Date: Thu, 29 Jul 2021 00:33:36 -0700
Subject: [PATCH 1667/1921] driver: soc: marvell: Check cn10k SOC check

The UUID is same for all Octeon SOCs, check CPU ID to eenable
the drivers specific to cn10k platform

Signed-off-by: Chandrakala Chavva <Chandrakala.Chavva@cavium.com>
Change-Id: Ia0bcd70f2dd2ef0bd15a96a2d6ab092a52f9736f
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/57520
Reviewed-by: Damian Eppel <deppel@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 drivers/soc/marvell/cn10k-rpram.c             |  8 +++----
 drivers/soc/marvell/cn10ka-swup/mrvl_swup.c   |  6 ++---
 drivers/soc/marvell/marvell_mac_mgmt.c        | 23 +++++++++----------
 .../marvell/octeontx2-serdes/serdes_debugfs.c | 16 +++----------
 drivers/soc/marvell/phy_diag.c                |  4 ++--
 include/soc/marvell/octeontx/octeontx_smc.h   | 10 +++++++-
 6 files changed, 32 insertions(+), 35 deletions(-)

diff --git a/drivers/soc/marvell/cn10k-rpram.c b/drivers/soc/marvell/cn10k-rpram.c
index f00350e54b4b..5828989d9829 100644
--- a/drivers/soc/marvell/cn10k-rpram.c
+++ b/drivers/soc/marvell/cn10k-rpram.c
@@ -147,10 +147,10 @@ static int __init cn10k_rpram_init(void)
 	int ret;
 
 	ret = octeontx_soc_check_smc();
-	if (ret) {
-		pr_info("%s: UIID SVC doesn't match Marvell CN10k.\n",
-			module_name(THIS_MODULE));
-		return ret;
+
+	if (ret != 2) {
+		pr_info("%s: Not supported\n", __func__);
+		return -EPERM;
 	}
 
 	parent = of_find_node_by_path("/reserved-memory");
diff --git a/drivers/soc/marvell/cn10ka-swup/mrvl_swup.c b/drivers/soc/marvell/cn10ka-swup/mrvl_swup.c
index bcab02d7b9dc..2d5d90e2ff6c 100644
--- a/drivers/soc/marvell/cn10ka-swup/mrvl_swup.c
+++ b/drivers/soc/marvell/cn10ka-swup/mrvl_swup.c
@@ -317,9 +317,9 @@ static int __init mrvl_swup_init(void)
 	int i, ret;
 
 	ret = octeontx_soc_check_smc();
-	if (ret) {
-		pr_err("SMC signature doesn't match OcteonTX. Failed to create device\n");
-		return ret;
+	if (ret != 2) {
+		pr_info("%s: Not supported\n", __func__);
+		return -EPERM;
 	}
 
 	dev_set_name(&dev, "mrvl_swup_dev");
diff --git a/drivers/soc/marvell/marvell_mac_mgmt.c b/drivers/soc/marvell/marvell_mac_mgmt.c
index 9465ebae42f3..32b09aa94aab 100644
--- a/drivers/soc/marvell/marvell_mac_mgmt.c
+++ b/drivers/soc/marvell/marvell_mac_mgmt.c
@@ -91,7 +91,7 @@ static ssize_t mac_mgmt_parse_buffer(const char *buffer, size_t n,
 	minfo->index = index;
 	minfo->s.mac_addr = mac_addr & 0xffffffffffff;
 
-	pr_debug("%s: Idx: %u, addr: %llx\n", module_name(THIS_MODULE),
+	pr_debug("%s: Idx: %u, addr: %llx\n", __func__,
 		 minfo->index, minfo->s.mac_addr);
 
 	return n;
@@ -133,7 +133,7 @@ static ssize_t mac_mgmt_write(struct file *filp, const char __user *buffer,
 
 	bytes = mac_mgmt_parse_buffer(mac_text_data, cnt, &minfo);
 	if (bytes < 0) {
-		pr_warn("%s: Invalid text format!\n", module_name(THIS_MODULE));
+		pr_warn("%s: Invalid text format!\n", __func__);
 		ret = bytes;
 		goto done;
 	}
@@ -141,7 +141,7 @@ static ssize_t mac_mgmt_write(struct file *filp, const char __user *buffer,
 	ret = mac_mgmt_set_addr(&minfo);
 	if (!ret)
 		pr_info("%s: MAC addresses has been updated, change takes effect after reboot\n",
-			module_name(THIS_MODULE));
+			__func__);
 done:
 	kfree(mac_text_data);
 	return ret ? ret : bytes;
@@ -216,21 +216,20 @@ static int mac_mgmt_setup_debugfs(void)
 	return 0;
 }
 
-static int __init mac_mgmt_init(void)
+static int __init cn10k_mac_mgmt_init(void)
 {
 	int ret;
 
 	ret = octeontx_soc_check_smc();
-	if (ret) {
-		pr_info("%s: UIID SVC doesn't match Marvell CN10k.\n",
-			module_name(THIS_MODULE));
-		return ret;
+	if (ret != 2) {
+		pr_info("%s: Not supported\n", __func__);
+		return -EPERM;
 	}
 
 	ret = mac_mgmt_setup_debugfs();
 	if (ret) {
 		pr_err("%s: Can't create debugfs entries! (%d)\n",
-		       module_name(THIS_MODULE), ret);
+			__func__, ret);
 		return ret;
 	}
 
@@ -239,13 +238,13 @@ static int __init mac_mgmt_init(void)
 	return 0;
 }
 
-static void __exit mac_mgmt_exit(void)
+static void __exit cn10k_mac_mgmt_exit(void)
 {
 	debugfs_remove_recursive(mac_dbgfs_root);
 }
 
-module_init(mac_mgmt_init);
-module_exit(mac_mgmt_exit);
+module_init(cn10k_mac_mgmt_init);
+module_exit(cn10k_mac_mgmt_exit);
 
 MODULE_AUTHOR("Wojciech Bartczak <wbartczak@marvell.com>");
 MODULE_DESCRIPTION("MAC address management for Marvell CN10K");
diff --git a/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c b/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
index da32e3005b88..156a23760b9d 100644
--- a/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
+++ b/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
@@ -32,14 +32,6 @@ MODULE_LICENSE("GPL v2");
 #define OCTEONTX_SERDES_DBG_SET_TUNE	0xc2000d08
 #define OCTEONTX_SERDES_DBG_SET_LOOP	0xc2000d09
 
-/* This is expected OcteonTX response for SVC UID command */
-static const int octeontx_svc_uuid[] = {
-	0x6ff498cf,
-	0x5a4e9cfa,
-	0x2f2a3aa4,
-	0x5945b105,
-};
-
 #define MAX_LMAC_PER_CGX		4
 
 #define OCTEONTX_SMC_PENDING		0x1
@@ -942,11 +934,9 @@ static int serdes_dbg_init(void)
 	 * Compare response for standard SVC_UID commandi with OcteonTX UUID.
 	 * Continue only if it is OcteonTX.
 	 */
-	arm_smccc_smc(ARM_SMC_SVC_UID, 0, 0, 0, 0, 0, 0, 0, &res);
-	if (res.a0 != octeontx_svc_uuid[0] || res.a1 != octeontx_svc_uuid[1] ||
-	    res.a2 != octeontx_svc_uuid[2] || res.a3 != octeontx_svc_uuid[3]) {
-		pr_info("UIID SVC doesn't match OcteonTX. No serdes cmds.\n");
-		return 0;
+	if (octeontx_soc_check_smc() != 0)
+		pr_info("OcteonTX2 serdes diagnostics not support\n");
+		return -EPERM;
 	}
 
 	arm_smccc_smc(OCTEONTX_SERDES_DBG_GET_MEM, 0, 0, 0, 0, 0, 0, 0, &res);
diff --git a/drivers/soc/marvell/phy_diag.c b/drivers/soc/marvell/phy_diag.c
index 5498221f5d38..15d7c21a636d 100644
--- a/drivers/soc/marvell/phy_diag.c
+++ b/drivers/soc/marvell/phy_diag.c
@@ -634,8 +634,8 @@ static int phy_dbg_setup_debugfs(void)
 
 static int __init phy_dbg_init(void)
 {
-	if (octeontx_soc_check_smc()) {
-		pr_err("SMC signature doesn't match OcteonTX\n");
+	if (octeontx_soc_check_smc() < 0) {
+		pr_info("PHY diagnostics: Not supported\n");
 		return -EPERM;
 	}
 
diff --git a/include/soc/marvell/octeontx/octeontx_smc.h b/include/soc/marvell/octeontx/octeontx_smc.h
index 2e5b7bdff899..cdd318ec2e7c 100644
--- a/include/soc/marvell/octeontx/octeontx_smc.h
+++ b/include/soc/marvell/octeontx/octeontx_smc.h
@@ -10,6 +10,7 @@
 
 #include <linux/errno.h>
 #include <linux/arm-smccc.h>
+#include <asm/cputype.h>
 
 /* Data and defines for SMC call */
 #define OCTEONTX_ARM_SMC_SVC_UID			0xc200ff01
@@ -19,11 +20,15 @@
  *
  * The call verifies ATF instance running on the system.
  *
- * @return 0 for success, error code otherwise
+ * @return
+ *	0 (T9x) and 2 (cn10k) on success
+ *	error code on failure
  *
  */
 static inline int octeontx_soc_check_smc(void)
 {
+#define CPU_MODEL_CN10KX_PART	0xd49
+
 	const int octeontx_svc_uuid[] = {
 		0x6ff498cf,
 		0x5a4e9cfa,
@@ -39,6 +44,9 @@ static inline int octeontx_soc_check_smc(void)
 	    res.a2 != octeontx_svc_uuid[2] || res.a3 != octeontx_svc_uuid[3])
 		return -EPERM;
 
+	if (MIDR_PARTNUM(read_cpuid_id()) == CPU_MODEL_CN10KX_PART)
+		return 2;
+
 	return 0;
 }
 
-- 
2.31.1

