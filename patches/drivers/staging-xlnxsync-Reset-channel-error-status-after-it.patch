From 5c644e5a472e94f10c9d3d37df913c589515f87b Mon Sep 17 00:00:00 2001
From: Devarsh Thakkar <devarsh.thakkar@xilinx.com>
Date: Tue, 6 Oct 2020 09:38:08 -0700
Subject: [PATCH 1708/1852] staging: xlnxsync: Reset channel error status after
 it is read

commit fb68fb67d596cf283aafcac35987937550d8d3e7 from
https://github.com/Xilinx/linux-xlnx.git

Clear channel error status after it is read by the application.
The driver will not wait for application to clear it, instead once
it is read by application, it will reset it and then try to capture
new error status if any for subsequent frames and will be sending the
new status to application in the next channel status read.

The application needs to maintain the error status in it's context
for all the unresolved errors until they are resolved or become obsolete.

Signed-off-by: Devarsh Thakkar <devarsh.thakkar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/staging/xlnxsync/xlnxsync.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/staging/xlnxsync/xlnxsync.c b/drivers/staging/xlnxsync/xlnxsync.c
index 5b0f66e44f40..23538451a885 100644
--- a/drivers/staging/xlnxsync/xlnxsync.c
+++ b/drivers/staging/xlnxsync/xlnxsync.c
@@ -559,9 +559,18 @@ static int xlnxsync_chan_get_status(struct xlnxsync_channel *channel,
 	status.hdr_ver = XLNXSYNC_IOCTL_HDR_VER;
 
 	ret = copy_to_user(arg, &status, sizeof(status));
-	if (ret)
+	if (ret) {
 		dev_err(dev->dev, "%s: failed to copy result data to user\n",
 			__func__);
+	} else {
+		channel->prod_sync_err = 0;
+		channel->prod_wdg_err = 0;
+		channel->cons_sync_err = 0;
+		channel->cons_wdg_err = 0;
+		channel->ldiff_err = 0;
+		channel->cdiff_err = 0;
+	}
+
 	return ret;
 }
 
-- 
2.31.1

