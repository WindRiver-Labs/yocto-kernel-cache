From a55d3f134db61183f393290741ca819a1631168d Mon Sep 17 00:00:00 2001
From: Linu Cherian <lcherian@marvell.com>
Date: Wed, 13 Mar 2019 06:44:15 +0530
Subject: [PATCH 090/767] Revert "octeontx2-af: Get PF macaddress from
 firmware"

commit a73dfc390730978baf150cac4757dc9d4d430788 from
git@git.assembla.com:cavium/WindRiver.linux.git

This reverts commit 73540f1689c61bd83704857568ab436421fb122a.

Change-Id: I0d919bd789ef3d8f311c62b2914d8298f7c160f9
Signed-off-by: Linu Cherian <lcherian@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/cgx.c   | 29 -------------------
 .../net/ethernet/marvell/octeontx2/af/cgx.h   |  1 -
 .../ethernet/marvell/octeontx2/af/rvu_cgx.c   |  6 ----
 3 files changed, 36 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
index f19d3fc25c2e..9bc51df150fc 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/cgx.c
@@ -72,7 +72,6 @@ static char *cgx_lmactype_string[LMAC_MODE_MAX];
 
 /* CGX PHY management internal APIs */
 static int cgx_fwi_link_change(struct cgx *cgx, int lmac_id, bool en);
-static int cgx_fwi_get_macaddr(struct cgx *cgx, int lmac_id, u8 *dst);
 
 /* Supported devices */
 static const struct pci_device_id cgx_id_table[] = {
@@ -198,18 +197,6 @@ u64 cgx_lmac_addr_get(u8 cgx_id, u8 lmac_id)
 }
 EXPORT_SYMBOL(cgx_lmac_addr_get);
 
-/* Gets mac address from firmware for each cgx mapped PF */
-int cgx_get_pfmacaddr(void *cgxd, u8 lmac_id, u8 *macdst)
-{
-	struct cgx *cgx = cgxd;
-
-	if (!cgx || lmac_id >= cgx->lmac_count)
-		return -ENODEV;
-
-	return cgx_fwi_get_macaddr(cgx, lmac_id, macdst);
-}
-EXPORT_SYMBOL(cgx_get_pfmacaddr);
-
 int cgx_set_pkind(void *cgxd, u8 lmac_id, int pkind)
 {
 	struct cgx *cgx = cgxd;
@@ -805,22 +792,6 @@ int cgx_lmac_evh_unregister(void *cgxd, int lmac_id)
 }
 EXPORT_SYMBOL(cgx_lmac_evh_unregister);
 
-static int cgx_fwi_get_macaddr(struct cgx *cgx, int lmac_id, u8 *dst)
-{
-	u64 req = 0, resp, mac;
-	int err;
-
-	req = FIELD_SET(CMDREG_ID, CGX_CMD_GET_MAC_ADDR, req);
-
-	err = cgx_fwi_cmd_generic(req, &resp, cgx, lmac_id);
-	if (!err) {
-		mac = FIELD_GET(RESP_MAC_ADDR, resp);
-		memcpy(dst, (u8 *)&mac, 6);
-	}
-
-	return err;
-}
-
 static int cgx_fwi_link_change(struct cgx *cgx, int lmac_id, bool enable)
 {
 	u64 req = 0;
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/cgx.h b/drivers/net/ethernet/marvell/octeontx2/af/cgx.h
index 2b59f049abf0..8fff5a913f13 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/cgx.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/cgx.h
@@ -121,7 +121,6 @@ int cgx_lmac_rx_tx_enable(void *cgxd, int lmac_id, bool enable);
 int cgx_lmac_tx_enable(void *cgxd, int lmac_id, bool enable);
 int cgx_lmac_addr_set(u8 cgx_id, u8 lmac_id, u8 *mac_addr);
 u64 cgx_lmac_addr_get(u8 cgx_id, u8 lmac_id);
-int cgx_get_pfmacaddr(void *cgxd, u8 lmac_id, u8 *macdst);
 void cgx_lmac_promisc_config(int cgx_id, int lmac_id, bool enable);
 void cgx_lmac_enadis_rx_pause_fwding(void *cgxd, int lmac_id, bool enable);
 int cgx_lmac_internal_loopback(void *cgxd, int lmac_id, bool enable);
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c
index 3cad4c1ef965..4046598b07bb 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_cgx.c
@@ -99,12 +99,6 @@ static int rvu_map_cgx_lmac_pf(struct rvu *rvu)
 		for (lmac = 0; lmac < lmac_cnt; lmac++, pf++) {
 			rvu->pf2cgxlmac_map[pf] = cgxlmac_id_to_bmap(cgx, lmac);
 			rvu->cgxlmac2pf_map[CGX_OFFSET(cgx) + lmac] = 1 << pf;
-			/* Get mac address for the CGX mapped PF */
-			if (cgx_get_pfmacaddr(rvu_cgx_pdata(cgx, rvu), lmac,
-					  rvu->pf[pf].mac_addr))
-				dev_dbg(rvu->dev,
-					"pf %d: Failed to get MAC from firmware\n",
-					pf);
 			free_pkind = rvu_alloc_rsrc(&pkind->rsrc);
 			pkind->pfchan_map[free_pkind] = ((pf) & 0x3F) << 16;
 			rvu->cgx_mapped_pfs++;
-- 
2.31.1

