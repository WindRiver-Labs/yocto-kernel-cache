From ef8754f91d49597a7d249626766101d7014ec8a1 Mon Sep 17 00:00:00 2001
From: Ang Tien Sung <tien.sung.ang@intel.com>
Date: Mon, 22 Nov 2021 09:02:00 +0800
Subject: [PATCH 13/20] HSD #1509974402: firmware: stratix10-svc: To support a
 new SMC command to return ATF version

commit 34dad8af1ac86cd4b418c252e20e4bbf271c2450 from
https://github.com/altera-opensource/linux-socfpga/commits/socfpga-5.4.124-lts

We are to support a new SMC Command of hexadecimal 0x200 that returns the
ATF Firmware major and minor version.

Signed-off-by: Ang Tien Sung <tien.sung.ang@intel.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/firmware/stratix10-svc.c               | 18 +++++++++++++++---
 include/linux/firmware/intel/stratix10-smc.h   | 17 +++++++++++++++++
 .../firmware/intel/stratix10-svc-client.h      |  5 +++++
 3 files changed, 37 insertions(+), 3 deletions(-)

diff --git a/drivers/firmware/stratix10-svc.c b/drivers/firmware/stratix10-svc.c
index 03a0e9acda9d..35926a774434 100644
--- a/drivers/firmware/stratix10-svc.c
+++ b/drivers/firmware/stratix10-svc.c
@@ -362,6 +362,11 @@ static void svc_thread_recv_status_ok(struct stratix10_svc_data *p_data,
 		cb_data->status = BIT(SVC_STATUS_OK);
 		cb_data->kaddr1 = &res.a1;
 		break;
+	case COMMAND_SMC_SVC_VERSION:
+		cb_data->status = BIT(SVC_STATUS_OK);
+		cb_data->kaddr1 = &res.a1;
+		cb_data->kaddr2 = &res.a2;
+		break;
 	case COMMAND_RSU_DCMF_VERSION:
 		cb_data->status = BIT(SVC_STATUS_OK);
 		cb_data->kaddr1 = &res.a1;
@@ -411,7 +416,8 @@ static void svc_thread_recv_status_ok(struct stratix10_svc_data *p_data,
 	}
 
 	pr_debug("%s: call receive_cb\n", __func__);
-	p_data->chan->scl->receive_cb(p_data->chan->scl, cb_data);
+	if (p_data->chan->scl->receive_cb)
+		p_data->chan->scl->receive_cb(p_data->chan->scl, cb_data);
 }
 
 /**
@@ -650,7 +656,7 @@ static int svc_normal_to_secure_thread(void *data)
 			a1 = pdata->arg[0];
 			a2 = pdata->arg[1];
 			a3 = (unsigned long)pdata->paddr_output;
-                        a4 = (unsigned long)pdata->size_output;
+			a4 = (unsigned long)pdata->size_output;
 			break;
 		case COMMAND_FCS_CRYPTO_AES_CRYPT_INIT:
 			a0 = INTEL_SIP_SMC_FCS_AES_CRYPTO_INIT;
@@ -834,6 +840,11 @@ static int svc_normal_to_secure_thread(void *data)
 			a1 = 0;
 			a2 = 0;
 			break;
+		case COMMAND_SMC_SVC_VERSION:
+			a0 = INTEL_SIP_SMC_SVC_VERSION;
+			a1 = 0;
+			a2 = 0;
+			break;
 		case COMMAND_FCS_GET_ROM_PATCH_SHA384:
 			a0 = INTEL_SIP_SMC_FCS_GET_ROM_PATCH_SHA384;
 			a1 = (unsigned long)pdata->paddr;
@@ -983,7 +994,8 @@ static int svc_normal_to_secure_thread(void *data)
 			cbdata->kaddr1 = NULL;
 			cbdata->kaddr2 = NULL;
 			cbdata->kaddr3 = NULL;
-			pdata->chan->scl->receive_cb(pdata->chan->scl, cbdata);
+			if (pdata->chan->scl->receive_cb)
+				pdata->chan->scl->receive_cb(pdata->chan->scl, cbdata);
 			break;
 
 		}
diff --git a/include/linux/firmware/intel/stratix10-smc.h b/include/linux/firmware/intel/stratix10-smc.h
index b9e525724596..4483a9b64907 100644
--- a/include/linux/firmware/intel/stratix10-smc.h
+++ b/include/linux/firmware/intel/stratix10-smc.h
@@ -1423,4 +1423,21 @@ INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_FUNCID_FPGA_CONFIG_COMPLETED_WRITE)
 #define INTEL_SIP_SMC_FCS_CRYPTION_EXT \
         INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_FUNCID_FCS_CRYPTION_EXT)
 
+/**
+ * Request INTEL_SIP_SMC_SVC_VERSION
+ *
+ * Sync call used to query the SIP SMC API Version
+ *
+ * Call register usage:
+ * a0 INTEL_SIP_SMC_SVC_VERSION
+ * a1-a7 not used
+ *
+ * Return status:
+ * a0 INTEL_SIP_SMC_STATUS_OK
+ * a1 Major
+ * a2 Minor
+ */
+#define INTEL_SIP_SMC_SVC_FUNCID_VERSION 512
+#define INTEL_SIP_SMC_SVC_VERSION \
+		INTEL_SIP_SMC_FAST_CALL_VAL(INTEL_SIP_SMC_SVC_FUNCID_VERSION)
 #endif
diff --git a/include/linux/firmware/intel/stratix10-svc-client.h b/include/linux/firmware/intel/stratix10-svc-client.h
index 46f39edf01a0..99cd38639922 100644
--- a/include/linux/firmware/intel/stratix10-svc-client.h
+++ b/include/linux/firmware/intel/stratix10-svc-client.h
@@ -228,6 +228,9 @@ struct stratix10_svc_chan;
  *
  * @COMMAND_FCS_SDOS_DATA_EXT: extend SDOS data encryption & decryption,
  * return status is SVC_STATUS_OK or SVC_STATUS_ERROR
+ *
+ * @COMMAND_SMC_SVC_VERSION: Non-mailbox SMC SVC API Version,
+ * return status is SVC_STATUS_OK
  */
 enum stratix10_svc_command_code {
 	/* for FPGA */
@@ -294,6 +297,8 @@ enum stratix10_svc_command_code {
 	COMMAND_FCS_CRYPTO_ECDH_REQUEST_FINALIZE,
 	COMMAND_FCS_RANDOM_NUMBER_GEN_EXT,
 	COMMAND_FCS_SDOS_DATA_EXT,
+	/* Non-mailbox SMC Call*/
+	COMMAND_SMC_SVC_VERSION = 200,
 };
 
 /**
-- 
2.31.1

