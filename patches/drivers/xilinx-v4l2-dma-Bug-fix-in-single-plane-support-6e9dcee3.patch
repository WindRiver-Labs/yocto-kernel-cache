From 14c3cff241202ecd5e6b1c2a868967434904e262 Mon Sep 17 00:00:00 2001
From: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Date: Fri, 23 Mar 2018 14:24:13 -0700
Subject: [PATCH 0336/1851] xilinx: v4l2: dma: Bug fix in single plane support

commit ff1405bafa76a4bdbf9b96bc594677ed4d1bdc69 from
https://github.com/Xilinx/linux-xlnx.git

This patch fixes bugs in single plane handling.
 a. Passing v4l2 pixel format to framebuffer driver
 b. Making dst_icg is zero, though it does not matter
    in case of single plane formats
 c. Correcting bytes per line for single plane 10 bit
    formats

Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index 59fca8dc4d26..2c0bf07f2147 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -495,6 +495,7 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 		struct v4l2_pix_format *pix;
 
 		pix = &dma->format.fmt.pix;
+		xilinx_xdma_v4l2_config(dma->dma, pix->pixelformat);
 		xvip_width_padding_factor(pix->pixelformat,
 					  &padding_factor_nume,
 					  &padding_factor_deno);
@@ -506,7 +507,7 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 				    (padding_factor_deno * bpl_deno);
 		dma->sgl[0].icg = pix->bytesperline - dma->sgl[0].size;
 		dma->xt.numf = pix->height;
-		dma->sgl[0].dst_icg = dma->sgl[0].size;
+		dma->sgl[0].dst_icg = 0;
 	}
 
 	desc = dmaengine_prep_interleaved_dma(dma->dma, &dma->xt, flags);
@@ -857,7 +858,10 @@ __xvip_dma_try_format(struct xvip_dma *dma,
 		pix->height = clamp(pix->height, XVIP_DMA_MIN_HEIGHT,
 				    XVIP_DMA_MAX_HEIGHT);
 
-		min_bpl = pix->width * info->bpl_factor;
+		min_bpl = (pix->width * info->bpl_factor *
+			  padding_factor_nume * bpl_nume) /
+			  (padding_factor_deno * bpl_deno);
+		min_bpl = roundup(min_bpl, dma->align);
 		max_bpl = rounddown(XVIP_DMA_MAX_WIDTH, dma->align);
 		bpl = rounddown(pix->bytesperline, dma->align);
 		pix->bytesperline = clamp(bpl, min_bpl, max_bpl);
-- 
2.31.1

