From 7c22b3779f00357db50c7ef54763927c714d1933 Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Wed, 17 Jun 2020 16:44:14 +0530
Subject: [PATCH 1390/1851] mtd: spi-nor: Fix wrong cr value in
 write_sr_modify_protection

commit d214837c292ed328aca16864db2521a959ca926d from
https://github.com/Xilinx/linux-xlnx.git

The root cause of this issue is because that the wrong value zero is
written to cr register, the QUAD bit in cr registe is cleared, so the
flash s25fl128s0 in zc706 changes mode from QUAD to DUAL, and then the
read and write operations are in an abonormal state.

This patch fixes the issue by not clearing the QUAD bit in cr register.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 0ab24efc3fc7..f3ee53e2b845 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -1604,7 +1604,7 @@ static int write_sr_modify_protection(struct spi_nor *nor, u8 status,
 
 	/* For spansion flashes */
 	if (nor->jedec_id == CFI_MFR_AMD) {
-		val[1] = read_cr(nor) << 8;
+		val[1] = read_cr(nor);
 		val[0] |= status_new;
 		if (write_sr_cr(nor, val) < 0)
 			return 1;
-- 
2.31.1

