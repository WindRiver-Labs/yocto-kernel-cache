From a7ce6e14d9cc8baf7f9439272e3d49c0d968a953 Mon Sep 17 00:00:00 2001
From: Hyun Kwon <hyun.kwon@xilinx.com>
Date: Thu, 7 May 2020 12:34:08 -0700
Subject: [PATCH 1362/1851] drm: xlnx: fb: Guard with
 CONFIG_DRM_FBDEV_EMULATION

commit 5205e07772c8cec3a45098762ef31f33fbf5046b from
https://github.com/Xilinx/linux-xlnx.git

The fbdev emulation is optional, but the xlnx_fb fails to build
when CONFIG_DRM_FBDEV_EMULATION is disabled.

   drivers/gpu/drm/xlnx/xlnx_fb.c: In function 'xlnx_fbdev_defio_fini':
>> drivers/gpu/drm/xlnx/xlnx_fb.c:298:10: error: 'struct fb_info' has no member named 'fbdefio'
     298 |  if (!fbi->fbdefio)
         |          ^~
   drivers/gpu/drm/xlnx/xlnx_fb.c:302:11: error: 'struct fb_info' has no member named 'fbdefio'
     302 |  kfree(fbi->fbdefio);
         |           ^~

Disable some fbdev only functions using #ifdef CONFIG_DRM_FBDEV_EMULATION,
and move functions to re-group.

While at it remove one unused macro, XLNX_MAX_PLANES.

Reported-by: kbuild test robot <lkp@intel.com>
Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
Tested-by: Dylan Yip <dylan.yip@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_fb.c | 54 ++++++++++++++++++----------------
 drivers/gpu/drm/xlnx/xlnx_fb.h | 19 ++++++++++++
 2 files changed, 47 insertions(+), 26 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_fb.c b/drivers/gpu/drm/xlnx/xlnx_fb.c
index 520b9cf271a6..e5d86bfd2280 100644
--- a/drivers/gpu/drm/xlnx/xlnx_fb.c
+++ b/drivers/gpu/drm/xlnx/xlnx_fb.c
@@ -31,7 +31,33 @@
 #include "xlnx_drv.h"
 #include "xlnx_fb.h"
 
-#define XLNX_MAX_PLANES	4
+static struct drm_framebuffer_funcs xlnx_fb_funcs = {
+	.destroy	= drm_gem_fb_destroy,
+	.create_handle	= drm_gem_fb_create_handle,
+};
+
+/**
+ * xlnx_fb_create - (struct drm_mode_config_funcs *)->fb_create callback
+ * @drm: DRM device
+ * @file_priv: drm file private data
+ * @mode_cmd: mode command for fb creation
+ *
+ * This functions creates a drm_framebuffer with xlnx_fb_funcs for given mode
+ * @mode_cmd. This functions is intended to be used for the fb_create callback
+ * function of drm_mode_config_funcs.
+ *
+ * Return: a drm_framebuffer object if successful, or
+ * ERR_PTR from drm_gem_fb_create_with_funcs().
+ */
+struct drm_framebuffer *
+xlnx_fb_create(struct drm_device *drm, struct drm_file *file_priv,
+	       const struct drm_mode_fb_cmd2 *mode_cmd)
+{
+	return drm_gem_fb_create_with_funcs(drm, file_priv, mode_cmd,
+					    &xlnx_fb_funcs);
+}
+
+#ifdef CONFIG_DRM_FBDEV_EMULATION
 
 struct xlnx_fbdev {
 	struct drm_fb_helper fb_helper;
@@ -45,11 +71,6 @@ static inline struct xlnx_fbdev *to_fbdev(struct drm_fb_helper *fb_helper)
 	return container_of(fb_helper, struct xlnx_fbdev, fb_helper);
 }
 
-static struct drm_framebuffer_funcs xlnx_fb_funcs = {
-	.destroy	= drm_gem_fb_destroy,
-	.create_handle	= drm_gem_fb_create_handle,
-};
-
 static int
 xlnx_fb_ioctl(struct fb_info *info, unsigned int cmd, unsigned long arg)
 {
@@ -333,23 +354,4 @@ void xlnx_fb_fini(struct drm_fb_helper *fb_helper)
 	kfree(fbdev);
 }
 
-/**
- * xlnx_fb_create - (struct drm_mode_config_funcs *)->fb_create callback
- * @drm: DRM device
- * @file_priv: drm file private data
- * @mode_cmd: mode command for fb creation
- *
- * This functions creates a drm_framebuffer with xlnx_fb_funcs for given mode
- * @mode_cmd. This functions is intended to be used for the fb_create callback
- * function of drm_mode_config_funcs.
- *
- * Return: a drm_framebuffer object if successful, or
- * ERR_PTR from drm_gem_fb_create_with_funcs().
- */
-struct drm_framebuffer *
-xlnx_fb_create(struct drm_device *drm, struct drm_file *file_priv,
-	       const struct drm_mode_fb_cmd2 *mode_cmd)
-{
-	return drm_gem_fb_create_with_funcs(drm, file_priv, mode_cmd,
-					    &xlnx_fb_funcs);
-}
+#endif /* CONFIG_DRM_FBDEV_EMULATION */
diff --git a/drivers/gpu/drm/xlnx/xlnx_fb.h b/drivers/gpu/drm/xlnx/xlnx_fb.h
index 6efc985f2fb3..b3f57e3e8483 100644
--- a/drivers/gpu/drm/xlnx/xlnx_fb.h
+++ b/drivers/gpu/drm/xlnx/xlnx_fb.h
@@ -24,10 +24,29 @@ struct drm_fb_helper;
 struct drm_framebuffer *
 xlnx_fb_create(struct drm_device *drm, struct drm_file *file_priv,
 	       const struct drm_mode_fb_cmd2 *mode_cmd);
+
+#ifdef CONFIG_DRM_FBDEV_EMULATION
+
 struct drm_fb_helper *
 xlnx_fb_init(struct drm_device *drm, int preferred_bpp,
 	     unsigned int max_conn_count, unsigned int align,
 	     unsigned int vres_mult);
 void xlnx_fb_fini(struct drm_fb_helper *fb_helper);
 
+#else /* CONFIG_DRM_FBDEV_EMULATION */
+
+static inline struct drm_fb_helper *
+xlnx_fb_init(struct drm_device *drm, int preferred_bpp,
+	     unsigned int max_conn_count, unsigned int align,
+	     unsigned int vres_mult)
+{
+	return NULL;
+}
+
+static inline void xlnx_fb_fini(struct drm_fb_helper *fb_helper)
+{
+}
+
+#endif /* CONFIG_DRM_FBDEV_EMULATION */
+
 #endif /* _XLNX_FB_H_ */
-- 
2.31.1

