From d2b414e82b9d1a7e8b529333f8f667d2469e5d52 Mon Sep 17 00:00:00 2001
From: Devarsh Thakkar <devarsh.thakkar@xilinx.com>
Date: Tue, 9 Oct 2018 16:30:21 -0700
Subject: [PATCH 0172/1851] dmaengine: xilinx_frmbuf: Mark previous active
 decriptor as complete in irq handler

commit 27c588bf6663fc2112256bfe714bd0bbb8b1223a from
https://github.com/Xilinx/linux-xlnx.git

Moving the block to mark previous active descriptor as complete
to irq handler as it's more appropriate to do it in interrupt
context which confirms that previous transaction was completed.

There is no semantic change in the flow,
previously descriptor was marked as completed in
xilinx_frmbuf_start_transfer() assuming it's is called by
the done interrupt handler which didn't seem required,
so we now mark it as completed in the interrupt handler itelf.

Signed-off-by: Devarsh Thakkar <devarsh.thakkar@xilinx.com>
Reviewed-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Signed-off-by: Michal Simek <michal.simek@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/dma/xilinx/xilinx_frmbuf.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/dma/xilinx/xilinx_frmbuf.c b/drivers/dma/xilinx/xilinx_frmbuf.c
index f91927bc519c..2a601c947712 100644
--- a/drivers/dma/xilinx/xilinx_frmbuf.c
+++ b/drivers/dma/xilinx/xilinx_frmbuf.c
@@ -983,11 +983,6 @@ static void xilinx_frmbuf_start_transfer(struct xilinx_frmbuf_chan *chan)
 	if (!chan->idle)
 		return;
 
-	if (chan->active_desc) {
-		xilinx_frmbuf_complete_descriptor(chan);
-		chan->active_desc = NULL;
-	}
-
 	if (chan->staged_desc) {
 		chan->active_desc = chan->staged_desc;
 		chan->staged_desc = NULL;
@@ -1081,6 +1076,10 @@ static irqreturn_t xilinx_frmbuf_irq_handler(int irq, void *data)
 	if (status & XILINX_FRMBUF_ISR_AP_READY_IRQ) {
 		spin_lock(&chan->lock);
 		chan->idle = true;
+		if (chan->active_desc) {
+			xilinx_frmbuf_complete_descriptor(chan);
+			chan->active_desc = NULL;
+		}
 		xilinx_frmbuf_start_transfer(chan);
 		spin_unlock(&chan->lock);
 	}
-- 
2.31.1

