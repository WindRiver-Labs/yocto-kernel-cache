From c4df9cdc893fa2e3ca22835b613e8ea2a3b839c7 Mon Sep 17 00:00:00 2001
From: Shravya Kumbham <shravya.kumbham@xilinx.com>
Date: Fri, 14 Aug 2020 04:31:00 -0600
Subject: [PATCH 1520/1851] net: emaclite: Add variable and conditions to check
 the return value

commit 65895036b779d9246bc69fb37f6f7e60fc1ce657 from
https://github.com/Xilinx/linux-xlnx.git

Add ret variable and conditions to check the
return value of of_address_to_resource() and
phy_read() functions.

Addresses-Coverity: Event check_return value.
Signed-off-by: Shravya Kumbham <shravya.kumbham@xilinx.com>
Reviewed-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/net/ethernet/xilinx/xilinx_emaclite.c | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_emaclite.c b/drivers/net/ethernet/xilinx/xilinx_emaclite.c
index af0f06c8be93..1659a7e77d20 100644
--- a/drivers/net/ethernet/xilinx/xilinx_emaclite.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emaclite.c
@@ -815,7 +815,7 @@ static int xemaclite_mdio_write(struct mii_bus *bus, int phy_id, int reg,
 static int xemaclite_mdio_setup(struct net_local *lp, struct device *dev)
 {
 	struct mii_bus *bus;
-	int rc;
+	int rc, ret;
 	struct resource res;
 	struct device_node *np = of_get_parent(lp->phy_node);
 	struct device_node *npp;
@@ -829,7 +829,13 @@ static int xemaclite_mdio_setup(struct net_local *lp, struct device *dev)
 	}
 	npp = of_get_parent(np);
 
-	of_address_to_resource(npp, 0, &res);
+	ret = of_address_to_resource(npp, 0, &res);
+	if (ret) {
+		dev_err(dev, "%s resource error!\n",
+			dev->of_node->full_name);
+		of_node_put(lp->phy_node);
+		return ret;
+	}
 	if (lp->ndev->mem_start != res.start) {
 		struct phy_device *phydev;
 
@@ -919,7 +925,7 @@ static int xemaclite_open(struct net_device *dev)
 	xemaclite_disable_interrupts(lp);
 
 	if (lp->phy_node) {
-		u32 bmcr;
+		int bmcr;
 
 		lp->phy_dev = of_phy_connect(lp->ndev, lp->phy_node,
 					     xemaclite_adjust_link, 0,
@@ -941,6 +947,13 @@ static int xemaclite_open(struct net_device *dev)
 
 		/* Restart auto negotiation */
 		bmcr = phy_read(lp->phy_dev, MII_BMCR);
+		if (bmcr < 0) {
+			dev_err(&lp->ndev->dev, "phy_read failed\n");
+			phy_disconnect(lp->phy_dev);
+			lp->phy_dev = NULL;
+
+			return bmcr;
+		}
 		bmcr |= (BMCR_ANENABLE | BMCR_ANRESTART);
 		phy_write(lp->phy_dev, MII_BMCR, bmcr);
 
-- 
2.31.1

