From 2b4d87143ff373e4dbd38ef5bb4274e0e4dfae6c Mon Sep 17 00:00:00 2001
From: hariprasad <hkelam@marvell.com>
Date: Tue, 15 Oct 2019 15:43:42 +0530
Subject: [PATCH 371/767] octeontx2-pf: Simplify ndo vf mac and vlan

commit 68c4f101435f82b4071116ff7457c51ffcdd90a8 from
git@git.assembla.com:cavium/WindRiver.linux.git

Irrespective of vf interface state always send request to AF.

Change-Id: I0cae60a18cef19cd95990c4a17ec61429fc2ce2e
Signed-off-by: hariprasad <hkelam@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/17412
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2/nic/otx2_common.h       |  1 -
 .../ethernet/marvell/octeontx2/nic/otx2_pf.c  | 25 -------------------
 2 files changed, 26 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
index c6607327b3ea..9a3808fdc44f 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.h
@@ -190,7 +190,6 @@ struct otx2_ptp;
 struct otx2_vf_config {
 	struct otx2_nic *pf;
 	struct delayed_work link_event_work;
-	struct delayed_work mac_vlan_work;
 	bool intf_down; /* interface was either configured or not */
 	u8 mac[ETH_ALEN];
 	u16 vlan;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index b13807f0b445..bdc3734ab58b 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -759,8 +759,6 @@ static void otx2_process_pfaf_mbox_msg(struct otx2_nic *pf,
 			config->intf_down = false;
 			dwork = &config->link_event_work;
 			schedule_delayed_work(dwork, msecs_to_jiffies(100));
-			dwork = &config->mac_vlan_work;
-			schedule_delayed_work(dwork, msecs_to_jiffies(100));
 			break;
 		case MBOX_MSG_NIX_LF_STOP_RX:
 			config->intf_down = true;
@@ -1945,8 +1943,6 @@ static int otx2_set_vf_mac(struct net_device *netdev, int vf, u8 *mac)
 
 	config = &pf->vf_configs[vf];
 	ether_addr_copy(config->mac, mac);
-	if (config->intf_down)
-		return 0;
 
 	return otx2_do_set_vf_mac(pf, vf, mac);
 }
@@ -1998,8 +1994,6 @@ static int otx2_set_vf_vlan(struct net_device *netdev, int vf, u16 vlan, u8 qos,
 
 	config = &pf->vf_configs[vf];
 	config->vlan = vlan;
-	if (config->intf_down)
-		return 0;
 
 	return otx2_do_set_vf_vlan(pf, vf, vlan, qos);
 }
@@ -2295,23 +2289,6 @@ static void otx2_vf_link_event_task(struct work_struct *work)
 	otx2_sync_mbox_up_msg(&pf->mbox_pfvf[0], vf_idx);
 }
 
-static void otx2_vf_mac_vlan_task(struct work_struct *work)
-{
-	struct otx2_vf_config *config;
-	struct otx2_nic *pf;
-	int vf_idx;
-
-	config = container_of(work, struct otx2_vf_config, mac_vlan_work.work);
-	vf_idx = config - config->pf->vf_configs;
-	pf = config->pf;
-
-	if (!is_zero_ether_addr(config->mac))
-		otx2_do_set_vf_mac(pf, vf_idx, config->mac);
-
-	if (config->vlan)
-		otx2_do_set_vf_vlan(pf, vf_idx, config->vlan, 0);
-}
-
 static int otx2_sriov_enable(struct pci_dev *pdev, int numvfs)
 {
 	struct net_device *netdev = pci_get_drvdata(pdev);
@@ -2342,8 +2319,6 @@ static int otx2_sriov_enable(struct pci_dev *pdev, int numvfs)
 		pf->vf_configs[i].intf_down = true;
 		INIT_DELAYED_WORK(&pf->vf_configs[i].link_event_work,
 				  otx2_vf_link_event_task);
-		INIT_DELAYED_WORK(&pf->vf_configs[i].mac_vlan_work,
-				  otx2_vf_mac_vlan_task);
 	}
 
 	ret = otx2_pf_flr_init(pf, numvfs);
-- 
2.31.1

