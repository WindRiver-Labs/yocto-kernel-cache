From 0c2c1856028d47e5b7aaadafeb82594f3b2eefdb Mon Sep 17 00:00:00 2001
From: Tomasz Duszynski <tduszynski@cavium.com>
Date: Thu, 6 Jun 2019 12:20:05 +0530
Subject: [PATCH 197/767] octeontx2-pf: do not handle VF link event twice

commit f5c055dc0e00504455af897ad0acf54090458285 from
git@git.assembla.com:cavium/WindRiver.linux.git

otx2_open() is shared across both PFs and VFs and internally it may
update link state. Which is fine for PFs which may have already received
link event update. For example during probe.

Things get tricker in case of VFs which are informed about link changes
via different mechanism happening in parallel to otx2_open(). And this
is not necessary a good thing because leads to updating link status
twice.

So to make things behave as expected link handling during otx2_open()
should be limited to PFs only.

Change-Id: I80858cff519cde3702ce4b3a4c18f5cc71f4b4b1
Signed-off-by: Tomasz Duszynski <tduszynski@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c | 4 +++-
 drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c | 1 +
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 4c4ec1eba88e..015c3d6cc872 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1665,7 +1665,7 @@ int otx2_open(struct net_device *netdev)
 	pf->intf_down = false;
 
 	/* we have already received link status notification */
-	if (pf->linfo.link_up)
+	if (pf->linfo.link_up && !(pf->pcifunc & RVU_PFVF_FUNC_MASK))
 		otx2_handle_link_event(pf);
 
 	/* When reinitializing enable time stamping if it is enabled before */
@@ -2159,6 +2159,8 @@ static int otx2_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	pf->pdev = pdev;
 	pf->dev = dev;
 	pf->total_vfs = pci_sriov_get_totalvfs(pdev);
+	pf->intf_down = true;
+
 	hw = &pf->hw;
 	hw->pdev = pdev;
 	hw->rx_queues = qcount;
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
index e805d1f27730..d8a41f09e5cd 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_vf.c
@@ -490,6 +490,7 @@ static int otx2vf_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	vf->pdev = pdev;
 	vf->dev = dev;
 	vf->iommu_domain = iommu_get_domain_for_dev(dev);
+	vf->intf_down = true;
 	hw = &vf->hw;
 	hw->pdev = vf->pdev;
 	hw->rx_queues = qcount;
-- 
2.31.1

