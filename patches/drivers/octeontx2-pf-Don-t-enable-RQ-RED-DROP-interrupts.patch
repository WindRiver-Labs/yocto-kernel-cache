From f5b46a151a0040e5a850418744cd37bb691f6d60 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Mon, 29 Jul 2019 16:59:06 +0530
Subject: [PATCH 290/767] octeontx2-pf: Don't enable RQ RED/DROP interrupts

commit d8b974f75f1722a2d0c1d4a6bb773010b609ddf5 from
git@git.assembla.com:cavium/WindRiver.linux.git

RQ's RED and DROP pkt interrupt's handling has been removed
in earlier patches but missed unregistering the irqs. This
patch removes enabling these interrupts in RQ's context.

Also added more debug info to CQ and SQ error interrupts.

Change-Id: I54d0c31475fa9acbf9674c574f2876571a938ddd
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/13232
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/13444
Tested-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../ethernet/marvell/octeontx2/nic/otx2_common.c  |  1 -
 .../net/ethernet/marvell/octeontx2/nic/otx2_pf.c  | 15 +++++++--------
 .../ethernet/marvell/octeontx2/nic/otx2_struct.h  |  1 -
 3 files changed, 7 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
index 057e78146b77..b3b526ff632e 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_common.c
@@ -579,7 +579,6 @@ static int otx2_rq_init(struct otx2_nic *pfvf, u16 qidx, u16 lpb_aura)
 	aq->rq.lpb_sizem1 = (DMA_BUFFER_LEN / 8) - 1;
 	aq->rq.xqe_imm_size = 0; /* Copying of packet to CQE not needed */
 	aq->rq.flow_tagw = 32; /* Copy full 32bit flow_tag to CQE header */
-	aq->rq.rq_int_ena = NIX_RQINT_BITS;
 	aq->rq.qint_idx = 0;
 	aq->rq.lpb_drop_ena = 1; /* Enable RED dropping for AURA */
 	aq->rq.xqe_drop_ena = 1; /* Enable RED dropping for CQ/SSO */
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
index 7ed92bf4ab9f..a9045398b3e4 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_pf.c
@@ -1146,15 +1146,12 @@ static irqreturn_t otx2_q_intr_handler(int irq, void *data)
 			continue;
 
 		if (val & BIT_ULL(42)) {
-			dev_err(pf->dev, "CQ%lld: error reading NIX_LF_CQ_OP_INT\n",
-				qidx);
+			dev_err(pf->dev, "CQ%lld: error reading NIX_LF_CQ_OP_INT, NIX_LF_ERR_INT 0x%llx\n",
+				qidx, otx2_read64(pf, NIX_LF_ERR_INT));
 		} else {
 			if (val & BIT_ULL(NIX_CQERRINT_DOOR_ERR))
 				dev_err(pf->dev, "CQ%lld: Doorbell error",
 					qidx);
-			if (val & BIT_ULL(NIX_CQERRINT_WR_FULL))
-				dev_err(pf->dev, "CQ%lld: Write full. A CQE to be added has been dropped because the CQ is full",
-					qidx);
 			if (val & BIT_ULL(NIX_CQERRINT_CQE_FAULT))
 				dev_err(pf->dev, "CQ%lld: Memory fault on CQE write to LLC/DRAM",
 					qidx);
@@ -1172,8 +1169,8 @@ static irqreturn_t otx2_q_intr_handler(int irq, void *data)
 			continue;
 
 		if (val & BIT_ULL(42)) {
-			dev_err(pf->dev, "SQ%lld: error reading NIX_LF_SQ_OP_INT\n",
-				qidx);
+			dev_err(pf->dev, "SQ%lld: error reading NIX_LF_SQ_OP_INT, NIX_LF_ERR_INT 0x%llx\n",
+				qidx, otx2_read64(pf, NIX_LF_ERR_INT));
 		} else {
 			if (val & BIT_ULL(NIX_SQINT_LMT_ERR))
 				dev_err(pf->dev, "SQ%lld: LMT store error",
@@ -1182,7 +1179,9 @@ static irqreturn_t otx2_q_intr_handler(int irq, void *data)
 				dev_err(pf->dev, "SQ%lld: Meta-descriptor enqueue error",
 					qidx);
 			if (val & BIT_ULL(NIX_SQINT_SEND_ERR))
-				dev_err(pf->dev, "SQ%lld: Send error", qidx);
+				dev_err(pf->dev, "SQ%lld: Send error, NIX_LF_SEND_ERR_DBG 0x%llx",
+					qidx,
+					otx2_read64(pf, NIX_LF_SEND_ERR_DBG));
 			if (val & BIT_ULL(NIX_SQINT_SQB_ALLOC_FAIL))
 				dev_err(pf->dev, "SQ%lld: SQB allocation failed",
 					qidx);
diff --git a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_struct.h b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_struct.h
index 6907017f6d56..fe0f0fb45294 100644
--- a/drivers/net/ethernet/marvell/octeontx2/nic/otx2_struct.h
+++ b/drivers/net/ethernet/marvell/octeontx2/nic/otx2_struct.h
@@ -401,7 +401,6 @@ enum nix_cqerrint_e {
 };
 
 #define NIX_CQERRINT_BITS (BIT_ULL(NIX_CQERRINT_DOOR_ERR) | \
-			   BIT_ULL(NIX_CQERRINT_WR_FULL) | \
 			   BIT_ULL(NIX_CQERRINT_CQE_FAULT))
 
 enum nix_rqint_e {
-- 
2.31.1

