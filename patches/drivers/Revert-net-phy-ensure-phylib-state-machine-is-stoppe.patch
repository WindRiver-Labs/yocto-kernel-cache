From e3ac88f01bb1fcdb7ce2b36dd4b45adeb3e1d3b2 Mon Sep 17 00:00:00 2001
From: Harini Katakam <harini.katakam@xilinx.com>
Date: Tue, 25 Feb 2020 12:41:04 +0530
Subject: [PATCH 1334/1852] Revert "net: phy: ensure phylib state machine is
 stopped after calling phy_stop"

commit e2c81a8bbd463c16ef1b4f021315cd73441843b3 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit cbfd12b3e8c3542e8142aa041714ed614d3f67b0.

An issue was observed with TI DP83867 PHYs on Xilixn boards where ifconfig
down/up does not work. This was traced to changes in phy_stop where the
state machine is stopped. It is as yet unclear why this is affecting this
PHY and it is being debugged. These patches are being reverted as a
workaround because this affects basic functionality.

Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/net/phy/phy.c        | 1 -
 drivers/net/phy/phy_device.c | 2 ++
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
index ac5effd52cc8..9fec03678874 100644
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -869,7 +869,6 @@ void phy_stop(struct phy_device *phydev)
 	mutex_unlock(&phydev->lock);
 
 	phy_state_machine(&phydev->state_queue.work);
-	phy_stop_machine(phydev);
 
 	/* Cannot call flush_scheduled_work() here as desired because
 	 * of rtnl_lock(), but PHY_HALTED shall guarantee irq handler
diff --git a/drivers/net/phy/phy_device.c b/drivers/net/phy/phy_device.c
index e0be38d5d970..5f68ad0eb4b6 100644
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@ -1028,6 +1028,8 @@ void phy_disconnect(struct phy_device *phydev)
 	if (phy_interrupt_is_valid(phydev))
 		phy_free_interrupt(phydev);
 
+	phy_stop_machine(phydev);
+
 	phydev->adjust_link = NULL;
 
 	phy_detach(phydev);
-- 
2.31.1

