From 4fa8f799498d7555dfbac056db766aaadf58edd0 Mon Sep 17 00:00:00 2001
From: Hans-Peter Keil <Hans-Peter.Keil@rohde-schwarz.com>
Date: Fri, 9 Oct 2020 12:59:18 +0530
Subject: [PATCH 1711/1852] mtd: spi-nor: Fix for setting quad mode on Spansion
 Flash in dual parallel

commit 7e2f188265e7173c11f56a8360374095d2ae349f from
https://github.com/Xilinx/linux-xlnx.git

Quad configuraiton. within spansion_read_cr_quad_enable quad bit is set to
sr_cr[1] after reading od cr. Following read_sr() overwrites sr_cr[1] in case
of parallel configuration (Reads two Bytes into nor->bouncebuf; sr_cr is a
pointer to this buffer)

Signed-off-by: Hans-Peter Keil <Hans-Peter.Keil@rohde-schwarz.com>
Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index f3ee53e2b845..9d23b1ee4f8d 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -2151,6 +2151,14 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 	u8 *sr_cr = nor->bouncebuf;
 	int ret;
 
+	/* Keep the current value of the Status Register. */
+	ret = read_sr(nor);
+	if (ret < 0) {
+		dev_err(dev, "error while reading status register\n");
+		return -EINVAL;
+	}
+	sr_cr[0] = ret;
+
 	/* Check current Quad Enable bit value. */
 	ret = read_cr(nor);
 	if (ret < 0) {
@@ -2162,15 +2170,6 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 		return 0;
 
 	sr_cr[1] = ret | CR_QUAD_EN_SPAN;
-
-	/* Keep the current value of the Status Register. */
-	ret = read_sr(nor);
-	if (ret < 0) {
-		dev_err(dev, "error while reading status register\n");
-		return -EINVAL;
-	}
-	sr_cr[0] = ret;
-
 	ret = write_sr_cr(nor, sr_cr);
 	if (ret)
 		return ret;
-- 
2.31.1

