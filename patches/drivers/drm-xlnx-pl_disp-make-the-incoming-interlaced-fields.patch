From 054cb4a67f18ee0aff6a67bfe30bb74922892001 Mon Sep 17 00:00:00 2001
From: Jianqiang Chen <jianqiang.chen@xilinx.com>
Date: Fri, 10 Apr 2020 09:51:04 -0700
Subject: [PATCH 1326/1852] drm: xlnx: pl_disp: make the incoming interlaced
 fields in order

commit c35501090df2bccb63f4f92c334c3f0549d3f9a7 from
https://github.com/Xilinx/linux-xlnx.git

For interlace mode, the display driver expects the first field
to be bottom field, and the frame buffer reader transfers the
first field twice. In addition, the application may pass dummy
packets before the video data. This patch guarantees the incoming
field id to be flipped and drops any consecutive field.

Signed-off-by: Jianqiang Chen <jianqiang.chen@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_pl_disp.c | 38 +++++++++++++++++++++++++----
 1 file changed, 33 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/xlnx/xlnx_pl_disp.c b/drivers/gpu/drm/xlnx/xlnx_pl_disp.c
index a4de9b31a717..a1d720d0271a 100644
--- a/drivers/gpu/drm/xlnx/xlnx_pl_disp.c
+++ b/drivers/gpu/drm/xlnx/xlnx_pl_disp.c
@@ -64,6 +64,7 @@ struct xlnx_dma_chan {
  * @fmt: drm color format
  * @vtc_bridge: vtc_bridge structure
  * @fid: field id
+ * @prev_fid: previous field id
  */
 struct xlnx_pl_disp {
 	struct device *dev;
@@ -78,6 +79,7 @@ struct xlnx_pl_disp {
 	u32 fmt;
 	struct xlnx_bridge *vtc_bridge;
 	u32 fid;
+	u32 prev_fid;
 };
 
 /*
@@ -181,15 +183,35 @@ static void xlnx_pl_disp_plane_enable(struct drm_plane *plane)
 	desc->callback_param = xlnx_pl_disp->callback_param;
 	xilinx_xdma_set_earlycb(xlnx_dma_chan->dma_chan, desc, EARLY_CALLBACK);
 
-	if (plane->state->fb->flags == DRM_MODE_FB_ALTERNATE_TOP ||
-	    plane->state->fb->flags == DRM_MODE_FB_ALTERNATE_BOTTOM) {
-		if (plane->state->fb->flags == DRM_MODE_FB_ALTERNATE_TOP)
-			xlnx_pl_disp->fid = 1;
-		else
+	if (plane->state->crtc->state->adjusted_mode.flags &
+			DRM_MODE_FLAG_INTERLACE) {
+		/*
+		 * Framebuffer DMA Reader sends the first field twice, which
+		 * causes the following fields out of order. The fid is
+		 * reverted to restore the order
+		 */
+		if (plane->state->fb->flags == DRM_MODE_FB_ALTERNATE_TOP) {
 			xlnx_pl_disp->fid = 0;
+		} else if (plane->state->fb->flags ==
+				DRM_MODE_FB_ALTERNATE_BOTTOM) {
+			xlnx_pl_disp->fid = 1;
+		} else {
+			/*
+			 * FIXME: for interlace mode, application may send
+			 * dummy packets before the video field, need to set
+			 * the fid correctly to avoid display distortion
+			 */
+			xlnx_pl_disp->fid = !xlnx_pl_disp->prev_fid;
+		}
+
+		if (xlnx_pl_disp->fid == xlnx_pl_disp->prev_fid) {
+			xlnx_pl_disp_complete(xlnx_pl_disp);
+			return;
+		}
 
 		xilinx_xdma_set_fid(xlnx_dma_chan->dma_chan, desc,
 				    xlnx_pl_disp->fid);
+		xlnx_pl_disp->prev_fid = xlnx_pl_disp->fid;
 	}
 
 	dmaengine_submit(desc);
@@ -396,6 +418,9 @@ static void xlnx_pl_disp_crtc_atomic_disable(struct drm_crtc *crtc,
 	xlnx_pl_disp_clear_event(crtc);
 	drm_crtc_vblank_off(crtc);
 	xlnx_bridge_disable(xlnx_pl_disp->vtc_bridge);
+
+	/* first field is expected to be bottom so init previous field to top */
+	xlnx_pl_disp->prev_fid = 1;
 }
 
 static int xlnx_pl_disp_crtc_atomic_check(struct drm_crtc *crtc,
@@ -568,6 +593,9 @@ static int xlnx_pl_disp_probe(struct platform_device *pdev)
 		goto err_component;
 	}
 
+	/* first field is expected to be bottom so init previous field to top */
+	xlnx_pl_disp->prev_fid = 1;
+
 	dev_info(&pdev->dev, "Xlnx PL display driver probed\n");
 
 	return 0;
-- 
2.31.1

