From e31dfcbede25bf67ce8cc324cdad574f56e919cb Mon Sep 17 00:00:00 2001
From: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Date: Tue, 5 Mar 2019 17:54:14 -0800
Subject: [PATCH 0542/1852] v4l: xilinx: dma: Add s_ctrl ioctl for low latency
 capture

commit 50cbf9e8408bd4b343010d058644c47bae7a1c96 from
https://github.com/Xilinx/linux-xlnx.git

This patch adds s_ctrl ioctl to support low latency capture. This will
enable a boolean flag based on control id and pass the same to DMA
controller.

Signed-off-by: Satish Kumar Nagireddy <satish.nagireddy.nagireddy@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/media/platform/xilinx/xilinx-dma.c | 33 ++++++++++++++++++++++
 drivers/media/platform/xilinx/xilinx-dma.h |  1 +
 2 files changed, 34 insertions(+)

diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index c78e9fef7814..35f27a1d5b39 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -16,6 +16,7 @@
 #include <linux/module.h>
 #include <linux/of.h>
 #include <linux/slab.h>
+#include <linux/xilinx-v4l2-controls.h>
 
 #include <media/v4l2-dev.h>
 #include <media/v4l2-fh.h>
@@ -626,6 +627,18 @@ static void xvip_dma_buffer_queue(struct vb2_buffer *vb)
 
 	xilinx_xdma_set_fid(dma->dma, desc, fid);
 
+	/* Set low latency capture mode */
+	if (dma->earlycb_mode) {
+		int ret;
+
+		ret = xilinx_xdma_set_earlycb(dma->dma, desc,
+					      dma->earlycb_mode);
+		if (ret < 0) {
+			dev_err(dma->xdev->dev,
+				"Failed enable low latency mode\n");
+		}
+	}
+
 	spin_lock_irq(&dma->queued_lock);
 	list_add_tail(&buf->queue, &dma->queued_bufs);
 	spin_unlock_irq(&dma->queued_lock);
@@ -1063,6 +1076,25 @@ xvip_dma_set_format(struct file *file, void *fh, struct v4l2_format *format)
 	return 0;
 }
 
+static int
+xvip_dma_set_ctrl(struct file *file, void *fh, struct v4l2_control *ctl)
+{
+	struct v4l2_fh *vfh = file->private_data;
+	struct xvip_dma *dma = to_xvip_dma(vfh->vdev);
+
+	if (vb2_is_busy(&dma->queue))
+		return -EBUSY;
+
+	if (ctl->id == V4L2_CID_XILINX_LOW_LATENCY) {
+		if (ctl->value)
+			dma->earlycb_mode = EARLY_CALLBACK_LOW_LATENCY;
+		else
+			dma->earlycb_mode = 0;
+	}
+
+	return 0;
+}
+
 static const struct v4l2_ioctl_ops xvip_dma_ioctl_ops = {
 	.vidioc_querycap		= xvip_dma_querycap,
 	.vidioc_enum_fmt_vid_cap	= xvip_dma_enum_format,
@@ -1075,6 +1107,7 @@ static const struct v4l2_ioctl_ops xvip_dma_ioctl_ops = {
 	.vidioc_s_fmt_vid_cap_mplane	= xvip_dma_set_format,
 	.vidioc_s_fmt_vid_out		= xvip_dma_set_format,
 	.vidioc_s_fmt_vid_out_mplane	= xvip_dma_set_format,
+	.vidioc_s_ctrl			= xvip_dma_set_ctrl,
 	.vidioc_try_fmt_vid_cap		= xvip_dma_try_format,
 	.vidioc_try_fmt_vid_cap_mplane	= xvip_dma_try_format,
 	.vidioc_try_fmt_vid_out		= xvip_dma_try_format,
diff --git a/drivers/media/platform/xilinx/xilinx-dma.h b/drivers/media/platform/xilinx/xilinx-dma.h
index 0132139e5742..61c26ab103f7 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.h
+++ b/drivers/media/platform/xilinx/xilinx-dma.h
@@ -102,6 +102,7 @@ struct xvip_dma {
 	struct data_chunk sgl[1];
 
 	u32 prev_fid;
+	u32 earlycb_mode;
 };
 
 #define to_xvip_dma(vdev)	container_of(vdev, struct xvip_dma, video)
-- 
2.31.1

