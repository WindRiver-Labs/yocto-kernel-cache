From ec207319309f7c4121d375a22506e13725de5df2 Mon Sep 17 00:00:00 2001
From: Venkateshwar Rao Gannavarapu <venkateshwar.rao.gannavarapu@xilinx.com>
Date: Fri, 27 Sep 2019 12:44:27 -0700
Subject: [PATCH 0676/1852] v4l: xilinx: vpss-scaler: Add support for ip
 version 2.2

commit 0f411523927eda2730e16ce7442545943dbe4547 from
https://github.com/Xilinx/linux-xlnx.git

This patch adds support to ip version 2.2 with backward compatibility.

Signed-off-by: Venkateshwar Rao Gannavarapu <venkateshwar.rao.gannavarapu@xilinx.com>
Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 .../media/platform/xilinx/xilinx-vpss-scaler.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/xilinx/xilinx-vpss-scaler.c b/drivers/media/platform/xilinx/xilinx-vpss-scaler.c
index 70c3cc14a4c1..b29639dd8023 100644
--- a/drivers/media/platform/xilinx/xilinx-vpss-scaler.c
+++ b/drivers/media/platform/xilinx/xilinx-vpss-scaler.c
@@ -423,6 +423,7 @@ xhsc_coeff_taps12[XV_HSCALER_MAX_H_PHASES][XV_HSCALER_TAPS_12] = {
 #define XV_HSCALER_CTRL_ADDR_HWREG_PHASESH_V_HIGH		(0x3fff)
 #define XV_HSCALER_CTRL_WIDTH_HWREG_PHASESH_V			(18)
 #define XV_HSCALER_CTRL_DEPTH_HWREG_PHASESH_V			(1920)
+#define XV_HSCALER_CTRL_ADDR_HWREG_PHASEH_FIX			(0x4000)
 
 /* H-scaler masks */
 #define XV_HSCALER_PHASESH_V_OUTPUT_WR_EN			BIT(8)
@@ -716,7 +717,9 @@ xvsc_coeff_taps12[XV_VSCALER_MAX_V_PHASES][XV_VSCALER_TAPS_12] = {
 #define XV_VSCALER_CTRL_WIDTH_HWREG_VFLTCOEFF		(16)
 #define XV_VSCALER_CTRL_DEPTH_HWREG_VFLTCOEFF		(384)
 
+/* These bits are for xscaler feature flags */
 #define XSCALER_CLK_PROP	BIT(0)
+#define XSCALER_HPHASE_FIX	BIT(1)
 
 /**
  * struct xscaler_feature - dt or IP property structure
@@ -773,6 +776,10 @@ struct xscaler_device {
 	struct clk *aclk_ctrl;
 };
 
+static const struct xscaler_feature xlnx_scaler_v2_2 = {
+	.flags = XSCALER_CLK_PROP | XSCALER_HPHASE_FIX,
+};
+
 static const struct xscaler_feature xlnx_scaler_v1_0 = {
 	.flags = XSCALER_CLK_PROP,
 };
@@ -786,6 +793,8 @@ static const struct of_device_id xscaler_of_id_table[] = {
 		.data = &xlnx_scaler},
 	{ .compatible = "xlnx,v-vpss-scaler-1.0",
 		.data = &xlnx_scaler_v1_0},
+	{ .compatible = "xlnx,v-vpss-scaler-2.2",
+		.data = &xlnx_scaler_v2_2},
 	{ /* end of table */ }
 };
 MODULE_DEVICE_TABLE(of, xscaler_of_id_table);
@@ -1331,7 +1340,14 @@ xv_hscaler_set_phases(struct xscaler_device *xscaler)
 	u64 phasehdata;
 
 	loop_width = xscaler->max_pixels / xscaler->pix_per_clk;
-	offset = V_HSCALER_OFF + XV_HSCALER_CTRL_ADDR_HWREG_PHASESH_V_BASE;
+
+	if (xscaler->cfg->flags & XSCALER_HPHASE_FIX) {
+		offset = V_HSCALER_OFF +
+			XV_HSCALER_CTRL_ADDR_HWREG_PHASEH_FIX;
+	} else {
+		offset = V_HSCALER_OFF +
+			XV_HSCALER_CTRL_ADDR_HWREG_PHASESH_V_BASE;
+	}
 
 	switch (xscaler->pix_per_clk) {
 	case XSCALER_PPC_1:
-- 
2.31.1

