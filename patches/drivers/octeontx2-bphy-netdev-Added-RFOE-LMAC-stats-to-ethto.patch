From f711a4b4fe035c11a45ccea8ee6560ff909b0343 Mon Sep 17 00:00:00 2001
From: Naveen Mamindlapalli <naveenm@marvell.com>
Date: Thu, 21 Jan 2021 15:03:00 +0530
Subject: [PATCH 04/11] octeontx2-bphy-netdev: Added RFOE LMAC stats to ethtool

commit 9e4ed522acf5d90afdabbfd1718725cb9890baad from
git@git.assembla.com:cavium/WindRiver.linux.git

Added RFOE LMAC stats to ethtool. The following stats
are added. These stats are per LMAC stats provided by
hardware. The naming convention is taken from Nokia's
requirement.

EthIfInFrames -> Total no of received ethernet frames,
                 including valid and error frames.
EthIfInOctets -> Total no of received octets.
EthIfOutFrames -> Total no of transmitted ethernet frames.
EthIfOutOctets -> Total no of transmitted octets.
EthIfInUnknownVlan -> Total no of received VLAN tagged ethernet frames
                      with a VLAN ID not matching VLAN ID of any
                      interface.

Change-Id: I8a9f26eb94e9056e478056a1be46b5ec83392a03
Signed-off-by: Naveen Mamindlapalli <naveenm@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/44091
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 .../marvell/octeontx2/bphy/otx2_bphy_hw.h     | 15 ++++++++++
 .../marvell/octeontx2/bphy/otx2_rfoe.h        |  7 +++++
 .../octeontx2/bphy/otx2_rfoe_ethtool.c        | 28 +++++++++++++++++++
 3 files changed, 50 insertions(+)

diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_bphy_hw.h b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_bphy_hw.h
index efa34dee4ea8..bed5a285a62e 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_bphy_hw.h
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_bphy_hw.h
@@ -66,6 +66,21 @@
 #define RFOEX_TX_PTP_TSTMP_W1(a, b)	(0x7C0ULL | \
 					 (((unsigned long)(a) << 36)) | \
 					 ((b) << 3))
+#define RFOEX_TX_PKT_STAT(a, b)		(0x720ULL | \
+					 (((unsigned long)(a) << 36)) | \
+					 ((b) << 3))
+#define RFOEX_TX_OCTS_STAT(a, b)	(0x740ULL | \
+					 (((unsigned long)(a) << 36)) | \
+					 ((b) << 3))
+#define RFOEX_RX_VLAN_DROP_STAT(a, b)	(0x8A0ULL | \
+					 (((unsigned long)(a) << 36)) | \
+					 ((b) << 3))
+#define RFOEX_RX_CGX_PKT_STAT(a, b)	(0x15C0ULL | \
+					 (((unsigned long)(a) << 36)) | \
+					 ((b) << 3))
+#define RFOEX_RX_CGX_OCTS_STAT(a, b)	(0x15E0ULL | \
+					 (((unsigned long)(a) << 36)) | \
+					 ((b) << 3))
 
 /* PTP register offsets */
 #define MIO_PTP_CLOCK_HI		0x10
diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.h b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.h
index 6b7e15e81fcf..1ccad7d0fbfa 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.h
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe.h
@@ -195,6 +195,13 @@ struct otx2_rfoe_stats {
 	u64 ptp_tx_dropped;	/* ptp tx dropped */
 	u64 ecpri_tx_dropped;	/* ptp tx dropped */
 
+	/* per LMAC stats */
+	u64 EthIfInFrames;
+	u64 EthIfInOctets;
+	u64 EthIfOutFrames;
+	u64 EthIfOutOctets;
+	u64 EthIfInUnknownVlan;
+
 	/* stats update lock */
 	spinlock_t lock;
 };
diff --git a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe_ethtool.c b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe_ethtool.c
index 76d09cf11d78..1a136efc09ea 100644
--- a/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe_ethtool.c
+++ b/drivers/net/ethernet/marvell/octeontx2/bphy/otx2_rfoe_ethtool.c
@@ -25,6 +25,11 @@ static const char ethtool_stat_strings[][ETH_GSTRING_LEN] = {
 	"oth_tx_dropped",
 	"ptp_tx_dropped",
 	"ecpri_tx_dropped",
+	"EthIfInFrames",
+	"EthIfInOctets",
+	"EthIfOutFrames",
+	"EthIfOutOctets",
+	"EthIfInUnknownVlan",
 };
 
 static void otx2_rfoe_get_strings(struct net_device *netdev, u32 sset, u8 *data)
@@ -47,12 +52,35 @@ static int otx2_rfoe_get_sset_count(struct net_device *netdev, int sset)
 	}
 }
 
+static void otx2_rfoe_update_lmac_stats(struct otx2_rfoe_ndev_priv *priv)
+{
+	struct otx2_rfoe_stats *stats = &priv->stats;
+
+	stats->EthIfInFrames = readq(priv->rfoe_reg_base +
+				     RFOEX_RX_CGX_PKT_STAT(priv->rfoe_num,
+							   priv->lmac_id));
+	stats->EthIfInOctets = readq(priv->rfoe_reg_base +
+				     RFOEX_RX_CGX_OCTS_STAT(priv->rfoe_num,
+							    priv->lmac_id));
+	stats->EthIfOutFrames = readq(priv->rfoe_reg_base +
+				      RFOEX_TX_PKT_STAT(priv->rfoe_num,
+							priv->lmac_id));
+	stats->EthIfOutOctets = readq(priv->rfoe_reg_base +
+				      RFOEX_TX_OCTS_STAT(priv->rfoe_num,
+							 priv->lmac_id));
+	stats->EthIfInUnknownVlan =
+				readq(priv->rfoe_reg_base +
+				      RFOEX_RX_VLAN_DROP_STAT(priv->rfoe_num,
+							      priv->lmac_id));
+}
+
 static void otx2_rfoe_get_ethtool_stats(struct net_device *netdev,
 					struct ethtool_stats *stats,
 					u64 *data)
 {
 	struct otx2_rfoe_ndev_priv *priv = netdev_priv(netdev);
 
+	otx2_rfoe_update_lmac_stats(priv);
 	spin_lock(&priv->stats.lock);
 	memcpy(data, &priv->stats,
 	       ARRAY_SIZE(ethtool_stat_strings) * sizeof(u64));
-- 
2.26.1

