From 1df270853fbeeeace110ed4408634674aa1709ba Mon Sep 17 00:00:00 2001
From: Venkateshwar Rao Gannavarapu <venkateshwar.rao.gannavarapu@xilinx.com>
Date: Tue, 25 Aug 2020 10:13:02 -0700
Subject: [PATCH 1533/1851] drm: xlnx: sdi: Add clock config to support integer
 and fractional framerate

commit dbe9fb44ea07c2e1f28c74385abe3b94c0a63381 from
https://github.com/Xilinx/linux-xlnx.git

Add dynamic clock configuration for integer and fractional framerate.

Signed-off-by: Venkateshwar Rao Gannavarapu <venkateshwar.rao.gannavarapu@xilinx.com>
Reviewed-by: Hyun Kwon <hyun.kwon@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/gpu/drm/xlnx/xlnx_sdi.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/drivers/gpu/drm/xlnx/xlnx_sdi.c b/drivers/gpu/drm/xlnx/xlnx_sdi.c
index a3ee3feab474..963ae22a1ba9 100644
--- a/drivers/gpu/drm/xlnx/xlnx_sdi.c
+++ b/drivers/gpu/drm/xlnx/xlnx_sdi.c
@@ -105,6 +105,7 @@
 #define	XSDI_MODE_12G			5
 
 #define SDI_TIMING_PARAMS_SIZE		48
+#define CLK_RATE			148500000UL
 
 /**
  * enum payload_line_1 - Payload Ids Line 1 number
@@ -871,6 +872,8 @@ static void xlnx_sdi_encoder_atomic_mode_set(struct drm_encoder *encoder,
 	struct videomode vm;
 	u32 payload, i;
 	u32 sditx_blank, vtc_blank;
+	unsigned long clkrate;
+	int ret;
 
 	/* Set timing parameters as per bridge output parameters */
 	xlnx_bridge_set_input(sdi->bridge, adjusted_mode->hdisplay,
@@ -897,6 +900,25 @@ static void xlnx_sdi_encoder_atomic_mode_set(struct drm_encoder *encoder,
 		}
 	}
 
+	/*
+	 * For the transceiver TX, for integer and fractional frame rate, the
+	 * PLL ref clock must be a different frequency. Other than SD mode
+	 * its 148.5MHz for an integer & 148.5/1.001 for fractional framerate.
+	 */
+	if (sdi->is_frac_prop_val && sdi->sdi_mod_prop_val != XSDI_MODE_SD)
+		clkrate = (CLK_RATE * 1000) / 1001;
+	else
+		clkrate = CLK_RATE;
+
+	ret = clk_set_rate(sdi->sditx_clk, clkrate);
+	if (ret)
+		dev_err(sdi->dev, "failed to set clk rate = %lu\n", clkrate);
+
+	clkrate = clk_get_rate(sdi->sditx_clk);
+	dev_dbg(sdi->dev, "clkrate = %lu is_frac = %d\n", clkrate,
+		sdi->is_frac_prop_val);
+
+	xlnx_sdi_gt_picxo_reset(sdi);
 	xlnx_sdi_setup(sdi);
 	xlnx_sdi_set_config_parameters(sdi);
 
-- 
2.31.1

