From ed2479e5b369f7978f857e696c7dbe05702070a3 Mon Sep 17 00:00:00 2001
From: Tomasz Michalec <tomasz@marvell.com>
Date: Fri, 21 Feb 2020 16:57:20 +0100
Subject: [PATCH 491/767] octeontx2-serdes: Check SVC UUID on module init

commit c05c727d4c1725450b5e8d2ea351d8ec7c7565e2 from
git@git.assembla.com:cavium/WindRiver.linux.git

Add check for SVC UUID in serdes_dbg_init. Continue initialization only
if returned UUID match OcteonTX UUID.

Change-Id: I366df30d3063a02a5938852ee06b9e3f4ef463ba
Signed-off-by: Tomasz Michalec <tomasz@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/23681
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2-serdes/serdes_debugfs.c | 21 +++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c b/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
index d7f65314829d..633f000d54eb 100644
--- a/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
+++ b/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
@@ -23,11 +23,21 @@ MODULE_AUTHOR("Marvell International Ltd.");
 MODULE_DESCRIPTION("Serdes diagnostic commands for OcteonTX2");
 MODULE_LICENSE("GPL v2");
 
+#define ARM_SMC_SVC_UID			0xc200ff01
+
 #define OCTEONTX_SERDES_DBG_GET_MEM	0xc2000d04
 #define OCTEONTX_SERDES_DBG_GET_EYE	0xc2000d05
 #define OCTEONTX_SERDES_DBG_GET_CONF	0xc2000d06
 #define OCTEONTX_SERDES_DBG_PRBS	0xc2000d07
 
+/* This is expected OcteonTX response for SVC UID command */
+static const int octeontx_svc_uuid[] = {
+	0x6ff498cf,
+	0x5a4e9cfa,
+	0x2f2a3aa4,
+	0x5945b105,
+};
+
 #define MAX_LMAC_PER_CGX		4
 
 #define OCTEONTX_SMC_PENDING		0x1
@@ -504,6 +514,17 @@ static int serdes_dbg_init(void)
 	struct arm_smccc_res res;
 	int ec;
 
+	/*
+	 * Compare response for standard SVC_UID commandi with OcteonTX UUID.
+	 * Continue only if it is OcteonTX.
+	 */
+	arm_smccc_smc(ARM_SMC_SVC_UID, 0, 0, 0, 0, 0, 0, 0, &res);
+	if (res.a0 != octeontx_svc_uuid[0] || res.a1 != octeontx_svc_uuid[1] ||
+	    res.a2 != octeontx_svc_uuid[2] || res.a3 != octeontx_svc_uuid[3]) {
+		pr_info("UIID SVC doesn't match OcteonTX. No serdes cmds.\n");
+		return 0;
+	}
+
 	arm_smccc_smc(OCTEONTX_SERDES_DBG_GET_MEM, 0, 0, 0, 0, 0, 0, 0, &res);
 	if (res.a0 == SMCCC_RET_NOT_SUPPORTED) {
 		pr_info("Firmware doesn't support serdes diagnostic cmds.\n");
-- 
2.31.1

