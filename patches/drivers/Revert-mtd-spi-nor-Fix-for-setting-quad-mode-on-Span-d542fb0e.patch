From a7e7f286ebe16757f2a082cd8f4bd543fef7f190 Mon Sep 17 00:00:00 2001
From: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
Date: Wed, 14 Oct 2020 17:11:50 +0530
Subject: [PATCH 1714/1851] Revert "mtd: spi-nor: Fix for setting quad mode on
 Spansion Flash in dual parallel"

commit 1159048b41adad02d2642888a428b8543ec05a86 from
https://github.com/Xilinx/linux-xlnx.git

This reverts commit da0ff45f65823c2985430ac2f86c7b64c08f0e16.

This patch changed the order of reading the status register and
configuration register when nor->isparallel is set, to avoid the
overwriting of sr_cr[1] by read_sr. It resolves the previous
issue but a new bug gets introduces. The sr_cr[0] value gets
overwritten after read_cr() API call as both *sr_cr and
nor->bouncebuf points to the same memory location.

Signed-off-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/mtd/spi-nor/spi-nor.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/mtd/spi-nor/spi-nor.c b/drivers/mtd/spi-nor/spi-nor.c
index 9d23b1ee4f8d..f3ee53e2b845 100644
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -2151,14 +2151,6 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 	u8 *sr_cr = nor->bouncebuf;
 	int ret;
 
-	/* Keep the current value of the Status Register. */
-	ret = read_sr(nor);
-	if (ret < 0) {
-		dev_err(dev, "error while reading status register\n");
-		return -EINVAL;
-	}
-	sr_cr[0] = ret;
-
 	/* Check current Quad Enable bit value. */
 	ret = read_cr(nor);
 	if (ret < 0) {
@@ -2170,6 +2162,15 @@ static int spansion_read_cr_quad_enable(struct spi_nor *nor)
 		return 0;
 
 	sr_cr[1] = ret | CR_QUAD_EN_SPAN;
+
+	/* Keep the current value of the Status Register. */
+	ret = read_sr(nor);
+	if (ret < 0) {
+		dev_err(dev, "error while reading status register\n");
+		return -EINVAL;
+	}
+	sr_cr[0] = ret;
+
 	ret = write_sr_cr(nor, sr_cr);
 	if (ret)
 		return ret;
-- 
2.31.1

