From e168ab68a0c2578c3a01663d4da74511883a372b Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@marvell.com>
Date: Sat, 26 Jan 2019 15:44:02 +0530
Subject: [PATCH 0025/1921] octeontx2-af: Verify NPA/SSO/NIX PF_FUNC mapping

While mapping a NIX LF to a NPA LF attached PF_FUNC or
other NPA/SSO/TIM LF's PF_FUNC config, verify if PF_FUNC
is valid and if that PF_FUNC has a LF of that block
attached to it.

Change-Id: Ia14c3ea2285b77dcdc4f2296d2a90d61deab9bde
Signed-off-by: Sunil Goutham <sgoutham@marvell.com>
[WK: The original patch got from Marvell sdk11.21.09]
Signed-off-by: Wenlin Kang <wenlin.kang@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/mbox.h   |  4 ++--
 .../ethernet/marvell/octeontx2/af/rvu_tim.c    | 18 ++++++++++++++++++
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/mbox.h b/drivers/net/ethernet/marvell/octeontx2/af/mbox.h
index 35028e3797a0..bda5133816fe 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/mbox.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/mbox.h
@@ -920,8 +920,8 @@ struct npc_get_kex_cfg_rsp {
  */
 enum tim_af_status {
 	TIM_AF_NO_RINGS_LEFT			= -801,
-	TIM_AF_INVALID_NPA_PF_FUNC		= -802,
-	TIM_AF_INVALID_SSO_PF_FUNC		= -803,
+	TIM_AF_INVAL_NPA_PF_FUNC		= -802,
+	TIM_AF_INVAL_SSO_PF_FUNC		= -803,
 	TIM_AF_RING_STILL_RUNNING		= -804,
 	TIM_AF_LF_INVALID			= -805,
 	TIM_AF_CSIZE_NOT_ALIGNED		= -806,
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_tim.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_tim.c
index 616ceae62422..993aa0c44ed4 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_tim.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_tim.c
@@ -89,6 +89,24 @@ int rvu_mbox_handler_tim_lf_alloc(struct rvu *rvu,
 	if (lf < 0)
 		return TIM_AF_LF_INVALID;
 
+	/* Check if requested 'TIMLF <=> NPALF' mapping is valid */
+	if (req->npa_pf_func) {
+		/* If default, use 'this' TIMLF's PFFUNC */
+		if (req->npa_pf_func == RVU_DEFAULT_PF_FUNC)
+			req->npa_pf_func = pcifunc;
+		if (!is_pffunc_map_valid(rvu, req->npa_pf_func, BLKTYPE_NPA))
+			return TIM_AF_INVAL_NPA_PF_FUNC;
+	}
+
+	/* Check if requested 'TIMLF <=> SSOLF' mapping is valid */
+	if (req->sso_pf_func) {
+		/* If default, use 'this' SSOLF's PFFUNC */
+		if (req->sso_pf_func == RVU_DEFAULT_PF_FUNC)
+			req->sso_pf_func = pcifunc;
+		if (!is_pffunc_map_valid(rvu, req->sso_pf_func, BLKTYPE_SSO))
+			return TIM_AF_INVAL_SSO_PF_FUNC;
+	}
+
 	regval = (((u64)req->npa_pf_func) << 16) |
 		 ((u64)req->sso_pf_func);
 	rvu_write64(rvu, blkaddr, TIM_AF_RINGX_GMCTL(lf), regval);
-- 
2.31.1

