From 1bcae520e663cc25fc0c3a3948e6697218c10f5b Mon Sep 17 00:00:00 2001
From: Tejas Patel <tejas.patel@xilinx.com>
Date: Wed, 17 Jun 2020 05:18:04 -0700
Subject: [PATCH 1382/1851] firmware: xilinx: Add support for
 GET_LAST_RESET_REASON IOCTL

commit 359ea9e80614bd1a2cf86e76a50c183fb96248e4 from
https://github.com/Xilinx/linux-xlnx.git

Add support to get last reason using IOCTL API.

Signed-off-by: Tejas Patel <tejas.patel@xilinx.com>
Reviewed-by: Jolly Shah <jolly.shah@xilinx.com>
State: pending
Signed-off-by: Yaliang Wang <Yaliang.Wang@windriver.com>
---
 drivers/firmware/xilinx/zynqmp.c     | 23 ++++++++++++++++++++++-
 include/linux/firmware/xlnx-zynqmp.h |  8 ++++++++
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/drivers/firmware/xilinx/zynqmp.c b/drivers/firmware/xilinx/zynqmp.c
index 4f2323bc2948..95a94aaa8cb1 100644
--- a/drivers/firmware/xilinx/zynqmp.c
+++ b/drivers/firmware/xilinx/zynqmp.c
@@ -2,7 +2,7 @@
 /*
  * Xilinx Zynq MPSoC Firmware layer
  *
- *  Copyright (C) 2014-2018 Xilinx, Inc.
+ *  Copyright (C) 2014-2020 Xilinx, Inc.
  *
  *  Michal Simek <michal.simek@xilinx.com>
  *  Davorin Mista <davorin.mista@aggios.com>
@@ -530,6 +530,7 @@ static inline int versal_is_valid_ioctl(u32 ioctl_id)
 	case IOCTL_PROBE_COUNTER_WRITE:
 	case IOCTL_USB_SET_STATE:
 	case IOCTL_OSPI_MUX_SELECT:
+	case IOCTL_GET_LAST_RESET_REASON:
 		return 1;
 	default:
 		return 0;
@@ -1219,6 +1220,26 @@ static int zynqmp_pm_secure_load(const u64 src_addr, u64 key_addr, u64 *dst)
 	return ret_value;
 }
 
+/**
+ * zynqmp_pm_get_last_reset_reason() - PM API for getting last reset reason
+ *
+ * @reset_reason:	last reset reason
+ *
+ * This function returns last reset reason
+ *
+ * Return: Returns status, either success or error+reason
+ */
+int zynqmp_pm_get_last_reset_reason(u32 *reset_reason)
+{
+	if (!reset_reason)
+		return -EINVAL;
+
+	return zynqmp_pm_invoke_fn(PM_IOCTL, 0,
+				   IOCTL_GET_LAST_RESET_REASON,
+				   0, 0, reset_reason);
+}
+EXPORT_SYMBOL_GPL(zynqmp_pm_get_last_reset_reason);
+
 static const struct zynqmp_eemi_ops eemi_ops = {
 	.get_api_version = zynqmp_pm_get_api_version,
 	.get_chipid = zynqmp_pm_get_chipid,
diff --git a/include/linux/firmware/xlnx-zynqmp.h b/include/linux/firmware/xlnx-zynqmp.h
index 2431e2c7adf3..9b8ba835cf13 100644
--- a/include/linux/firmware/xlnx-zynqmp.h
+++ b/include/linux/firmware/xlnx-zynqmp.h
@@ -180,6 +180,8 @@ enum pm_ioctl_id {
 	IOCTL_OSPI_MUX_SELECT,
 	/* IOCTL for USB power request */
 	IOCTL_USB_SET_STATE,
+	/* IOCTL to get last reset reason */
+	IOCTL_GET_LAST_RESET_REASON,
 };
 
 enum pm_query_id {
@@ -636,11 +638,17 @@ int zynqmp_pm_ggs_init(struct kobject *parent_kobj);
 
 #if IS_REACHABLE(CONFIG_ARCH_ZYNQMP)
 const struct zynqmp_eemi_ops *zynqmp_pm_get_eemi_ops(void);
+int zynqmp_pm_get_last_reset_reason(u32 *reset_reason);
 #else
 static inline struct zynqmp_eemi_ops *zynqmp_pm_get_eemi_ops(void)
 {
 	return ERR_PTR(-ENODEV);
 }
+
+static inline int zynqmp_pm_get_last_reset_reason(u32 *reset_reason)
+{
+	return -ENODEV;
+}
 #endif
 
 #endif /* __FIRMWARE_ZYNQMP_H__ */
-- 
2.31.1

