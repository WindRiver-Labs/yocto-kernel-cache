From 4a85038bebe6fd5c1d104335f41a7193aa6c610e Mon Sep 17 00:00:00 2001
From: Richard Gong <richard.gong@intel.com>
Date: Tue, 29 Jun 2021 11:19:03 -0500
Subject: [PATCH 16/42] crypto: intel_fcs: update for getting SHA2 digest

commit e832484195e6536dd5749b26a960ce5c32a98bbb from
https://github.com/altera-opensource/linux-socfpga/commits/socfpga-5.4.124-lts

Update to support getting SHA2 digest.

Signed-off-by: Richard Gong <richard.gong@intel.com>
Signed-off-by: Siew Chin Lim <elly.siew.chin.lim@intel.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 drivers/crypto/intel_fcs.c           | 90 ++++++++++++++++++++++++++++
 include/uapi/linux/intel_fcs-ioctl.h | 30 ++++++++++
 2 files changed, 120 insertions(+)

diff --git a/drivers/crypto/intel_fcs.c b/drivers/crypto/intel_fcs.c
index b9191c1feea7..b922786f62af 100644
--- a/drivers/crypto/intel_fcs.c
+++ b/drivers/crypto/intel_fcs.c
@@ -44,6 +44,9 @@
 #define CRYPTO_EXPORTED_KEY_OBJECT_MAX_SZ 364
 #define CRYPTO_GET_KEY_INFO_MAX_SZ 144
 
+#define CRYPTO_ECC_PARAM_SZ	4
+#define CRYPTO_ECC_DIGEST_SZ_OFFSET 4
+
 #define AES_CRYPT_CMD_MAX_SZ	SZ_4M /* set 4 Mb for now */
 
 #define SIGMA_SESSION_ID_ONE	0x1
@@ -111,6 +114,9 @@ static void fcs_vab_callback(struct stratix10_svc_client *client,
 		dev_err(client->dev, "request rejected\n");
 	} else if (data->status == BIT(SVC_STATUS_OK)) {
 		priv->status = 0;
+	} else if (data->status == BIT(SVC_STATUS_NO_SUPPORT)) {
+		priv->status = -EINVAL;
+		dev_err(client->dev, "firmware doesn't support...\n");
 	} else {
 		priv->status = -EINVAL;
 		dev_err(client->dev, "rejected, invalid param\n");
@@ -1476,6 +1482,90 @@ static long fcs_ioctl(struct file *file, unsigned int cmd,
 		 fcs_close_services(priv, ps_buf, NULL);
 		 break;
 
+	case INTEL_FCS_DEV_CRYPTO_GET_DIGEST:
+		 if (copy_from_user(data, (void __user *)arg, sizeof(*data))) {
+			 dev_err(dev, "failure on copy_from_user\n");
+			 return -EFAULT;
+		 }
+
+		 sid = data->com_paras.s_mac_data.sid;
+		 cid = data->com_paras.s_mac_data.cid;
+		 kuid = data->com_paras.s_mac_data.kuid;
+
+		 msg->command = COMMAND_FCS_CRYPTO_GET_DIGEST_INIT;
+		 msg->arg[0] = sid;
+		 msg->arg[1] = cid;
+		 msg->arg[2] = kuid;
+		 msg->arg[3] = CRYPTO_ECC_PARAM_SZ;
+		 msg->arg[4] = data->com_paras.s_mac_data.sha_op_mode |
+			       (data->com_paras.s_mac_data.sha_digest_sz <<
+			       CRYPTO_ECC_DIGEST_SZ_OFFSET);
+
+		 priv->client.receive_cb = fcs_vab_callback;
+		 ret = fcs_request_service(priv, (void *)msg,
+					   FCS_REQUEST_TIMEOUT);
+		 if (ret || priv->status) {
+			 dev_err(dev, "failed to send the cmd=%d,ret=%d, status=%d\n",
+				 COMMAND_FCS_CRYPTO_GET_DIGEST_INIT, ret, priv->status);
+			 return -EFAULT;
+		 }
+
+		 s_buf = stratix10_svc_allocate_memory(priv->chan,
+						       AES_CRYPT_CMD_MAX_SZ);
+		 if (!s_buf) {
+			 dev_err(dev, "failed allocate source buf\n");
+			 return -ENOMEM;
+		 }
+
+		 d_buf = stratix10_svc_allocate_memory(priv->chan,
+						       AES_CRYPT_CMD_MAX_SZ);
+		 if (!d_buf) {
+			 dev_err(dev, "failed allocate destation buf\n");
+			 fcs_close_services(priv, s_buf, NULL);
+			 return -ENOMEM;
+		 }
+
+		 memcpy(s_buf, data->com_paras.s_mac_data.src,
+			data->com_paras.s_mac_data.src_size);
+
+		 msg->command = COMMAND_FCS_CRYPTO_GET_DIGEST_FINALIZE;
+		 msg->arg[0] = sid;
+		 msg->arg[1] = cid;
+		 msg->payload = s_buf;
+		 msg->payload_length = data->com_paras.s_mac_data.src_size;
+		 msg->payload_output = d_buf;
+		 msg->payload_length_output = AES_CRYPT_CMD_MAX_SZ;
+		 priv->client.receive_cb = fcs_attestation_callback;
+
+		 ret = fcs_request_service(priv, (void *)msg,
+					   10 * FCS_REQUEST_TIMEOUT);
+		 if (!ret && !priv->status) {
+			 if (priv->size > AES_CRYPT_CMD_MAX_SZ) {
+				 dev_err(dev, "returned size %d is incorrect\n",
+					 priv->size);
+				 fcs_close_services(priv, s_buf, d_buf);
+				 return -EFAULT;
+			 }
+
+			 memcpy(data->com_paras.s_mac_data.dst,
+				priv->kbuf, priv->size);
+			 data->com_paras.s_mac_data.dst_size = priv->size;
+		 } else {
+			 data->com_paras.s_mac_data.dst = NULL;
+			 data->com_paras.s_mac_data.dst_size = 0;
+		 }
+
+		 data->status = priv->status;
+
+		 if (copy_to_user((void __user *)arg, data, sizeof(*data))) {
+			 dev_err(dev, "failure on copy_to_user\n");
+			 fcs_close_services(priv, s_buf, d_buf);
+			 ret = -EFAULT;
+		 }
+
+		 fcs_close_services(priv, s_buf, d_buf);
+		 break;
+
 	default:
 		dev_warn(dev, "shouldn't be here [0x%x]\n", cmd);
 		break;
diff --git a/include/uapi/linux/intel_fcs-ioctl.h b/include/uapi/linux/intel_fcs-ioctl.h
index 2367b8061fd3..7266f7788a52 100644
--- a/include/uapi/linux/intel_fcs-ioctl.h
+++ b/include/uapi/linux/intel_fcs-ioctl.h
@@ -280,6 +280,30 @@ struct fcs_aes_crypt {
 	struct fcs_acs_crypt_parameter cpara;
 };
 
+/**
+ * struct fcs_sha2_mac_data
+ * @sid: session ID
+ * @cid: context ID
+ * @kuid: key UID
+ * @src: source
+ * @src_size: size of source
+ * @dst: destination
+ * @dst_size: size of destination
+ * @sha_op_mode: SHA operating mode
+ * @sha_digest_sz: SHA digest size
+ */
+struct fcs_sha2_mac_data {
+	uint32_t sid;
+	uint32_t cid;
+	uint32_t kuid;
+	void *src;
+	uint32_t src_size;
+	void *dst;
+	uint32_t dst_size;
+	int sha_op_mode;
+	int sha_digest_sz;
+};
+
 /**
  * struct intel_fcs_dev_ioct: common structure passed to Linux
  *	kernel driver for all commands.
@@ -320,6 +344,7 @@ struct intel_fcs_dev_ioctl {
 		struct fcs_crypto_key_import		k_import;
 		struct fcs_crypto_key_object		k_object;
 		struct fcs_aes_crypt		a_crypt;
+		struct fcs_sha2_mac_data	s_mac_data;
 	} com_paras;
 };
 
@@ -373,6 +398,7 @@ enum intel_fcs_command_code {
 	INTEL_FCS_DEV_CRYPTO_REMOVE_KEY_CMD,
 	INTEL_FCS_DEV_CRYPTO_GET_KEY_INFO_CMD,
 	INTEL_FCS_DEV_CRYPTO_AES_CRYPT_CMD,
+	INTEL_FCS_DEV_CRYPTO_GET_DIGEST_CMD,
 };
 
 #define INTEL_FCS_DEV_VERSION_REQUEST \
@@ -463,5 +489,9 @@ enum intel_fcs_command_code {
 	_IOWR(INTEL_FCS_IOCTL, \
 	      INTEL_FCS_DEV_CRYPTO_AES_CRYPT_CMD, struct intel_fcs_dev_ioctl)
 
+#define INTEL_FCS_DEV_CRYPTO_GET_DIGEST \
+	_IOWR(INTEL_FCS_IOCTL, \
+	      INTEL_FCS_DEV_CRYPTO_GET_DIGEST_CMD, struct intel_fcs_dev_ioctl)
+
 #endif
 
-- 
2.31.1

