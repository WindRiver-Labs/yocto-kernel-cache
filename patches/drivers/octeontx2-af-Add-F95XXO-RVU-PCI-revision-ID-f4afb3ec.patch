From ce1fc6e580c59726ddff85da4653f5f2d46f3469 Mon Sep 17 00:00:00 2001
From: Geetha sowjanya <gakula@marvell.com>
Date: Mon, 15 Feb 2021 11:45:02 +0530
Subject: [PATCH 709/767] octeontx2-af: Add F95XXO RVU PCI revision ID

commit fd11362744e280c2300225cf72d2049e54b039f5 from
git@git.assembla.com:cavium/WindRiver.linux.git

This patch adds F95O PCI revision id to the platform check
and PTP subsystem id to the PCI device table.

Change-Id: I7d18441276cc487485fd40d9e224f9e91f538e36
Signed-off-by: Geetha sowjanya <gakula@marvell.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/45975
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Sunil Kovvuri Goutham <Sunil.Goutham@cavium.com>
Integrated-by: Abhishek Paliwal <paliwal.abhishek@windriver.com>
---
 .../net/ethernet/marvell/octeontx2/af/ptp.c   | 20 +++++++++++++------
 .../net/ethernet/marvell/octeontx2/af/rvu.c   |  5 ++---
 .../net/ethernet/marvell/octeontx2/af/rvu.h   | 19 +++++++-----------
 .../ethernet/marvell/octeontx2/af/rvu_fixes.c |  2 +-
 4 files changed, 24 insertions(+), 22 deletions(-)

diff --git a/drivers/net/ethernet/marvell/octeontx2/af/ptp.c b/drivers/net/ethernet/marvell/octeontx2/af/ptp.c
index 8d1a0ec7ad9f..f97e9347bf21 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/ptp.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/ptp.c
@@ -16,12 +16,14 @@
 
 #define DRV_NAME	"Marvell PTP Driver"
 
-#define PCI_DEVID_OCTEONTX2_PTP		0xA00C
-#define PCI_SUBSYS_DEVID_OCTX2_98xx_PTP	0xB100
-#define PCI_SUBSYS_DEVID_OCTX2_96XX_PTP	0xB200
-#define PCI_SUBSYS_DEVID_OCTX2_95XX_PTP	0xB300
-#define PCI_SUBSYS_DEVID_OCTX2_LOKI_PTP	0xB400
-#define PCI_DEVID_OCTEONTX2_RST		0xA085
+#define PCI_DEVID_OCTEONTX2_PTP			0xA00C
+#define PCI_SUBSYS_DEVID_OCTX2_98xx_PTP		0xB100
+#define PCI_SUBSYS_DEVID_OCTX2_96XX_PTP		0xB200
+#define PCI_SUBSYS_DEVID_OCTX2_95XX_PTP		0xB300
+#define PCI_SUBSYS_DEVID_OCTX2_LOKI_PTP		0xB400
+#define PCI_SUBSYS_DEVID_OCTX2_95MM_PTP		0xB500
+#define PCI_SUBSYS_DEVID_OCTX2_95XXO_PTP	0xB600
+#define PCI_DEVID_OCTEONTX2_RST			0xA085
 
 #define PCI_PTP_BAR_NO	0
 #define PCI_RST_BAR_NO	0
@@ -234,6 +236,12 @@ static const struct pci_device_id ptp_id_table[] = {
 	{ PCI_DEVICE_SUB(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_OCTEONTX2_PTP,
 			 PCI_VENDOR_ID_CAVIUM,
 			 PCI_SUBSYS_DEVID_OCTX2_LOKI_PTP) },
+	{ PCI_DEVICE_SUB(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_OCTEONTX2_PTP,
+			 PCI_VENDOR_ID_CAVIUM,
+			 PCI_SUBSYS_DEVID_OCTX2_95MM_PTP) },
+	{ PCI_DEVICE_SUB(PCI_VENDOR_ID_CAVIUM, PCI_DEVID_OCTEONTX2_PTP,
+			 PCI_VENDOR_ID_CAVIUM,
+			 PCI_SUBSYS_DEVID_OCTX2_95XXO_PTP) },
 	{ 0, }
 };
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
index 405eedf69c30..10e9ead10051 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.c
@@ -73,8 +73,7 @@ static void rvu_setup_hw_capabilities(struct rvu *rvu)
 	hw->cap.nix_shaper_toggle_wait = false;
 	hw->rvu = rvu;
 
-	if (is_rvu_96xx_B0(rvu) || is_rvu_95xx_A0(rvu) ||
-	    is_rvu_95xx_B0(rvu)) {
+	if (is_rvu_pre_96xx_C0(rvu)) {
 		hw->cap.nix_fixed_txschq_mapping = true;
 		hw->cap.nix_txsch_per_cgx_lmac = 4;
 		hw->cap.nix_txsch_per_lbk_lmac = 132;
@@ -84,7 +83,7 @@ static void rvu_setup_hw_capabilities(struct rvu *rvu)
 		if (is_rvu_96xx_A0(rvu) || is_rvu_95xx_A0(rvu))
 			hw->cap.nix_rx_multicast = false;
 	}
-	if (is_rvu_post_96xx_C0(rvu))
+	if (!is_rvu_pre_96xx_C0(rvu))
 		hw->cap.nix_shaper_toggle_wait = true;
 }
 
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
index 267be7291cb8..49aecb329f80 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu.h
@@ -504,13 +504,13 @@ static inline u64 rvupf_read64(struct rvu *rvu, u64 offset)
 }
 
 /* Silicon revisions */
-
-static inline bool is_rvu_post_96xx_C0(struct rvu *rvu)
+static inline bool is_rvu_pre_96xx_C0(struct rvu *rvu)
 {
 	struct pci_dev *pdev = rvu->pdev;
 
-	return (pdev->revision == 0x08) || (pdev->revision == 0x30) ||
-		(pdev->revision == 0x20);
+	return ((pdev->revision == 0x00) || (pdev->revision == 0x01) ||
+		(pdev->revision == 0x10) || (pdev->revision == 0x11) ||
+		(pdev->revision == 0x14));
 }
 
 static inline bool is_rvu_96xx_A0(struct rvu *rvu)
@@ -527,13 +527,6 @@ static inline bool is_rvu_96xx_B0(struct rvu *rvu)
 	return (pdev->revision == 0x00) || (pdev->revision == 0x01);
 }
 
-static inline bool is_rvu_95xx_B0(struct rvu *rvu)
-{
-	struct pci_dev *pdev = rvu->pdev;
-
-	return (pdev->revision == 0x14);
-}
-
 static inline bool is_rvu_95xx_A0(struct rvu *rvu)
 {
 	struct pci_dev *pdev = rvu->pdev;
@@ -550,6 +543,7 @@ static inline bool is_rvu_95xx_A0(struct rvu *rvu)
 #define PCI_REVISION_ID_LOKI		0x20
 #define PCI_REVISION_ID_98XX		0x30
 #define PCI_REVISION_ID_95XXMM		0x40
+#define PCI_REVISION_ID_95XXO		0xE0
 
 static inline bool is_rvu_otx2(struct rvu *rvu)
 {
@@ -559,7 +553,8 @@ static inline bool is_rvu_otx2(struct rvu *rvu)
 
 	return (midr == PCI_REVISION_ID_96XX || midr == PCI_REVISION_ID_95XX ||
 		midr == PCI_REVISION_ID_LOKI || midr == PCI_REVISION_ID_98XX ||
-		midr == PCI_REVISION_ID_95XXMM);
+		midr == PCI_REVISION_ID_95XXMM ||
+		midr == PCI_REVISION_ID_95XXO);
 }
 
 static inline bool is_cgx_mapped_to_nix(unsigned short id, u8 cgx_id)
diff --git a/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c b/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
index 8834edbd735d..63742785c447 100644
--- a/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
+++ b/drivers/net/ethernet/marvell/octeontx2/af/rvu_fixes.c
@@ -890,7 +890,7 @@ int rvu_nix_fixes_init(struct rvu *rvu, struct nix_hw *nix_hw, int blkaddr)
 	if (is_rvu_96xx_A0(rvu))
 		rvu_write64(rvu, blkaddr, NIX_AF_CFG,
 			    rvu_read64(rvu, blkaddr, NIX_AF_CFG) | 0x5EULL);
-	if (!is_rvu_post_96xx_C0(rvu))
+	if (is_rvu_pre_96xx_C0(rvu))
 		rvu_write64(rvu, blkaddr, NIX_AF_CFG,
 			    rvu_read64(rvu, blkaddr, NIX_AF_CFG) | 0x40ULL);
 
-- 
2.31.1

