From dcf13246d3b596eee367c8444c167934b4678652 Mon Sep 17 00:00:00 2001
From: Catalin Enache <catalin.enache@windriver.com>
Date: Tue, 28 Jul 2020 10:57:42 +0300
Subject: [PATCH 1/5] Revert "i2c: cadence: keep bus_hold_flag unless
 I2C_M_NOSTART is set"

This reverts commit a49f32b3cb4c1dc38846eb10ecef205e390625fa.

This commit introduced i2c-related regressions (kernel panic, kernel stack
corruptions) under stress test conditions (r/w to a RTC). With this commit
reverted, the issue is no longer present.

Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 drivers/i2c/busses/i2c-cadence.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/drivers/i2c/busses/i2c-cadence.c b/drivers/i2c/busses/i2c-cadence.c
index 42c207a35714..46b1a141f78a 100644
--- a/drivers/i2c/busses/i2c-cadence.c
+++ b/drivers/i2c/busses/i2c-cadence.c
@@ -628,12 +628,10 @@ static void cdns_i2c_mrecv(struct cdns_i2c *id)
 	 * Check for the message size against FIFO depth and set the
 	 * 'hold bus' bit if it is greater than FIFO depth.
 	 */
-	if ((id->recv_count > CDNS_I2C_FIFO_DEPTH)  || id->bus_hold_flag) {
+	if ((id->recv_count > CDNS_I2C_FIFO_DEPTH)  || id->bus_hold_flag)
 		ctrl_reg |= CDNS_I2C_CR_HOLD;
-	} else {
-		if (id->p_msg->flags & I2C_M_NOSTART)
-			ctrl_reg = ctrl_reg & ~CDNS_I2C_CR_HOLD;
-	}
+	else
+		ctrl_reg = ctrl_reg & ~CDNS_I2C_CR_HOLD;
 
 	cdns_i2c_writereg(ctrl_reg, CDNS_I2C_CR_OFFSET);
 
-- 
2.17.1

