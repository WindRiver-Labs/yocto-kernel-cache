From 3432aafd13578beddc3f86967bacd0ae1048170a Mon Sep 17 00:00:00 2001
From: Haiqing Bai <Haiqing.Bai@windriver.com>
Date: Mon, 19 Oct 2020 07:16:33 +0000
Subject: [PATCH 2/2] Revert "drivers: gicv3: fetches atf mem region for LPI
 prop and pend tables"

This reverts commit cefeae7aaa6a16eea5c7efe2926deae0370dc6ff.

It's confirmed that this patch should not be backported into
this kernel. All code of the original commit are reverted
except the code added in "include/linux/irqchip/irq-gic-v3-fixes.h"
and "drivers/irqchip/irq-gic-v3-fixes.c"
by commit 584509b8ba2a1226389fc921513f2ede29d5a153
(irqchip/gic-v3: Add workaround for interrupt loss on IPI)

Signed-off-by: Haiqing Bai<Haiqing.Bai@windriver.com>
---
 drivers/irqchip/irq-gic-v3-fixes.c       | 76 ------------------------
 drivers/irqchip/irq-gic-v3-its.c         | 32 ++++------
 include/linux/irqchip/arm-gic-v3.h       |  3 -
 include/linux/irqchip/irq-gic-v3-fixes.h |  6 --
 4 files changed, 11 insertions(+), 106 deletions(-)

diff --git a/drivers/irqchip/irq-gic-v3-fixes.c b/drivers/irqchip/irq-gic-v3-fixes.c
index e9f7548ba7fe..8cc47b3c45a0 100644
--- a/drivers/irqchip/irq-gic-v3-fixes.c
+++ b/drivers/irqchip/irq-gic-v3-fixes.c
@@ -18,9 +18,6 @@
 
 #include "irq-gic-common.h"
 
-#define OCTEONTX_LPI_PROP_TBL_BASE      0xc2000c0c
-#define gic_data_rdist()		(raw_cpu_ptr(gic_rdists->rdist))
-
 enum ipi_msg_type {
 	IPI_RESCHEDULE,
 	IPI_CALL_FUNC,
@@ -161,76 +158,3 @@ void gic_v3_enable_quirks(void __iomem *base)
 
 	gic_enable_quirks(iidr, gicv3_quirks, NULL);
 }
-
-struct page *its_prop_alloc_pages(struct rdists *gic_rdists,
-				size_t prop_tbl_sz,  gfp_t gfp_flags)
-{
-	struct page *prop_page;
-	struct arm_smccc_res res;
-	void *vaddr;
-
-	gic_rdists->prop_table_pa = 0;
-	gic_rdists->prop_table_va = NULL;
-	arm_smccc_smc(OCTEONTX_LPI_PROP_TBL_BASE, 0, 0, 0, 0, 0, 0, 0, &res);
-	if (res.a0 == SMCCC_RET_SUCCESS) {
-		vaddr = memremap(res.a1, prop_tbl_sz, MEMREMAP_WB);
-		if (!vaddr)
-			return NULL;
-
-		gic_rdists->prop_table_pa = res.a1;
-		gic_rdists->prop_table_va = vaddr;
-		prop_page = NULL;
-	} else {
-		prop_page = alloc_pages(gfp_flags, get_order(prop_tbl_sz));
-		if (!prop_page)
-			return NULL;
-
-		gic_rdists->prop_table_pa = page_to_phys(prop_page);
-		gic_rdists->prop_table_va = page_address(prop_page);
-	}
-
-	return prop_page;
-}
-
-struct page *its_pend_alloc_pages(struct rdists *gic_rdists,
-		size_t prop_tbl_sz, size_t pend_tbl_sz, gfp_t gfp_flags)
-{
-	struct page *pend_page;
-	void *vaddr;
-
-	gic_data_rdist()->pend_paddr = 0;
-	gic_data_rdist()->pend_vaddr = NULL;
-
-	if (!gic_rdists->prop_page) {
-		phys_addr_t paddr;
-
-		paddr = gic_rdists->prop_table_pa +
-			prop_tbl_sz +
-			pend_tbl_sz * smp_processor_id();
-		vaddr = memremap(paddr, pend_tbl_sz, MEMREMAP_WB);
-		if (!vaddr)
-			return NULL;
-
-		memset(vaddr, 0, pend_tbl_sz);
-		gic_data_rdist()->pend_paddr = paddr;
-		gic_data_rdist()->pend_vaddr = vaddr;
-		pend_page = NULL;
-	} else {
-		pend_page = alloc_pages(gfp_flags | __GFP_ZERO,
-			      get_order(max_t(u32, pend_tbl_sz, SZ_64K)));
-		if (!pend_page)
-			return NULL;
-
-		gic_data_rdist()->pend_paddr = page_to_phys(pend_page);
-		gic_data_rdist()->pend_vaddr = page_address(pend_page);
-	}
-
-	return pend_page;
-}
-
-int redist_lpis_enabled(struct rdists *gic_rdists)
-{
-	void __iomem *rbase = gic_data_rdist()->rd_base;
-
-	return (readl_relaxed(rbase + GICR_CTLR) & GICR_CTLR_ENABLE_LPIS);
-}
diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
index e2003100639a..0e8c08ce2cd6 100644
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@ -31,7 +31,6 @@
 #include <linux/irqchip.h>
 #include <linux/irqchip/arm-gic-v3.h>
 #include <linux/irqchip/arm-gic-v4.h>
-#include <linux/irqchip/irq-gic-v3-fixes.h>
 
 #include <asm/cputype.h>
 #include <asm/exception.h>
@@ -1639,12 +1638,11 @@ static struct page *its_allocate_prop_table(gfp_t gfp_flags)
 {
 	struct page *prop_page;
 
-	prop_page = its_prop_alloc_pages(gic_rdists,
-					LPI_PROPBASE_SZ, gfp_flags);
-	if (!prop_page && !gic_rdists->prop_table_va)
+	prop_page = alloc_pages(gfp_flags, get_order(LPI_PROPBASE_SZ));
+	if (!prop_page)
 		return NULL;
 
-	gic_reset_prop_table(gic_rdists->prop_table_va);
+	gic_reset_prop_table(page_address(prop_page));
 
 	return prop_page;
 }
@@ -2016,13 +2014,13 @@ static struct page *its_allocate_pending_table(gfp_t gfp_flags)
 {
 	struct page *pend_page;
 
-	pend_page = its_pend_alloc_pages(gic_rdists, LPI_PROPBASE_SZ,
-				LPI_PENDBASE_SZ, gfp_flags | __GFP_ZERO);
-	if (!pend_page && !gic_data_rdist()->pend_vaddr)
+	pend_page = alloc_pages(gfp_flags | __GFP_ZERO,
+				get_order(LPI_PENDBASE_SZ));
+	if (!pend_page)
 		return NULL;
 
 	/* Make sure the GIC will observe the zero-ed page */
-	gic_flush_dcache_to_poc(gic_data_rdist()->pend_vaddr, LPI_PENDBASE_SZ);
+	gic_flush_dcache_to_poc(page_address(pend_page), LPI_PENDBASE_SZ);
 
 	return pend_page;
 }
@@ -2166,7 +2164,6 @@ static void its_cpu_init_lpis(void)
 			val &= ~(GICR_PROPBASER_SHAREABILITY_MASK |
 				 GICR_PROPBASER_CACHEABILITY_MASK);
 			val |= GICR_PROPBASER_nC;
-
 			gicr_write_propbaser(val, rbase + GICR_PROPBASER);
 		}
 		pr_info_once("GIC: using cache flushing for LPI property table\n");
@@ -2174,7 +2171,7 @@ static void its_cpu_init_lpis(void)
 	}
 
 	/* set PENDBASE */
-	val = (gic_data_rdist()->pend_paddr |
+	val = (page_to_phys(pend_page) |
 	       GICR_PENDBASER_InnerShareable |
 	       GICR_PENDBASER_RaWaWb);
 
@@ -3793,16 +3790,9 @@ int its_cpu_init(void)
 	if (!list_empty(&its_nodes)) {
 		int ret;
 
-		/*
-		 * This field resets to 0 after power up and is
-		 * set to 1 during Primary Kernel booting and is
-		 * RES1 for Secondary Kerenl booting.
-		 */
-		if (!redist_lpis_enabled(gic_rdists)) {
-			ret = redist_disable_lpis();
-			if (ret)
-				return ret;
-		}
+		ret = redist_disable_lpis();
+		if (ret)
+			return ret;
 
 		its_cpu_init_lpis();
 		its_cpu_init_collections();
diff --git a/include/linux/irqchip/arm-gic-v3.h b/include/linux/irqchip/arm-gic-v3.h
index f439e3e85a86..67c4b9806d43 100644
--- a/include/linux/irqchip/arm-gic-v3.h
+++ b/include/linux/irqchip/arm-gic-v3.h
@@ -577,12 +577,9 @@ struct rdists {
 	struct {
 		void __iomem	*rd_base;
 		struct page	*pend_page;
-		phys_addr_t	pend_paddr;
-		void		*pend_vaddr;
 		phys_addr_t	phys_base;
 		bool		lpi_enabled;
 	} __percpu		*rdist;
-	struct page		*prop_page;
 	phys_addr_t		prop_table_pa;
 	void			*prop_table_va;
 	u64			flags;
diff --git a/include/linux/irqchip/irq-gic-v3-fixes.h b/include/linux/irqchip/irq-gic-v3-fixes.h
index 0729b49007ec..87d81f76168e 100644
--- a/include/linux/irqchip/irq-gic-v3-fixes.h
+++ b/include/linux/irqchip/irq-gic-v3-fixes.h
@@ -21,11 +21,5 @@ void gic_write_sgi1r_retry(int dest_cpu, int irq, u64 val);
 void gic_v3_enable_quirks(void __iomem *base);
 void gic_v3_enable_ipimiss_quirk(void);
 
-struct page *its_prop_alloc_pages(struct rdists *gic_rdists,
-				size_t prop_tbl_sz,  gfp_t gfp_flags);
-struct page *its_pend_alloc_pages(struct rdists *gic_rdists,
-		size_t prop_tbl_sz, size_t pend_tbl_sz, gfp_t gfp_flags);
-int redist_lpis_enabled(struct rdists *gic_rdists);
-
 #endif
 
-- 
2.17.1

