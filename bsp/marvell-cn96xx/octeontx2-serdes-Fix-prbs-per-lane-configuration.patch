From dd62d9860c96b33d5cee3cc0f7f3a6863ba77657 Mon Sep 17 00:00:00 2001
From: Chandrakala Chavva <Chandrakala.Chavva@cavium.com>
Date: Mon, 20 Jul 2020 23:53:37 -0700
Subject: [PATCH 05/11] octeontx2-serdes: Fix prbs per lane configuration

commit cee490efe398367ced3b091050746266d794342e from
git@git.assembla.com:cavium/WindRiver.linux.git

Create a separate list for each lane, instead of per qlm, so that
prbs can be disabled per lane.

Change-Id: I92a47287289a381acf6643545ef79ea1c97f5971
Signed-off-by: Selvam Venkatachalam <svenkatachalam@cavium.com>
Signed-off-by: Chandrakala Chavva <Chandrakala.Chavva@cavium.com>
Reviewed-on: https://sj1git1.cavium.com/c/IP/SW/kernel/linux/+/32593
Tested-by: sa_ip-sw-jenkins <sa_ip-sw-jenkins@marvell.com>
Reviewed-by: Chandrakala Chavva <cchavva@marvell.com>
Signed-off-by: Kevin Hao <kexin.hao@windriver.com>
---
 .../marvell/octeontx2-serdes/serdes_debugfs.c | 40 +++++++++----------
 1 file changed, 19 insertions(+), 21 deletions(-)

diff --git a/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c b/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
index f5930a9c6bf1..2aefded80a87 100644
--- a/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
+++ b/drivers/soc/marvell/octeontx2-serdes/serdes_debugfs.c
@@ -72,6 +72,7 @@ struct cgx_prbs_data {
 struct prbs_status {
 	struct list_head list;
 	int qlm;
+	int qlm_lane;
 	long start_time;
 	struct prbs_status *next;
 };
@@ -445,7 +446,7 @@ static int serdes_dbg_prbs_lane_parse(const char __user *buffer,
 	subtoken = strsep(&cmd_buf, " ");
 	ec = subtoken ? kstrtoint(subtoken, 10, qlm_lane) : -EINVAL;
 
-	if (ec == -EINVAL) {
+	if (ec == -EINVAL || *qlm_lane < 0) {
 		kfree(cmd_buf_tmp);
 		return ec;
 	}
@@ -502,7 +503,8 @@ static ssize_t serdes_dbg_prbs_write_op(struct file *filp,
 		list_for_each_entry(status,
 				    &prbs_cmd_data.status_list.list,
 				    list) {
-			if (status->qlm == qlm)
+			if ((status->qlm == qlm) &&
+					(status->qlm_lane == qlm_lane))
 				break;
 		}
 
@@ -528,14 +530,13 @@ static ssize_t serdes_dbg_prbs_write_op(struct file *filp,
 			if (status == NULL)
 				return -ENOMEM;
 			status->qlm = qlm;
+			status->qlm_lane = qlm_lane;
 			list_add(&status->list,
 				 &prbs_cmd_data.status_list.list);
 		}
 		status->start_time = get_seconds();
-		if (qlm_lane == -1)
-			pr_info("GSER PRBS-%d start on QLM %d (all lanes).\n", mode, qlm);
-		else
-			pr_info("GSER PRBS-%d start on QLM %d on lane %d.\n", mode, qlm, qlm_lane);
+		pr_info("GSER PRBS-%d start on QLM %d on lane %d.\n", mode,
+				qlm, qlm_lane);
 		break;
 
 	case CGX_PRBS_STOP_CMD:
@@ -548,16 +549,15 @@ static ssize_t serdes_dbg_prbs_write_op(struct file *filp,
 		list_for_each_entry(status,
 				    &prbs_cmd_data.status_list.list,
 				    list) {
-			if (status->qlm == qlm) {
+			if ((status->qlm == qlm) &&
+					(status->qlm_lane == qlm_lane)) {
 				list_del(&status->list);
 				kfree(status);
 				break;
 			}
 		}
-		if (qlm_lane == -1)
-			pr_info("GSER PRBS stop on QLM %d on all lanes.\n", qlm);
-		else
-			pr_info("GSER PRBS stop on QLM %d on Lane %d.\n", qlm, qlm_lane);
+		pr_info("GSER PRBS stop on QLM %d on Lane %d.\n", qlm,
+				qlm_lane);
 		break;
 
 	case CGX_PRBS_CLEAR_CMD:
@@ -567,15 +567,13 @@ static ssize_t serdes_dbg_prbs_write_op(struct file *filp,
 			pr_info("GSER prbs clear command failed.\n");
 			return -EIO;
 		}
-		if (qlm_lane == -1)
-			pr_info("GSER PRBS errors cleared on QLM%d\n", qlm);
-		else
-			pr_info("GSER PRBS errors cleared on QLM%d Lane%d\n",
-					qlm, qlm_lane);
+		pr_info("GSER PRBS errors cleared on QLM%d Lane%d\n", qlm,
+				qlm_lane);
 		break;
 
 	default:
-		pr_info("GSER PRBS set QLM %d to read.\n", qlm);
+		pr_info("GSER PRBS set QLM %d Lane %d to read.\n", qlm,
+				qlm_lane);
 		break;
 	}
 
@@ -604,8 +602,8 @@ static int serdes_dbg_prbs_read_op(struct seq_file *s, void *unused)
 	}
 
 	if (time == -1) {
-		seq_printf(s, "GSER PRBS not started for qlm %d lane%d.\n",
-				qlm, lane);
+		seq_printf(s, "GSER PRBS not started for QLM%d.Lane%d.\n", qlm,
+			lane);
 		return 0;
 	}
 
@@ -615,8 +613,8 @@ static int serdes_dbg_prbs_read_op(struct seq_file *s, void *unused)
 		      qlm, 0, lane, 0, 0, 0, &res);
 
 	if (res.a0 != SMCCC_RET_SUCCESS) {
-		seq_printf(s, "GSER prbs get command failed for QLM%d Lane%d\n",
-				qlm, lane);
+		seq_printf(s, "GSER prbs get command failed for QLM%d.Lane%d.\n",
+			qlm, lane);
 		return 0;
 	}
 
-- 
2.17.1

