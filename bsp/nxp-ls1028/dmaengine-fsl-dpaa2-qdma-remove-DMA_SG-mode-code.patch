From 7ef810c5d139b5c659929b4b3c80e55a8bf07be6 Mon Sep 17 00:00:00 2001
From: Peng Ma <peng.ma@nxp.com>
Date: Mon, 12 Nov 2018 19:24:16 +0800
Subject: [PATCH 062/741] dmaengine: fsl-dpaa2-qdma: remove DMA_SG mode code

commit a0de53726658834b509d3d69762a6fb46befeb0c from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

There are no in kernel consumers for DMA_SG op. Removing dead code,
structs.

Signed-off-by: Peng Ma <peng.ma@nxp.com>

dpaa2-qdma: update dpaa2_io_service_register calls

The dpaa2_io_service_[de]register functions have a new parameter -
the device that requires the [de]register. Update all calls to
these functions.

Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/dma/dpaa2-qdma/dpaa2-qdma.c | 188 +---------------------------
 drivers/dma/dpaa2-qdma/dpaa2-qdma.h |  53 --------
 2 files changed, 5 insertions(+), 236 deletions(-)

diff --git a/drivers/dma/dpaa2-qdma/dpaa2-qdma.c b/drivers/dma/dpaa2-qdma/dpaa2-qdma.c
index e180f65393ff..49a3d61eed47 100644
--- a/drivers/dma/dpaa2-qdma/dpaa2-qdma.c
+++ b/drivers/dma/dpaa2-qdma/dpaa2-qdma.c
@@ -103,9 +103,6 @@ dpaa2_qdma_request_desc(struct dpaa2_qdma_chan *dpaa2_chan)
 				sizeof(struct dpaa2_fl_entry) * 3;
 
 		comp_temp->qchan = dpaa2_chan;
-		comp_temp->sg_blk_num = 0;
-		INIT_LIST_HEAD(&comp_temp->sg_src_head);
-		INIT_LIST_HEAD(&comp_temp->sg_dst_head);
 		return comp_temp;
 	}
 	comp_temp = list_first_entry(&dpaa2_chan->comp_free,
@@ -231,155 +228,6 @@ static struct dma_async_tx_descriptor *dpaa2_qdma_prep_memcpy(
 	return vchan_tx_prep(&dpaa2_chan->vchan, &dpaa2_comp->vdesc, flags);
 }
 
-static struct qdma_sg_blk *dpaa2_qdma_get_sg_blk(
-	struct dpaa2_qdma_comp *dpaa2_comp,
-	struct dpaa2_qdma_chan *dpaa2_chan)
-{
-	struct qdma_sg_blk *sg_blk = NULL;
-	dma_addr_t phy_sgb;
-	unsigned long flags;
-
-	spin_lock_irqsave(&dpaa2_chan->queue_lock, flags);
-	if (list_empty(&dpaa2_chan->sgb_free)) {
-		sg_blk = (struct qdma_sg_blk *)dma_pool_alloc(
-				dpaa2_chan->sg_blk_pool,
-				GFP_NOWAIT, &phy_sgb);
-		if (!sg_blk) {
-			spin_unlock_irqrestore(&dpaa2_chan->queue_lock, flags);
-			return sg_blk;
-		}
-		sg_blk->blk_virt_addr = (void *)(sg_blk + 1);
-		sg_blk->blk_bus_addr = phy_sgb + sizeof(*sg_blk);
-	} else {
-		sg_blk = list_first_entry(&dpaa2_chan->sgb_free,
-			struct qdma_sg_blk, list);
-		list_del(&sg_blk->list);
-	}
-	spin_unlock_irqrestore(&dpaa2_chan->queue_lock, flags);
-
-	return sg_blk;
-}
-
-static uint32_t dpaa2_qdma_populate_sg(struct device *dev,
-		struct dpaa2_qdma_chan *dpaa2_chan,
-		struct dpaa2_qdma_comp *dpaa2_comp,
-		struct scatterlist *dst_sg, u32 dst_nents,
-		struct scatterlist *src_sg, u32 src_nents)
-{
-	struct dpaa2_qdma_sg *src_sge;
-	struct dpaa2_qdma_sg *dst_sge;
-	struct qdma_sg_blk *sg_blk;
-	struct qdma_sg_blk *sg_blk_dst;
-	dma_addr_t src;
-	dma_addr_t dst;
-	uint32_t num;
-	uint32_t blocks;
-	uint32_t len = 0;
-	uint32_t total_len = 0;
-	int i, j = 0;
-
-	num = min(dst_nents, src_nents);
-	blocks = num / (NUM_SG_PER_BLK - 1);
-	if (num % (NUM_SG_PER_BLK - 1))
-		blocks += 1;
-	if (dpaa2_comp->sg_blk_num < blocks) {
-		len = blocks - dpaa2_comp->sg_blk_num;
-		for (i = 0; i < len; i++) {
-			/* source sg blocks */
-			sg_blk = dpaa2_qdma_get_sg_blk(dpaa2_comp, dpaa2_chan);
-			if (!sg_blk)
-				return 0;
-			list_add_tail(&sg_blk->list, &dpaa2_comp->sg_src_head);
-			/* destination sg blocks */
-			sg_blk = dpaa2_qdma_get_sg_blk(dpaa2_comp, dpaa2_chan);
-			if (!sg_blk)
-				return 0;
-			list_add_tail(&sg_blk->list, &dpaa2_comp->sg_dst_head);
-		}
-	} else {
-		len = dpaa2_comp->sg_blk_num - blocks;
-		for (i = 0; i < len; i++) {
-			spin_lock(&dpaa2_chan->queue_lock);
-			/* handle source sg blocks */
-			sg_blk = list_first_entry(&dpaa2_comp->sg_src_head,
-					struct qdma_sg_blk, list);
-			list_del(&sg_blk->list);
-			list_add_tail(&sg_blk->list, &dpaa2_chan->sgb_free);
-			/* handle destination sg blocks */
-			sg_blk = list_first_entry(&dpaa2_comp->sg_dst_head,
-					struct qdma_sg_blk, list);
-			list_del(&sg_blk->list);
-			list_add_tail(&sg_blk->list, &dpaa2_chan->sgb_free);
-			spin_unlock(&dpaa2_chan->queue_lock);
-		}
-	}
-	dpaa2_comp->sg_blk_num = blocks;
-
-	/* get the first source sg phy address */
-	sg_blk = list_first_entry(&dpaa2_comp->sg_src_head,
-				struct qdma_sg_blk, list);
-	dpaa2_comp->sge_src_bus_addr = sg_blk->blk_bus_addr;
-	/* get the first destinaiton sg phy address */
-	sg_blk_dst = list_first_entry(&dpaa2_comp->sg_dst_head,
-				struct qdma_sg_blk, list);
-	dpaa2_comp->sge_dst_bus_addr = sg_blk_dst->blk_bus_addr;
-
-	for (i = 0; i < blocks; i++) {
-		src_sge = (struct dpaa2_qdma_sg *)sg_blk->blk_virt_addr;
-		dst_sge = (struct dpaa2_qdma_sg *)sg_blk_dst->blk_virt_addr;
-
-		for (j = 0; j < (NUM_SG_PER_BLK - 1); j++) {
-			len = min(sg_dma_len(dst_sg), sg_dma_len(src_sg));
-			if (0 == len)
-				goto fetch;
-			total_len += len;
-			src = sg_dma_address(src_sg);
-			dst = sg_dma_address(dst_sg);
-
-			/* source SG */
-			src_sge->addr_lo = src;
-			src_sge->addr_hi = (src >> 32);
-			src_sge->data_len.data_len_sl0 = len;
-			src_sge->ctrl.sl = QDMA_SG_SL_LONG;
-			src_sge->ctrl.fmt = QDMA_SG_FMT_SDB;
-			/* destination SG */
-			dst_sge->addr_lo = dst;
-			dst_sge->addr_hi = (dst >> 32);
-			dst_sge->data_len.data_len_sl0 = len;
-			dst_sge->ctrl.sl = QDMA_SG_SL_LONG;
-			dst_sge->ctrl.fmt = QDMA_SG_FMT_SDB;
-fetch:
-			num--;
-			if (0 == num) {
-				src_sge->ctrl.f = QDMA_SG_F;
-				dst_sge->ctrl.f = QDMA_SG_F;
-				goto end;
-			}
-			dst_sg = sg_next(dst_sg);
-			src_sg = sg_next(src_sg);
-			src_sge++;
-			dst_sge++;
-			if (j == (NUM_SG_PER_BLK - 2)) {
-				/* for next blocks, extension */
-				sg_blk = list_next_entry(sg_blk, list);
-				sg_blk_dst = list_next_entry(sg_blk_dst, list);
-				src_sge->addr_lo = sg_blk->blk_bus_addr;
-				src_sge->addr_hi = sg_blk->blk_bus_addr >> 32;
-				src_sge->ctrl.sl = QDMA_SG_SL_LONG;
-				src_sge->ctrl.fmt = QDMA_SG_FMT_SGTE;
-				dst_sge->addr_lo = sg_blk_dst->blk_bus_addr;
-				dst_sge->addr_hi =
-					sg_blk_dst->blk_bus_addr >> 32;
-				dst_sge->ctrl.sl = QDMA_SG_SL_LONG;
-				dst_sge->ctrl.fmt = QDMA_SG_FMT_SGTE;
-			}
-		}
-	}
-
-end:
-	return total_len;
-}
-
 static enum dma_status dpaa2_qdma_tx_status(struct dma_chan *chan,
 		dma_cookie_t cookie, struct dma_tx_state *txstate)
 {
@@ -593,7 +441,7 @@ static int __cold dpaa2_qdma_dpio_setup(struct dpaa2_qdma_priv *priv)
 		ppriv->nctx.desired_cpu = 1;
 		ppriv->nctx.id = ppriv->rsp_fqid;
 		ppriv->nctx.cb = dpaa2_qdma_fqdan_cb;
-		err = dpaa2_io_service_register(NULL, &ppriv->nctx);
+		err = dpaa2_io_service_register(NULL, &ppriv->nctx, dev);
 		if (err) {
 			dev_err(dev, "Notification register failed\n");
 			goto err_service;
@@ -611,11 +459,11 @@ static int __cold dpaa2_qdma_dpio_setup(struct dpaa2_qdma_priv *priv)
 	return 0;
 
 err_store:
-	dpaa2_io_service_deregister(NULL, &ppriv->nctx);
+	dpaa2_io_service_deregister(NULL, &ppriv->nctx, dev);
 err_service:
 	ppriv--;
 	while (ppriv >= priv->ppriv) {
-		dpaa2_io_service_deregister(NULL, &ppriv->nctx);
+		dpaa2_io_service_deregister(NULL, &ppriv->nctx, dev);
 		dpaa2_io_store_destroy(ppriv->store);
 		ppriv--;
 	}
@@ -636,10 +484,11 @@ static void __cold dpaa2_dpmai_store_free(struct dpaa2_qdma_priv *priv)
 static void __cold dpaa2_dpdmai_dpio_free(struct dpaa2_qdma_priv *priv)
 {
 	struct dpaa2_qdma_priv_per_prio *ppriv = priv->ppriv;
+	struct device *dev = priv->dev;
 	int i;
 
 	for (i = 0; i < priv->num_pairs; i++) {
-		dpaa2_io_service_deregister(NULL, &ppriv->nctx);
+		dpaa2_io_service_deregister(NULL, &ppriv->nctx, dev);
 		ppriv++;
 	}
 }
@@ -696,22 +545,6 @@ static int __cold dpaa2_dpdmai_dpio_unbind(struct dpaa2_qdma_priv *priv)
 	return err;
 }
 
-static void __cold dpaa2_dpdmai_free_pool(struct dpaa2_qdma_chan *qchan,
-							struct list_head *head)
-{
-	struct qdma_sg_blk *sgb_tmp, *_sgb_tmp;
-	/* free the QDMA SG pool block */
-	list_for_each_entry_safe(sgb_tmp, _sgb_tmp, head, list) {
-		sgb_tmp->blk_virt_addr = (void *)((struct qdma_sg_blk *)
-						sgb_tmp->blk_virt_addr - 1);
-		sgb_tmp->blk_bus_addr = sgb_tmp->blk_bus_addr
-							- sizeof(*sgb_tmp);
-		dma_pool_free(qchan->sg_blk_pool, sgb_tmp->blk_virt_addr,
-						sgb_tmp->blk_bus_addr);
-	}
-
-}
-
 static void __cold dpaa2_dpdmai_free_comp(struct dpaa2_qdma_chan *qchan,
 						struct list_head *head)
 {
@@ -722,10 +555,6 @@ static void __cold dpaa2_dpdmai_free_comp(struct dpaa2_qdma_chan *qchan,
 		dma_pool_free(qchan->fd_pool,
 			comp_tmp->fd_virt_addr,
 			comp_tmp->fd_bus_addr);
-		/* free the SG source block on comp */
-		dpaa2_dpdmai_free_pool(qchan, &comp_tmp->sg_src_head);
-		/* free the SG destination block on comp */
-		dpaa2_dpdmai_free_pool(qchan, &comp_tmp->sg_dst_head);
 		list_del(&comp_tmp->list);
 		kfree(comp_tmp);
 	}
@@ -743,9 +572,7 @@ static void __cold dpaa2_dpdmai_free_channels(
 		qchan = &dpaa2_qdma->chans[i];
 		dpaa2_dpdmai_free_comp(qchan, &qchan->comp_used);
 		dpaa2_dpdmai_free_comp(qchan, &qchan->comp_free);
-		dpaa2_dpdmai_free_pool(qchan, &qchan->sgb_free);
 		dma_pool_destroy(qchan->fd_pool);
-		dma_pool_destroy(qchan->sg_blk_pool);
 	}
 }
 
@@ -766,15 +593,10 @@ static int dpaa2_dpdmai_alloc_channels(struct dpaa2_qdma_engine *dpaa2_qdma)
 					dev, FD_POOL_SIZE, 32, 0);
 		if (!dpaa2_chan->fd_pool)
 			return -1;
-		dpaa2_chan->sg_blk_pool = dma_pool_create("sg_blk_pool",
-					dev, SG_POOL_SIZE, 32, 0);
-		if (!dpaa2_chan->sg_blk_pool)
-			return -1;
 
 		spin_lock_init(&dpaa2_chan->queue_lock);
 		INIT_LIST_HEAD(&dpaa2_chan->comp_used);
 		INIT_LIST_HEAD(&dpaa2_chan->comp_free);
-		INIT_LIST_HEAD(&dpaa2_chan->sgb_free);
 	}
 	return 0;
 }
diff --git a/drivers/dma/dpaa2-qdma/dpaa2-qdma.h b/drivers/dma/dpaa2-qdma/dpaa2-qdma.h
index 33c3d13d6373..c9687bfbe4f9 100644
--- a/drivers/dma/dpaa2-qdma/dpaa2-qdma.h
+++ b/drivers/dma/dpaa2-qdma/dpaa2-qdma.h
@@ -36,7 +36,6 @@
 
 #define DPAA2_QDMA_STORE_SIZE 16
 #define NUM_CH 8
-#define NUM_SG_PER_BLK	16
 
 #define QDMA_DMR_OFFSET	0x0
 #define QDMA_DQ_EN (0 << 30)
@@ -69,45 +68,12 @@ struct dpaa2_qdma_sd_d {
 #define QDMA_DD_CMD_WRTTYPE_COHERENT (0x6 << 28)
 #define LX2160_QDMA_DD_CMD_WRTTYPE_COHERENT (0xb << 28)
 
-#define QDMA_SG_FMT_SDB		0x0 /* single data buffer */
-#define QDMA_SG_FMT_FDS		0x1 /* frame data section */
-#define QDMA_SG_FMT_SGTE	0x2 /* SGT extension */
-#define QDMA_SG_SL_SHORT	0x1 /* short length */
-#define QDMA_SG_SL_LONG		0x0 /* short length */
-#define QDMA_SG_F		0x1 /* last sg entry */
-struct dpaa2_qdma_sg {
-	uint32_t addr_lo;		/* address 0:31 */
-	uint32_t addr_hi:17;	/* address 32:48 */
-	uint32_t rsv:15;
-	union {
-		uint32_t data_len_sl0; /* SL=0, the long format */
-		struct {
-			uint32_t len:17; /* SL=1, the short format */
-			uint32_t reserve:3;
-			uint32_t sf:1;
-			uint32_t sr:1;
-			uint32_t size:10; /* buff size */
-		} data_len_sl1;
-	} data_len;	/* AVAIL_LENGTH */
-	struct {
-		uint32_t bpid:14;
-		uint32_t ivp:1;
-		uint32_t mbt:1;
-		uint32_t offset:12;
-		uint32_t fmt:2;
-		uint32_t sl:1;
-		uint32_t f:1;
-	} ctrl;
-} __attribute__((__packed__));
-
 #define QMAN_FD_FMT_ENABLE (1) /* frame list table enable */
 #define QMAN_FD_BMT_ENABLE (1 << 15) /* bypass memory translation */
 #define QMAN_FD_BMT_DISABLE (0 << 15) /* bypass memory translation */
 #define QMAN_FD_SL_DISABLE (0 << 14) /* short lengthe disabled */
 #define QMAN_FD_SL_ENABLE (1 << 14) /* short lengthe enabled */
 
-#define QDMA_SB_FRAME (0 << 28) /* single frame */
-#define QDMA_SG_FRAME (2 << 28) /* scatter gather frames */
 #define QDMA_FINAL_BIT_DISABLE (0 << 31) /* final bit disable */
 #define QDMA_FINAL_BIT_ENABLE (1 << 31) /* final bit enable */
 
@@ -143,35 +109,19 @@ struct dpaa2_qdma_chan {
 	struct mutex            dpaa2_queue_mutex;
 	spinlock_t		queue_lock;
 	struct dma_pool		*fd_pool;
-	struct dma_pool		*sg_blk_pool;
 
 	struct list_head	comp_used;
 	struct list_head	comp_free;
 
-	struct list_head	sgb_free;
-};
-
-struct qdma_sg_blk {
-	dma_addr_t	blk_bus_addr;
-	void		*blk_virt_addr;
-	struct list_head	list;
 };
 
 struct dpaa2_qdma_comp {
 	dma_addr_t		fd_bus_addr;
 	dma_addr_t		fl_bus_addr;
 	dma_addr_t		desc_bus_addr;
-	dma_addr_t		sge_src_bus_addr;
-	dma_addr_t		sge_dst_bus_addr;
 	void			*fd_virt_addr;
 	void			*fl_virt_addr;
 	void			*desc_virt_addr;
-	void			*sg_src_virt_addr;
-	void			*sg_dst_virt_addr;
-	struct qdma_sg_blk	*sg_blk;
-	uint32_t		sg_blk_num;
-	struct list_head	sg_src_head;
-	struct list_head	sg_dst_head;
 	struct dpaa2_qdma_chan	*qchan;
 	struct virt_dma_desc	vdesc;
 	struct list_head	list;
@@ -228,7 +178,4 @@ static struct soc_device_attribute soc_fixup_tuning[] = {
 		sizeof(struct dpaa2_fl_entry) * 3 + \
 		sizeof(struct dpaa2_qdma_sd_d) * 2)
 
-/* qdma_sg_blk + 16 SGs */
-#define SG_POOL_SIZE (sizeof(struct qdma_sg_blk) +\
-		sizeof(struct dpaa2_qdma_sg) * NUM_SG_PER_BLK)
 #endif /* __DPAA2_QDMA_H */
-- 
2.17.1

