From 5e9f26729a78d24be89a663eb9c78c781f24377f Mon Sep 17 00:00:00 2001
From: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Date: Sat, 1 Mar 2014 04:21:28 +0530
Subject: [PATCH 367/741] usb: host: Modify PHY_CLK_VALID bit usage

commit 80755377e736a389b42b9d4b06f1ec936b169643 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

PHY_CLK_VALID bit is de-featured for all controller
versions before 2.4, and is only to be used for
internal UTMI phy

Signed-off-by: Ramneek Mehresh <ramneek.mehresh@freescale.com>
Signed-off-by: yinbo.zhu <yinbo.zhu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/usb/host/ehci-fsl.c | 47 +++++++++++--------------------------
 1 file changed, 14 insertions(+), 33 deletions(-)

diff --git a/drivers/usb/host/ehci-fsl.c b/drivers/usb/host/ehci-fsl.c
index 1a54d6fe84bd..a3d87a49483c 100644
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@ -259,42 +259,13 @@ static int fsl_ehci_drv_probe(struct platform_device *pdev)
 	return retval;
 }
 
-static bool usb_phy_clk_valid(struct usb_hcd *hcd,
-			enum fsl_usb2_phy_modes phy_mode)
+static bool usb_phy_clk_valid(struct usb_hcd *hcd)
 {
 	void __iomem *non_ehci = hcd->regs;
-	struct device *dev = hcd->self.controller;
-	struct fsl_usb2_platform_data *pdata = dev->platform_data;
 	bool ret = true;
-	int retry = UTMI_PHY_CLK_VALID_CHK_RETRY;
-
-	if (phy_mode == FSL_USB2_PHY_ULPI) {
-		/* check PHY_CLK_VALID to get phy clk valid */
-		if (!(spin_event_timeout(in_be32(non_ehci + FSL_SOC_USB_CTRL) &
-				PHY_CLK_VALID, FSL_USB_PHY_CLK_TIMEOUT, 0) ||
-				in_be32(non_ehci + FSL_SOC_USB_PRICTRL))) {
-			ret = false;
-		}
-	} else if (phy_mode == FSL_USB2_PHY_UTMI) {
-		if (!(in_be32(non_ehci + FSL_SOC_USB_CTRL) & PHY_CLK_VALID)) {
-			ret = false;
-			if (pdata->controller_ver < FSL_USB_VER_2_4) {
-				while (retry--) {
-					clrbits32(non_ehci + FSL_SOC_USB_CTRL,
-							CTRL_UTMI_PHY_EN);
-					setbits32(non_ehci + FSL_SOC_USB_CTRL,
-							CTRL_UTMI_PHY_EN);
-					/* delay required for Clk to appear */
-					mdelay(FSL_UTMI_PHY_DLY);
-					if ((in_be32(non_ehci +
-					FSL_SOC_USB_CTRL) & PHY_CLK_VALID)) {
-						ret = true;
-						break;
-					}
-				}
-			}
-		}
-	}
+
+	if (!(ioread32be(non_ehci + FSL_SOC_USB_CTRL) & PHY_CLK_VALID))
+		ret = false;
 
 	return ret;
 }
@@ -347,6 +318,16 @@ static int ehci_fsl_setup_phy(struct usb_hcd *hcd,
 		}
 
 	case FSL_USB2_PHY_UTMI_DUAL:
+                /* PHY_CLK_VALID bit is de-featured from all controller
+                 * versions below 2.4 and is to be checked only for
+                 * internal UTMI phy
+                 */
+                if (pdata->controller_ver > FSL_USB_VER_2_4 &&
+                        pdata->have_sysif_regs && !usb_phy_clk_valid(hcd)) {
+                        pr_err("fsl-ehci: USB PHY clock invalid\n");
+                        return -EINVAL;
+                }
+
 		if (pdata->have_sysif_regs && pdata->controller_ver) {
 			/* controller version 1.6 or above */
 			tmp = ioread32be(non_ehci + FSL_SOC_USB_CTRL);
-- 
2.17.1

