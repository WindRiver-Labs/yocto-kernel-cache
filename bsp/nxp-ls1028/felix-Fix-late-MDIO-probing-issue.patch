From 70cac4e82c7b6cb748240ea8f1e9116cb62a2f6f Mon Sep 17 00:00:00 2001
From: Alex Marginean <alexandru.marginean@nxp.com>
Date: Tue, 27 Aug 2019 09:46:20 +0300
Subject: [PATCH 640/741] felix: Fix late MDIO probing issue

commit 9065c466469cc6e1d9cc78e019c530d9616dd97a from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Fixes an issue with MDIO bus late probing, which leads to external ports
of the switch not being probed.  If no PHY is found at probe retry
connecting to the PHY at _open.

Signed-off-by: Alex Marginean <alexandru.marginean@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c |  3 +--
 drivers/net/ethernet/mscc/ocelot.c      | 15 +++++++++++++++
 drivers/net/ethernet/mscc/ocelot.h      |  1 +
 3 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index dd92d6617b66..27a3c170a102 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -640,8 +640,6 @@ static int felix_ports_init(struct pci_dev *pdev)
 
 		of_node_put(phy_node);
 
-		if (!phydev)
-			continue;
 
 		phy_mode = of_get_phy_mode(portnp);
 		if (phy_mode < 0)
@@ -656,6 +654,7 @@ static int felix_ports_init(struct pci_dev *pdev)
 		/* Felix configs */
 		ocelot_port = ocelot->ports[port];
 		ocelot_port->phy_mode = phy_mode;
+		ocelot_port->portnp = portnp;
 
 		if (pair_ndev)
 			felix_setup_port_inj(ocelot_port, pair_ndev);
diff --git a/drivers/net/ethernet/mscc/ocelot.c b/drivers/net/ethernet/mscc/ocelot.c
index f9b1f0c449bc..90dd5615925e 100644
--- a/drivers/net/ethernet/mscc/ocelot.c
+++ b/drivers/net/ethernet/mscc/ocelot.c
@@ -20,6 +20,7 @@
 #include <net/netevent.h>
 #include <net/rtnetlink.h>
 #include <net/switchdev.h>
+#include <linux/of_mdio.h>
 
 #include "ocelot.h"
 
@@ -467,6 +468,20 @@ static int ocelot_port_open(struct net_device *dev)
 	struct ocelot *ocelot = port->ocelot;
 	int err;
 
+	if (!port->phy)	{
+		struct phy_device *phydev = NULL;
+		struct device_node *phy_node;
+
+		phy_node = of_parse_phandle(port->portnp, "phy-handle", 0);
+		if (phy_node) {
+			phydev = of_phy_find_device(phy_node);
+			of_node_put(phy_node);
+		}
+		if (!phydev)
+			return -ENXIO;
+		port->phy = phydev;
+	}
+
 	/* Enable receiving frames on the port, and activate auto-learning of
 	 * MAC addresses.
 	 */
diff --git a/drivers/net/ethernet/mscc/ocelot.h b/drivers/net/ethernet/mscc/ocelot.h
index 2af5a21f0df8..1d28ebd9934c 100644
--- a/drivers/net/ethernet/mscc/ocelot.h
+++ b/drivers/net/ethernet/mscc/ocelot.h
@@ -510,6 +510,7 @@ struct ocelot_port {
 	struct net_device *dev;
 	struct ocelot *ocelot;
 	struct phy_device *phy;
+	struct device_node *portnp;
 	void __iomem *regs;
 	u8 chip_port;
 
-- 
2.17.1

