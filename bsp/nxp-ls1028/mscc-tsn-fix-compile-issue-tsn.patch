From 84f209b9ba1560e028dd1c2935a107da856eeb7b Mon Sep 17 00:00:00 2001
From: Zhao Qiang <qiang.zhao@nxp.com>
Date: Fri, 30 Aug 2019 14:44:43 +0800
Subject: [PATCH 623/741] mscc/tsn: fix compile issue tsn

commit c79581e2f6d7ed0c65d2150c73eab82aabf31348 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Signed-off-by: Zhao Qiang <qiang.zhao@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c |  4 ---
 drivers/net/ethernet/mscc/ocelot.h      |  4 +--
 net/tsn/genl_tsn.c                      | 46 ++++++++++++-------------
 3 files changed, 25 insertions(+), 29 deletions(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index 2e743ef73447..dd92d6617b66 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -825,8 +825,6 @@ static int felix_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 		goto err_ports_init;
 
 	register_netdevice_notifier(&ocelot_netdevice_nb);
-	register_switchdev_notifier(&ocelot_switchdev_nb);
-	register_switchdev_blocking_notifier(&ocelot_switchdev_blocking_nb);
 
 	dev_info(&pdev->dev, "%s v%s\n", FELIX_DRV_STR, FELIX_DRV_VER_STR);
 	return 0;
@@ -858,8 +856,6 @@ static void felix_pci_remove(struct pci_dev *pdev)
 	/* stop workqueue thread */
 	ocelot_deinit(ocelot);
 	free_irq(pdev->irq, ocelot);
-	unregister_switchdev_blocking_notifier(&ocelot_switchdev_blocking_nb);
-	unregister_switchdev_notifier(&ocelot_switchdev_nb);
 	unregister_netdevice_notifier(&ocelot_netdevice_nb);
 
 	felix_release_ports(ocelot);
diff --git a/drivers/net/ethernet/mscc/ocelot.h b/drivers/net/ethernet/mscc/ocelot.h
index d0ae66a9a26e..2af5a21f0df8 100644
--- a/drivers/net/ethernet/mscc/ocelot.h
+++ b/drivers/net/ethernet/mscc/ocelot.h
@@ -522,6 +522,8 @@ struct ocelot_port {
 	u8 vlan_aware;
 
 	u64 *stats;
+	phy_interface_t phy_mode;
+	struct phy *serdes;
 
         /* cpu frame injection handler */
         netdev_tx_t (*cpu_inj_handler)(struct sk_buff *skb,
@@ -532,8 +534,6 @@ struct ocelot_port {
         bool rx_tstamp;
         u8 tstamp_id;
 
-	phy_interface_t phy_mode;
-	struct phy *serdes;
 };
 
 u32 __ocelot_read_ix(struct ocelot *ocelot, u32 reg, u32 offset);
diff --git a/net/tsn/genl_tsn.c b/net/tsn/genl_tsn.c
index 4b9ccdcd1ab7..e95f97092c10 100644
--- a/net/tsn/genl_tsn.c
+++ b/net/tsn/genl_tsn.c
@@ -12,7 +12,7 @@
 #include <net/tsn.h>
 
 #define NLA_PARSE_NESTED(a, b, c, d) \
-	nla_parse_nested_deprecated(a, b, c, d, NULL)
+	nla_parse_nested(a, b, c, d, NULL)
 #define NLA_PUT_U64(a, b, c) nla_put_u64_64bit(a, b, c, NLA_U64)
 
 static struct genl_family tsn_family;
@@ -535,7 +535,7 @@ static int tsn_cap_get(struct sk_buff *skb, struct genl_info *info)
 		goto err;
 	}
 
-	tsn_cap_attr = nla_nest_start_noflag(rep_skb, TSN_ATTR_CAP);
+	tsn_cap_attr = nla_nest_start(rep_skb, TSN_ATTR_CAP);
 	if (!tsn_cap_attr) {
 		ret = -EMSGSIZE;
 		goto err;
@@ -778,7 +778,7 @@ static int cmd_cb_streamid_get(struct genl_info *info)
 		return ret;
 
 	/* input netlink the parameters */
-	sidattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_STREAM_IDENTIFY);
+	sidattr = nla_nest_start(rep_skb, TSN_ATTR_STREAM_IDENTIFY);
 	if (!sidattr) {
 		ret = -EINVAL;
 		goto err;
@@ -951,7 +951,7 @@ static int tsn_qci_cap_get(struct sk_buff *skb, struct genl_info *info)
 		goto err;
 	}
 
-	qci_cap = nla_nest_start_noflag(rep_skb, TSN_ATTR_QCI_SP);
+	qci_cap = nla_nest_start(rep_skb, TSN_ATTR_QCI_SP);
 	if (!qci_cap) {
 		ret = -EMSGSIZE;
 		goto err;
@@ -1161,7 +1161,7 @@ static int cmd_qci_sfi_get(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		goto err;
 
-	sfiattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_QCI_SFI);
+	sfiattr = nla_nest_start(rep_skb, TSN_ATTR_QCI_SFI);
 	if (!sfiattr) {
 		tsn_simple_reply(info, TSN_CMD_REPLY,
 				 netdev->name, -EINVAL);
@@ -1288,7 +1288,7 @@ static int cmd_qci_sfi_counters_get(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		goto err;
 
-	sfiattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_QCI_SFI);
+	sfiattr = nla_nest_start(rep_skb, TSN_ATTR_QCI_SFI);
 	if (!sfiattr) {
 		ret = -EINVAL;
 		goto err;
@@ -1588,7 +1588,7 @@ static int cmd_qci_sgi_get(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	sgiattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_QCI_SGI);
+	sgiattr = nla_nest_start(rep_skb, TSN_ATTR_QCI_SGI);
 	if (!sgiattr)
 		return -EMSGSIZE;
 
@@ -1625,7 +1625,7 @@ static int cmd_qci_sgi_get(struct genl_info *info)
 			return -EMSGSIZE;
 
 	/* Administration */
-	adminattr = nla_nest_start_noflag(rep_skb, TSN_QCI_SGI_ATTR_ADMINENTRY);
+	adminattr = nla_nest_start(rep_skb, TSN_QCI_SGI_ATTR_ADMINENTRY);
 	if (!adminattr)
 		return -EMSGSIZE;
 
@@ -1668,7 +1668,7 @@ static int cmd_qci_sgi_get(struct genl_info *info)
 		}
 
 		/* Adminastration entry */
-		sglattr = nla_nest_start_noflag(rep_skb,
+		sglattr = nla_nest_start(rep_skb,
 						TSN_SGI_ATTR_CTRL_GCLENTRY);
 		if (!sglattr)
 			return -EMSGSIZE;
@@ -1789,7 +1789,7 @@ static int cmd_qci_sgi_status_get(struct genl_info *info)
 		return -EMSGSIZE;
 
 	/* Down one netlink attribute level */
-	sgiattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_QCI_SGI);
+	sgiattr = nla_nest_start(rep_skb, TSN_ATTR_QCI_SGI);
 	if (!sgiattr)
 		return -EMSGSIZE;
 
@@ -1820,7 +1820,7 @@ static int cmd_qci_sgi_status_get(struct genl_info *info)
 			return -EMSGSIZE;
 
 	/* operation data */
-	operattr = nla_nest_start_noflag(rep_skb, TSN_QCI_SGI_ATTR_OPERENTRY);
+	operattr = nla_nest_start(rep_skb, TSN_QCI_SGI_ATTR_OPERENTRY);
 	if (!operattr)
 		return -EMSGSIZE;
 
@@ -1864,7 +1864,7 @@ static int cmd_qci_sgi_status_get(struct genl_info *info)
 		}
 
 		/* Operation entry */
-		sglattr = nla_nest_start_noflag(rep_skb,
+		sglattr = nla_nest_start(rep_skb,
 						TSN_SGI_ATTR_CTRL_GCLENTRY);
 		if (!sglattr)
 			return -EMSGSIZE;
@@ -2064,7 +2064,7 @@ static int cmd_qci_fmi_get(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	fmiattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_QCI_FMI);
+	fmiattr = nla_nest_start(rep_skb, TSN_ATTR_QCI_FMI);
 	if (!fmiattr)
 		return -EMSGSIZE;
 
@@ -2297,11 +2297,11 @@ static int cmd_qbv_get(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	qbv = nla_nest_start_noflag(rep_skb, TSN_ATTR_QBV);
+	qbv = nla_nest_start(rep_skb, TSN_ATTR_QBV);
 	if (!qbv)
 		return -EMSGSIZE;
 
-	qbvadminattr = nla_nest_start_noflag(rep_skb, TSN_QBV_ATTR_ADMINENTRY);
+	qbvadminattr = nla_nest_start(rep_skb, TSN_QBV_ATTR_ADMINENTRY);
 	if (!qbvadminattr)
 		return -EMSGSIZE;
 
@@ -2320,7 +2320,7 @@ static int cmd_qbv_get(struct genl_info *info)
 			tp = (qbvconf.admin.control_list + i)->time_interval;
 
 			qbv_table =
-				nla_nest_start_noflag(rep_skb, glisttype);
+				nla_nest_start(rep_skb, glisttype);
 			if (!qbv_table)
 				return -EMSGSIZE;
 
@@ -2425,11 +2425,11 @@ static int cmd_qbv_status_get(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	qbv = nla_nest_start_noflag(rep_skb, TSN_ATTR_QBV);
+	qbv = nla_nest_start(rep_skb, TSN_ATTR_QBV);
 	if (!qbv)
 		return -EMSGSIZE;
 
-	qbvoperattr = nla_nest_start_noflag(rep_skb, TSN_QBV_ATTR_OPERENTRY);
+	qbvoperattr = nla_nest_start(rep_skb, TSN_QBV_ATTR_OPERENTRY);
 	if (!qbvoperattr)
 		return -EMSGSIZE;
 
@@ -2449,7 +2449,7 @@ static int cmd_qbv_status_get(struct genl_info *info)
 			gs = (qbvstatus.oper.control_list + i)->gate_state;
 			tp = (qbvstatus.oper.control_list + i)->time_interval;
 
-			qbv_table = nla_nest_start_noflag(rep_skb, glisttype);
+			qbv_table = nla_nest_start(rep_skb, glisttype);
 			if (!qbv_table)
 				return -EMSGSIZE;
 
@@ -2675,7 +2675,7 @@ static int tsn_cbs_get(struct sk_buff *skb, struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	cbsattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_CBS);
+	cbsattr = nla_nest_start(rep_skb, TSN_ATTR_CBS);
 	if (!cbsattr)
 		return -EMSGSIZE;
 
@@ -2808,7 +2808,7 @@ static int cmd_qbu_get_status(struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	qbuattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_QBU);
+	qbuattr = nla_nest_start(rep_skb, TSN_ATTR_QBU);
 	if (!qbuattr)
 		return -EMSGSIZE;
 
@@ -2975,7 +2975,7 @@ static int tsn_tsd_get(struct sk_buff *skb, struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	tsdattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_TSD);
+	tsdattr = nla_nest_start(rep_skb, TSN_ATTR_TSD);
 	if (!tsdattr)
 		return -EMSGSIZE;
 
@@ -3229,7 +3229,7 @@ static int tsn_cbstatus_get(struct sk_buff *skb, struct genl_info *info)
 	if (nla_put_string(rep_skb, TSN_ATTR_IFNAME, netdev->name))
 		return -EMSGSIZE;
 
-	cbattr = nla_nest_start_noflag(rep_skb, TSN_ATTR_CBSTAT);
+	cbattr = nla_nest_start(rep_skb, TSN_ATTR_CBSTAT);
 	if (!cbattr)
 		return -EMSGSIZE;
 
-- 
2.17.1

