From 051309f3bdd5d989b7908eddc3c12ca3d5db37fa Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Thu, 4 May 2017 15:56:01 +0300
Subject: [PATCH 075/741] dpaa2-eth: Read link state in ethtool get_settings

commit 002a0e2eac225139a4ab813dffeaedba163c01e6 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

dpni_set_link_cfg() needs to be called with all options,
including the ones involving flow control. Without this
patch, we risk inadvertently disabling pause frames while
configuring other link parameters.

Signed-off-by: Bogdan Purcareata <bogdan.purcareata@nxp.com>
Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/freescale/dpaa2/dpaa2-ethtool.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/freescale/dpaa2/dpaa2-ethtool.c b/drivers/net/ethernet/freescale/dpaa2/dpaa2-ethtool.c
index 6b7f90765cf7..cce9c291636f 100644
--- a/drivers/net/ethernet/freescale/dpaa2/dpaa2-ethtool.c
+++ b/drivers/net/ethernet/freescale/dpaa2/dpaa2-ethtool.c
@@ -109,8 +109,9 @@ static int
 dpaa2_eth_set_link_ksettings(struct net_device *net_dev,
 			     const struct ethtool_link_ksettings *link_settings)
 {
-	struct dpni_link_cfg cfg = {0};
 	struct dpaa2_eth_priv *priv = netdev_priv(net_dev);
+	struct dpni_link_state state = {0};
+	struct dpni_link_cfg cfg = {0};
 	int err = 0;
 
 	/* If using an older MC version, the DPNI must be down
@@ -125,6 +126,14 @@ dpaa2_eth_set_link_ksettings(struct net_device *net_dev,
 		}
 	}
 
+	/* Need to interrogate link state to get flow control params */
+	err = dpni_get_link_state(priv->mc_io, 0, priv->mc_token, &state);
+	if (err) {
+		netdev_err(net_dev, "Error getting link state\n");
+		goto out;
+	}
+
+	cfg.options = state.options;
 	cfg.rate = link_settings->base.speed;
 	if (link_settings->base.autoneg == AUTONEG_ENABLE)
 		cfg.options |= DPNI_LINK_OPT_AUTONEG;
@@ -142,6 +151,7 @@ dpaa2_eth_set_link_ksettings(struct net_device *net_dev,
 		 */
 		netdev_dbg(net_dev, "ERROR %d setting link cfg\n", err);
 
+out:
 	return err;
 }
 
-- 
2.17.1

