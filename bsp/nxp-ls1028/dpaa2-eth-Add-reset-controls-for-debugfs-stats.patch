From 3204d6b0d1a48f8699a1d3fca7b69b1cb79f8ab8 Mon Sep 17 00:00:00 2001
From: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date: Wed, 13 Feb 2019 12:23:41 +0200
Subject: [PATCH 080/741] dpaa2-eth: Add reset controls for debugfs stats

commit c9a9c0d70d9594a7e311883c084e979e57c0b3c8 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Allow the user to reset statistics counters through debugfs entries.

Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 .../freescale/dpaa2/dpaa2-eth-debugfs.c       | 84 ++++++++++++++++++-
 .../freescale/dpaa2/dpaa2-eth-debugfs.h       |  2 +
 2 files changed, 84 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.c b/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.c
index a027f4a9d0cc..c047878eef82 100644
--- a/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.c
+++ b/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.c
@@ -162,6 +162,62 @@ static const struct file_operations dpaa2_dbg_ch_ops = {
 	.release = single_release,
 };
 
+static ssize_t dpaa2_dbg_reset_write(struct file *file, const char __user *buf,
+                                    size_t count, loff_t *offset)
+{
+       struct dpaa2_eth_priv *priv = file->private_data;
+       struct rtnl_link_stats64 *percpu_stats;
+       struct dpaa2_eth_drv_stats *percpu_extras;
+       struct dpaa2_eth_fq *fq;
+       struct dpaa2_eth_channel *ch;
+       int i;
+
+       for_each_online_cpu(i) {
+               percpu_stats = per_cpu_ptr(priv->percpu_stats, i);
+               memset(percpu_stats, 0, sizeof(*percpu_stats));
+
+               percpu_extras = per_cpu_ptr(priv->percpu_extras, i);
+               memset(percpu_extras, 0, sizeof(*percpu_extras));
+       }
+
+       for (i = 0; i < priv->num_fqs; i++) {
+               fq = &priv->fq[i];
+               memset(&fq->stats, 0, sizeof(fq->stats));
+       }
+
+       for (i = 0; i < priv->num_channels; i++) {
+               ch = priv->channel[i];
+               memset(&ch->stats, 0, sizeof(ch->stats));
+       }
+
+       return count;
+}
+
+static const struct file_operations dpaa2_dbg_reset_ops = {
+       .open = simple_open,
+       .write = dpaa2_dbg_reset_write,
+};
+
+static ssize_t dpaa2_dbg_reset_mc_write(struct file *file,
+                                       const char __user *buf,
+                                       size_t count, loff_t *offset)
+{
+       struct dpaa2_eth_priv *priv = file->private_data;
+       int err;
+
+       err = dpni_reset_statistics(priv->mc_io, 0, priv->mc_token);
+       if (err)
+               netdev_err(priv->net_dev,
+                          "dpni_reset_statistics() failed %d\n", err);
+
+       return count;
+}
+
+static const struct file_operations dpaa2_dbg_reset_mc_ops = {
+       .open = simple_open,
+       .write = dpaa2_dbg_reset_mc_write,
+};
+
 void dpaa2_dbg_add(struct dpaa2_eth_priv *priv)
 {
 	if (!dpaa2_dbg_root)
@@ -202,8 +258,30 @@ void dpaa2_dbg_add(struct dpaa2_eth_priv *priv)
 		goto err_ch_stats;
 	}
 
-	return;
-
+       /* reset stats */
+       priv->dbg.reset_stats = debugfs_create_file("reset_stats", 0200,
+                                                   priv->dbg.dir, priv,
+                                                   &dpaa2_dbg_reset_ops);
+       if (!priv->dbg.reset_stats) {
+               netdev_err(priv->net_dev, "debugfs_create_file() failed\n");
+               goto err_reset_stats;
+       }
+
+       /* reset MC stats */
+       priv->dbg.reset_mc_stats = debugfs_create_file("reset_mc_stats",
+                                               0222, priv->dbg.dir, priv,
+                                               &dpaa2_dbg_reset_mc_ops);
+       if (!priv->dbg.reset_mc_stats) {
+               netdev_err(priv->net_dev, "debugfs_create_file() failed\n");
+               goto err_reset_mc_stats;
+       }
+
+       return;
+
+err_reset_mc_stats:
+       debugfs_remove(priv->dbg.reset_stats);
+err_reset_stats:
+       debugfs_remove(priv->dbg.ch_stats);
 err_ch_stats:
 	debugfs_remove(priv->dbg.fq_stats);
 err_fq_stats:
@@ -214,6 +292,8 @@ void dpaa2_dbg_add(struct dpaa2_eth_priv *priv)
 
 void dpaa2_dbg_remove(struct dpaa2_eth_priv *priv)
 {
+	debugfs_remove(priv->dbg.reset_mc_stats);
+	debugfs_remove(priv->dbg.reset_stats);
 	debugfs_remove(priv->dbg.fq_stats);
 	debugfs_remove(priv->dbg.ch_stats);
 	debugfs_remove(priv->dbg.cpu_stats);
diff --git a/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.h b/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.h
index 4f63de997a26..2f2fed47906e 100644
--- a/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.h
+++ b/drivers/net/ethernet/freescale/dpaa2/dpaa2-eth-debugfs.h
@@ -14,6 +14,8 @@ struct dpaa2_debugfs {
 	struct dentry *fq_stats;
 	struct dentry *ch_stats;
 	struct dentry *cpu_stats;
+	struct dentry *reset_stats;
+	struct dentry *reset_mc_stats;
 };
 
 #ifdef CONFIG_DEBUG_FS
-- 
2.17.1

