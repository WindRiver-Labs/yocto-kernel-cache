From dea852062195f135b4f91845cb4abc4129caf868 Mon Sep 17 00:00:00 2001
From: Bharat Bhushan <Bharat.Bhushan@nxp.com>
Date: Tue, 30 Jan 2018 21:14:51 +0530
Subject: [PATCH 393/741] vfio/fsl-mc: Enable VFIO read/writes for DPMCP
 objects

commit a29c3571c9b3e2731dde178208e3846b545f980b from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

MC commands can come over DPMCP objects as well, so
we enabled read/writes on DPMCP objects as well.

Also this have fixes to use header files as per latest kernel

Signed-off-by: Bharat Bhushan <Bharat.Bhushan@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/vfio/fsl-mc/vfio_fsl_mc.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/drivers/vfio/fsl-mc/vfio_fsl_mc.c b/drivers/vfio/fsl-mc/vfio_fsl_mc.c
index 9dc32d273812..6a339cf78428 100644
--- a/drivers/vfio/fsl-mc/vfio_fsl_mc.c
+++ b/drivers/vfio/fsl-mc/vfio_fsl_mc.c
@@ -20,8 +20,7 @@
 #include <linux/delay.h>
 
 #include "../../staging/fsl-mc/include/mc.h"
-#include "../../staging/fsl-mc/include/mc-bus.h"
-#include "../../staging/fsl-mc/include/mc-sys.h"
+#include "../../staging/fsl-mc/include/dprc.h"
 #include "../../staging/fsl-mc/bus/dprc-cmd.h"
 
 #include "vfio_fsl_mc_private.h"
@@ -289,8 +288,9 @@ static ssize_t vfio_fsl_mc_read(void *device_data, char __user *buf,
 	uint64_t data[8];
 	int i;
 
-	/* Read ioctl supported only for DPRC device */
-	if (strcmp(vdev->mc_dev->obj_desc.type, "dprc"))
+	/* Read ioctl supported only for DPRC and DPMCP device */
+	if (strcmp(vdev->mc_dev->obj_desc.type, "dprc") &&
+	    strcmp(vdev->mc_dev->obj_desc.type, "dpmcp"))
 		return -EINVAL;
 
 	if (index >= vdev->num_regions)
@@ -391,8 +391,9 @@ static ssize_t vfio_fsl_mc_write(void *device_data, const char __user *buf,
 	uint64_t data[8];
 	int ret;
 
-	/* Write ioctl supported only for DPRC device */
-	if (strcmp(vdev->mc_dev->obj_desc.type, "dprc"))
+	/* Write ioctl supported only for DPRC and DPMCP device */
+	if (strcmp(vdev->mc_dev->obj_desc.type, "dprc") &&
+	    strcmp(vdev->mc_dev->obj_desc.type, "dpmcp"))
 		return -EINVAL;
 
 	if (index >= vdev->num_regions)
-- 
2.17.1

