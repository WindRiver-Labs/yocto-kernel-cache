From a3f74d20b009a585ecdc3890ca6547c540ef8847 Mon Sep 17 00:00:00 2001
From: Peng Ma <peng.ma@nxp.com>
Date: Wed, 1 Aug 2018 15:15:10 +0800
Subject: [PATCH 713/741] dmaengine: fsl-qdma: set Scatter/Gather table with
 64B aligned to fix Errata A-008370.

commit 8d0048e7a9bc1ed280b4bfb27f04f4a5afae089c from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

The qDMA read engine prefetches up to 4 scatter/gather table entries,
each of which is 16 bytes in size, part of one memory request. If
the 64 bytes memory read access crosses a 4K page boundary and the
extension is used in the four entries, qDMA might fetch incorrect
descriptor address.

Signed-off-by: Peng Ma <peng.ma@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/dma/fsl-qdma.c | 25 ++++++++++++++++++++++---
 1 file changed, 22 insertions(+), 3 deletions(-)

diff --git a/drivers/dma/fsl-qdma.c b/drivers/dma/fsl-qdma.c
index b5960abc44da..6db3f0ae9490 100644
--- a/drivers/dma/fsl-qdma.c
+++ b/drivers/dma/fsl-qdma.c
@@ -382,9 +382,9 @@ static void fsl_qdma_comp_fill_memcpy(struct fsl_qdma_comp *fsl_comp,
 }
 
 /*
- * Pre-request full command descriptor for enqueue.
+ * Pre-request command descriptor and compound S/G for enqueue.
  */
-static int fsl_qdma_pre_request_enqueue_desc(struct fsl_qdma_queue *queue)
+static int fsl_qdma_pre_request_enqueue_comp_desc(struct fsl_qdma_queue *queue)
 {
 	int i;
 	struct fsl_qdma_comp *comp_temp, *_comp_temp;
@@ -436,6 +436,25 @@ static int fsl_qdma_pre_request_enqueue_desc(struct fsl_qdma_queue *queue)
 	return -ENOMEM;
 }
 
+/*
+ * Pre-request source and destination descriptor for enqueue.
+ */
+static int fsl_qdma_pre_request_enqueue_sd_desc(struct fsl_qdma_queue *queue)
+{
+        struct fsl_qdma_comp *comp_temp, *_comp_temp;
+
+        list_for_each_entry_safe(comp_temp, _comp_temp,
+                                &queue->comp_free, list) {
+                comp_temp->desc_virt_addr = dma_pool_alloc(queue->desc_pool,
+                                                GFP_KERNEL,
+                                                &comp_temp->desc_bus_addr);
+                if (!comp_temp->desc_virt_addr)
+                        return -ENOMEM;
+        }
+ 
+        return 0;
+}
+
 /*
  * Request a command descriptor for enqueue.
  */
@@ -1049,7 +1068,7 @@ static int fsl_qdma_alloc_chan_resources(struct dma_chan *chan)
 	if (!fsl_queue->desc_pool)
 		goto err_desc_pool;
 
-	ret = fsl_qdma_pre_request_enqueue_desc(fsl_queue);
+	ret = fsl_qdma_pre_request_enqueue_comp_desc(fsl_queue);
 	if (ret) {
 		dev_err(chan->device->dev,
 			"failed to alloc dma buffer for S/G descriptor\n");
-- 
2.17.1

