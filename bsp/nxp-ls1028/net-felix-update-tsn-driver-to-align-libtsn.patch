From 8ca5b991e5c25054bf9200bd1c15be52e0b32fd0 Mon Sep 17 00:00:00 2001
From: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Date: Wed, 15 Jan 2020 15:30:57 +0800
Subject: [PATCH] net: felix: update tsn driver to align libtsn

commit 66fc14ea11f78b0e27115de555a31e7ace71dc81 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

tsn.h in TSN framework has been updated to align latest libtsn,
so that felix tsn driver need to be updated.
Update details:
	- Add get_capability to get TSN capabilities on felix.
	- Add qci_get_maxcap to get range of qci params.
	- Add cb_streamid_counters_get to fix error return.
	- Add qci sfi disable set and sgi enable status.
	- Fix pending status return on qbv get.

Signed-off-by: Xiaolin He <xiaolin.he@nxp.com>
Signed-off-by: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/mscc/felix_board.c |  3 ++
 drivers/net/ethernet/mscc/felix_tsn.c   | 50 ++++++++++++++++++++++++-
 drivers/net/ethernet/mscc/felix_tsn.h   |  3 ++
 3 files changed, 55 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/mscc/felix_board.c b/drivers/net/ethernet/mscc/felix_board.c
index a012fde23818..47a99ad163d8 100644
--- a/drivers/net/ethernet/mscc/felix_board.c
+++ b/drivers/net/ethernet/mscc/felix_board.c
@@ -37,6 +37,7 @@ MODULE_DEVICE_TABLE(pci, felix_ids);
 #ifdef CONFIG_MSCC_FELIX_SWITCH_TSN
 const struct tsn_ops switch_tsn_ops = {
 	.device_init			= felix_tsn_init,
+	.get_capability                 = felix_tsn_get_cap,
 	.qbv_set			= felix_qbv_set,
 	.qbv_get			= felix_qbv_get,
 	.qbv_get_status			= felix_qbv_get_status,
@@ -44,9 +45,11 @@ const struct tsn_ops switch_tsn_ops = {
 	.qbu_get                        = felix_qbu_get,
 	.cb_streamid_set		= felix_cb_streamid_set,
 	.cb_streamid_get		= felix_cb_streamid_get,
+	.cb_streamid_counters_get       = felix_cb_streamid_counters_get,
 	.qci_sfi_set			= felix_qci_sfi_set,
 	.qci_sfi_get			= felix_qci_sfi_get,
 	.qci_sfi_counters_get		= felix_qci_sfi_counters_get,
+	.qci_get_maxcap                 = felix_qci_max_cap_get,
 	.qci_sgi_set			= felix_qci_sgi_set,
 	.qci_sgi_get			= felix_qci_sgi_get,
 	.qci_sgi_status_get		= felix_qci_sgi_status_get,
diff --git a/drivers/net/ethernet/mscc/felix_tsn.c b/drivers/net/ethernet/mscc/felix_tsn.c
index 5ea210c91067..45d8e2236f37 100644
--- a/drivers/net/ethernet/mscc/felix_tsn.c
+++ b/drivers/net/ethernet/mscc/felix_tsn.c
@@ -61,6 +61,16 @@ static struct mscc_switch_capa capa __ro_after_init = {
 	.qos_dp_max	= 1,
 };
 
+u32 felix_tsn_get_cap(struct net_device *ndev)
+{
+	u32 cap;
+
+	cap = (TSN_CAP_QBV | TSN_CAP_QCI | TSN_CAP_QBU | TSN_CAP_CBS |
+	       TSN_CAP_CB | TSN_CAP_TBS | TSN_CAP_CTH);
+
+	return cap;
+}
+
 static int qos_port_tas_gcl_set(struct net_device *ndev,
 				struct ocelot *ocelot, const u8 gcl_ix,
 				struct tsn_qbv_entry *control_list)
@@ -352,7 +362,7 @@ int felix_qbv_get_status(struct net_device *ndev,
 
 	val = ocelot_read(ocelot, QSYS_PARAM_STATUS_REG_8);
 	qbvstatus->config_pending =
-		(val & QSYS_PARAM_STATUS_REG_8_CONFIG_PENDING);
+		(val & QSYS_PARAM_STATUS_REG_8_CONFIG_PENDING) ? 1 : 0;
 
 	qbvstatus->config_change_time =
 		ocelot_read(ocelot, QSYS_PARAM_STATUS_REG_7);
@@ -568,6 +578,12 @@ int felix_qbu_get(struct net_device *ndev, struct tsn_preempt_status *c)
 	return 0;
 }
 
+int felix_cb_streamid_counters_get(struct net_device *ndev, u32 index,
+				   struct tsn_cb_streamid_counters *s_counters)
+{
+	return 0;
+}
+
 int felix_cb_streamid_get(struct net_device *ndev, u32 index,
 			  struct tsn_cb_streamid *streamid)
 {
@@ -855,6 +871,22 @@ static int streamid_multi_forward_set(struct ocelot *ocelot, u32 index,
 	return 0;
 }
 
+int felix_qci_max_cap_get(struct net_device *ndev,
+			  struct tsn_qci_psfp_stream_param *stream_para)
+{
+	/* MaxStreamFilterInstances */
+	stream_para->max_sf_instance = capa.num_psfp_sfid;
+	/* MaxStreamGateInstances */
+	stream_para->max_sg_instance = capa.num_psfp_sgid;
+	/* MaxFlowMeterInstances */
+	stream_para->max_fm_instance = capa.psfp_fmi_max -
+		capa.psfp_fmi_min + 1;
+	/* SupportedListMax */
+	stream_para->supported_list_max = capa.num_sgi_gcl;
+
+	return 0;
+}
+
 int felix_qci_sfi_get(struct net_device *ndev, u32 index,
 		      struct tsn_qci_psfp_sfi_conf *sfi)
 {
@@ -869,6 +901,9 @@ int felix_qci_sfi_get(struct net_device *ndev, u32 index,
 		return -EINVAL;
 	}
 
+	/* In switch, streamhandle and sfid are the same parameter */
+	sfi->stream_handle_spec = (s32)sfid;
+
 	ocelot_field_write(ocelot, ANA_TABLES_SFIDTIDX_SFID_INDEX_0, sfid);
 
 	ocelot_write(ocelot,
@@ -906,6 +941,7 @@ int felix_qci_sfi_set(struct net_device *ndev, u32 index, bool enable,
 	int fmid = sfi->stream_filter.flow_meter_instance_id;
 	u16 max_sdu_len = sfi->stream_filter.maximum_sdu_size;
 	int sfid = index;
+	u32 val;
 
 	if (fmid == -1)
 		pol_idx = capa.psfp_fmi_max;
@@ -918,6 +954,15 @@ int felix_qci_sfi_set(struct net_device *ndev, u32 index, bool enable,
 		return -EINVAL;
 	}
 
+	if (!enable) {
+		val = ANA_TABLES_SFIDACCESS_SFID_TBL_CMD(SFIDACCESS_CMD_WRITE);
+		ocelot_write(ocelot,
+			     ANA_TABLES_SFIDTIDX_SFID_INDEX(sfid),
+			     ANA_TABLES_SFIDTIDX);
+		ocelot_write(ocelot, val, ANA_TABLES_SFIDACCESS);
+		return 0;
+	}
+
 	if (sgid >= capa.num_psfp_sgid) {
 		netdev_info(ndev, "Invalid sgid %u, maximum:%u\n",
 			    sgid, capa.num_psfp_sgid);
@@ -1174,6 +1219,9 @@ int felix_qci_sgi_get(struct net_device *ndev, u32 index,
 	else
 		admin->init_ipv = -1;
 
+	if (val & ANA_SG_CONFIG_REG_3_GATE_ENABLE)
+		sgi_conf->gate_enabled = 1;
+
 	admin->control_list_length = ANA_SG_CONFIG_REG_3_LIST_LENGTH_X(val);
 
 	list_num = admin->control_list_length;
diff --git a/drivers/net/ethernet/mscc/felix_tsn.h b/drivers/net/ethernet/mscc/felix_tsn.h
index 8af7d9e4e83e..bedaf3ee0393 100644
--- a/drivers/net/ethernet/mscc/felix_tsn.h
+++ b/drivers/net/ethernet/mscc/felix_tsn.h
@@ -42,6 +42,7 @@ struct mscc_switch_capa {
 	u8 qos_dp_max;
 };
 
+u32 felix_tsn_get_cap(struct net_device *ndev);
 int felix_qbv_set(struct net_device *ndev,
 		  struct tsn_qbv_conf *shaper_config);
 int felix_qbv_get(struct net_device *ndev,
@@ -57,6 +58,8 @@ int felix_cb_streamid_get(struct net_device *ndev, u32 index,
 			  struct tsn_cb_streamid *streamid);
 int felix_cb_streamid_set(struct net_device *ndev, u32 index,
 			  bool enable, struct tsn_cb_streamid *streamid);
+int felix_qci_max_cap_get(struct net_device *ndev,
+			  struct tsn_qci_psfp_stream_param *stream_para);
 int felix_qci_sfi_get(struct net_device *ndev, u32 index,
 		      struct tsn_qci_psfp_sfi_conf *sfi);
 int felix_qci_sfi_set(struct net_device *ndev, u32 index,
-- 
2.17.1

