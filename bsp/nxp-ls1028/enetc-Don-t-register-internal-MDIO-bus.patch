From 51b0a525bab062c191a5082182d0247402c1910a Mon Sep 17 00:00:00 2001
From: Claudiu Manoil <claudiu.manoil@nxp.com>
Date: Mon, 9 Sep 2019 17:35:29 +0300
Subject: [PATCH 643/741] enetc: Don't register internal MDIO bus

commit 60e5b8c0fc8ba763abb9f0e0974c2601c2579961 from
http://source.codeaurora.org/external/qoriq/qoriq-components/linux

Internal MDIO bus registration is not necessary but
MDIO bus registration seems to be the norm, especially
for upstream.  However registering the internal MDIO bus
breaks the RDB configuration, where an MDIO bus is already
registered for the same device.

Fixes following error on RDB:
sysfs: cannot create duplicate filename '/devices/platform/soc/1f0000000.pcie/pci0000:00/0000:00:00.0/mdio_bus/0000:00:00.0'

Fixes: 800554f03384 ("enetc: Initialize SerDes for SGMII and SXGMII protocols")

Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
Signed-off-by: Zhantao Tang <zhantao.tang@windriver.com>
---
 drivers/net/ethernet/freescale/enetc/enetc_mdio.c | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/drivers/net/ethernet/freescale/enetc/enetc_mdio.c b/drivers/net/ethernet/freescale/enetc/enetc_mdio.c
index 7ec4fca600ab..fbff9b082cc4 100644
--- a/drivers/net/ethernet/freescale/enetc/enetc_mdio.c
+++ b/drivers/net/ethernet/freescale/enetc/enetc_mdio.c
@@ -206,7 +206,6 @@ int enetc_imdio_init(struct enetc_pf *pf)
 	struct device *dev = &pf->si->pdev->dev;
 	struct enetc_mdio_priv *mdio_priv;
 	struct mii_bus *bus;
-	int err;
 
 	bus = devm_mdiobus_alloc_size(dev, sizeof(*mdio_priv));
 	if (!bus)
@@ -221,12 +220,6 @@ int enetc_imdio_init(struct enetc_pf *pf)
 	mdio_priv->mdio_base = ENETC_PM_IMDIO_BASE;
 	snprintf(bus->id, MII_BUS_ID_SIZE, "%s", dev_name(dev));
 
-	err = mdiobus_register(bus);
-	if (err) {
-		dev_err(dev, "cannot register internal MDIO bus\n");
-		return err;
-	}
-
 	pf->imdio = bus;
 
 	return 0;
-- 
2.17.1

