From 4d09584bd783bbf316ee00e678e5e548be118ad9 Mon Sep 17 00:00:00 2001
From: MengLi <meng.li@windriver.com>
Date: Mon, 30 Mar 2020 15:15:36 +0800
Subject: [PATCH 03/22] driver: mxc: gpu-viv: replace some removed functions
 with the corresponding existing ones

Refer to upstream commit ba1d34540147
 ("drm: remove deprecated "drm_dev_unref" function"),
replace drm_dev_unref with drm_dev_put.

Refer to upstream commit 3e70fd160cf0
("drm: remove deprecated "[__]drm_gem_object_[un]reference[_locked]"
functions"), replace drm_gem_object_unreference_unlocked
with drm_gem_object_put_unlocked.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 .../hal/os/linux/kernel/gc_hal_kernel_drm.c   | 26 +++++++++----------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c
index feb3a7146287..38c16bd7454b 100644
--- a/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c
+++ b/drivers/mxc/gpu-viv/hal/os/linux/kernel/gc_hal_kernel_drm.c
@@ -218,7 +218,7 @@ static int viv_ioctl_gem_create(struct drm_device *drm, void *data,
     viv_obj->cacheable = flags & gcvALLOC_FLAG_CACHEABLE;
 
     /* drop reference from allocate - handle holds it now */
-    drm_gem_object_unreference_unlocked(gem_obj);
+    drm_gem_object_put_unlocked(gem_obj);
 
 OnError:
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
@@ -260,7 +260,7 @@ static int viv_ioctl_gem_lock(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -306,7 +306,7 @@ static int viv_ioctl_gem_unlock(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -366,7 +366,7 @@ static int viv_ioctl_gem_cache(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -409,7 +409,7 @@ static int viv_ioctl_gem_query(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -443,7 +443,7 @@ static int viv_ioctl_gem_timestamp(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -478,7 +478,7 @@ static int viv_ioctl_gem_set_tiling(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -513,7 +513,7 @@ static int viv_ioctl_gem_get_tiling(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
 }
@@ -611,11 +611,11 @@ static int viv_ioctl_gem_attach_aux(struct drm_device *drm, void *data,
 OnError:
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
 
         if (gem_ts_obj)
         {
-            drm_gem_object_unreference_unlocked(gem_ts_obj);
+            drm_gem_object_put_unlocked(gem_ts_obj);
         }
     }
     return gcmIS_ERROR(status) ? -ENOTTY : 0;
@@ -707,7 +707,7 @@ static int viv_ioctl_gem_ref_node(struct drm_device *drm, void *data,
 
     if (gem_obj)
     {
-        drm_gem_object_unreference_unlocked(gem_obj);
+        drm_gem_object_put_unlocked(gem_obj);
     }
 
     return ret;
@@ -833,7 +833,7 @@ int viv_drm_probe(struct device *dev)
     {
         if (drm)
         {
-            drm_dev_unref(drm);
+            drm_dev_put(drm);
         }
         printk(KERN_ERR "galcore: Failed to setup drm device.\n");
     }
@@ -849,7 +849,7 @@ int viv_drm_remove(struct device *dev)
         struct drm_device *drm = (struct drm_device*)gal_dev->drm;
 
         drm_dev_unregister(drm);
-        drm_dev_unref(drm);
+        drm_dev_put(drm);
     }
 
     return 0;
-- 
2.17.1

