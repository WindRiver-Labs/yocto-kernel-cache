From 651c1a4d632dfdee54713d85a240463476be0adc Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Mon, 8 Jun 2020 16:36:39 +0800
Subject: [PATCH 5/9] driver: media: imx8: add function to disable regulator

It is need to disable regulator when ov5640_mipi_v3 driver
encounters initialization failed because of without connect
camera device or other reasons.
So, add a function to disable all regulators that are enabled
previously.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/ov5640_mipi_v3.c | 22 +++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/imx8/ov5640_mipi_v3.c b/drivers/media/platform/imx8/ov5640_mipi_v3.c
index 63d80e89b148..cbd02d85dbe8 100644
--- a/drivers/media/platform/imx8/ov5640_mipi_v3.c
+++ b/drivers/media/platform/imx8/ov5640_mipi_v3.c
@@ -597,6 +597,20 @@ static int ov5640_regulator_enable(struct device *dev)
 	return ret;
 }
 
+static int ov5640_regulator_disable(void)
+{
+	if (analog_regulator)
+		regulator_disable(analog_regulator);
+
+	if (core_regulator)
+		regulator_disable(core_regulator);
+
+	if (io_regulator)
+		regulator_disable(io_regulator);
+
+	return 0;
+}
+
 static s32 ov5640_write_reg(struct ov5640 *sensor, u16 reg, u8 val)
 {
 	struct device *dev = &sensor->i2c_client->dev;
@@ -1298,6 +1312,7 @@ static int ov5640_probe(struct i2c_client *client,
 	retval = ov5640_read_reg(sensor, OV5640_CHIP_ID_HIGH_BYTE,
 				&chip_id_high);
 	if (retval < 0 || chip_id_high != 0x56) {
+		ov5640_regulator_disable();
 		clk_disable_unprepare(sensor->sensor_clk);
 		pr_warn("camera ov5640 is not found\n");
 		return -ENODEV;
@@ -1305,6 +1320,7 @@ static int ov5640_probe(struct i2c_client *client,
 	retval = ov5640_read_reg(sensor, OV5640_CHIP_ID_LOW_BYTE,
 				&chip_id_low);
 	if (retval < 0 || chip_id_low != 0x40) {
+		ov5640_regulator_disable();
 		clk_disable_unprepare(sensor->sensor_clk);
 		pr_warn("camera ov5640 is not found\n");
 		return -ENODEV;
@@ -1312,6 +1328,7 @@ static int ov5640_probe(struct i2c_client *client,
 
 	retval = init_device(sensor);
 	if (retval < 0) {
+		ov5640_regulator_disable();
 		clk_disable_unprepare(sensor->sensor_clk);
 		pr_warn("camera ov5640 init fail\n");
 		return -ENODEV;
@@ -1327,11 +1344,14 @@ static int ov5640_probe(struct i2c_client *client,
 	retval = media_entity_pads_init(&sd->entity, OV5640_SENS_PADS_NUM,
 							sensor->pads);
 	sd->entity.ops = &ov5640_sd_media_ops;
-	if (retval < 0)
+	if (retval < 0) {
+		ov5640_regulator_disable();
 		return retval;
+	}
 
 	retval = v4l2_async_register_subdev(sd);
 	if (retval < 0) {
+		ov5640_regulator_disable();
 		dev_err(&client->dev,
 				"%s--Async register failed, ret=%d\n", __func__, retval);
 		media_entity_cleanup(&sd->entity);
-- 
2.17.1

