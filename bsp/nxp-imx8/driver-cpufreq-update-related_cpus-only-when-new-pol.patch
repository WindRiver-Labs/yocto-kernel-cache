From 4d001256eb128cc5cf7382dec53242ffb62ae36e Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Wed, 17 Jun 2020 13:36:24 +0800
Subject: [PATCH 36/37] driver: cpufreq: update related_cpus only when new
 policy is created
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There is upstream commit 91a12e91dc39("cpufreq: Allow
light-weight tear down and bring up of CPUs"), it expects
that CPU is recovered fastly with a online() callback
function of struct cpufreq_driver. But the imx8 cpufreq
driver from nxp-sdk4.19 doesnâ€™t have the online() callback,
so code enters "else" case although new_policy is false,
and then update related_cpus variable by mistake.
In order to compatible with the cpufreq driver from
nxp-sdk4.19, code should enter "else" case and update
related_cpus only when new policy is created.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/cpufreq/cpufreq.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 0c888531474f..f45b894e1baf 100644
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -1282,8 +1282,10 @@ static int cpufreq_online(unsigned int cpu)
 		if (ret)
 			goto out_exit_policy;
 
-		/* related_cpus should at least include policy->cpus. */
-		cpumask_copy(policy->related_cpus, policy->cpus);
+		if (new_policy) {
+			/* related_cpus should at least include policy->cpus. */
+			cpumask_copy(policy->related_cpus, policy->cpus);
+		}
 	}
 
 	down_write(&policy->rwsem);
-- 
2.17.1

