From 1aeb98905f804bcc91ce5d383ebeada0b92a7058 Mon Sep 17 00:00:00 2001
From: Mirela Rabulea <mirela.rabulea@nxp.com>
Date: Mon, 16 Sep 2019 01:16:12 +0300
Subject: [PATCH 05/37] MLK-22592: mxc-jpeg: Fix v4l2 compliance, "Format
 ioctls", TRY_FMT, colorspace

commit f585cfd7bbca090450c67437a08f72b8be5fd8c7 from
https://source.codeaurora.org/external/imx/linux-imx.git

Fail: v4l2-test-formats.cpp(804): fmt_out.g_colorspace() != col
Fix: properly set colorspace, ycbcr_enc, hsv_enc and quantization, from
     struct v4l2_pix_format_mplane. The documentation mentions only that
     ycbcr_enc, hsv_enc and quantization "must be set by the driver for
     capture streams and by the application for output streams", but the
     v4l2-compliance will fail if all these 4 members are not the same
     for capture & output. So, save them in the context structure of the
     driver, as I see it is done in other drivers.

Signed-off-by: Mirela Rabulea <mirela.rabulea@nxp.com>
Reviewed-by: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Reviewed-by: Robert Chiras <robert.chiras@nxp.com>
(cherry picked from commit 3188044c3d3b09a53069ee8e660ee926cc011e37)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-jpeg.c | 16 ++++++++++++++--
 drivers/media/platform/imx8/mxc-jpeg.h |  4 ++++
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/drivers/media/platform/imx8/mxc-jpeg.c b/drivers/media/platform/imx8/mxc-jpeg.c
index 56d98609b522..985e80b8c5eb 100644
--- a/drivers/media/platform/imx8/mxc-jpeg.c
+++ b/drivers/media/platform/imx8/mxc-jpeg.c
@@ -1496,6 +1496,11 @@ static void mxc_jpeg_set_default_params(struct mxc_jpeg_ctx *ctx)
 	struct mxc_jpeg_q_data *q[2] = {out_q, cap_q};
 	int i;
 
+	ctx->colorspace = V4L2_COLORSPACE_JPEG,
+	ctx->ycbcr_enc = V4L2_YCBCR_ENC_DEFAULT;
+	ctx->quantization = V4L2_QUANTIZATION_DEFAULT;
+	ctx->xfer_func = V4L2_XFER_FUNC_DEFAULT;
+
 	if (ctx->mode == MXC_JPEG_ENCODE) {
 		out_q->fmt = mxc_jpeg_find_format(ctx, MXC_JPEG_DEFAULT_PIXFMT);
 		cap_q->fmt = mxc_jpeg_find_format(ctx, V4L2_PIX_FMT_JPEG);
@@ -1678,7 +1683,6 @@ static int mxc_jpeg_try_fmt(struct v4l2_format *f, struct mxc_jpeg_fmt *fmt,
 				pfmt->sizeimage = pfmt->sizeimage * 1 / 3;
 		}
 	}
-	pix_mp->colorspace = V4L2_COLORSPACE_REC709;
 
 	return 0;
 }
@@ -1798,6 +1802,11 @@ static int mxc_jpeg_s_fmt(struct mxc_jpeg_ctx *ctx,
 				      0);
 	}
 
+	ctx->colorspace = pix_mp->colorspace;
+	ctx->ycbcr_enc = pix_mp->ycbcr_enc;
+	ctx->xfer_func = pix_mp->xfer_func;
+	ctx->quantization = pix_mp->quantization;
+
 	for (i = 0; i < pix_mp->num_planes; i++) {
 		q_data->bytesperline[i] = pix_mp->plane_fmt[i].bytesperline;
 		q_data->sizeimage[i] = pix_mp->plane_fmt[i].sizeimage;
@@ -1847,7 +1856,10 @@ static int mxc_jpeg_g_fmt_vid(struct file *file, void *priv,
 	pix_mp->width = q_data->w;
 	pix_mp->height = q_data->h;
 	pix_mp->field = V4L2_FIELD_NONE;
-	pix_mp->colorspace = V4L2_COLORSPACE_REC709;
+	pix_mp->colorspace = ctx->colorspace;
+	pix_mp->ycbcr_enc = ctx->ycbcr_enc;
+	pix_mp->xfer_func = ctx->xfer_func;
+	pix_mp->quantization = ctx->quantization;
 	pix_mp->num_planes = q_data->fmt->colplanes;
 	for (i = 0; i < pix_mp->num_planes; i++) {
 		pix_mp->plane_fmt[i].bytesperline = q_data->bytesperline[i];
diff --git a/drivers/media/platform/imx8/mxc-jpeg.h b/drivers/media/platform/imx8/mxc-jpeg.h
index 3be9b5753d3b..d5a76daa0a3c 100644
--- a/drivers/media/platform/imx8/mxc-jpeg.h
+++ b/drivers/media/platform/imx8/mxc-jpeg.h
@@ -102,6 +102,10 @@ struct mxc_jpeg_ctx {
 	unsigned int			stopping;
 	unsigned int			dht_needed;
 	unsigned int			slot;
+	enum v4l2_colorspace colorspace;
+	enum v4l2_ycbcr_encoding ycbcr_enc;
+	enum v4l2_quantization quantization;
+	enum v4l2_xfer_func xfer_func;
 };
 
 struct mxc_jpeg_slot_data {
-- 
2.17.1

