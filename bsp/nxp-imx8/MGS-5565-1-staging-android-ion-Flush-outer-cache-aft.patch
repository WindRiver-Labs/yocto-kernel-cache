From 414418ba1fa5b5d63d341d32ffa9f0e1c8891bf8 Mon Sep 17 00:00:00 2001
From: Richard Liu <xuegang.liu@nxp.com>
Date: Mon, 23 Mar 2020 17:08:08 +0000
Subject: [PATCH 32/37] MGS-5565-1 staging: android: ion: Flush outer cache
 after zero CMA allocated memory

commit a1ad54cb37f5a6e1d31ba455383c83855992ede9 from
https://source.codeaurora.org/external/imx/linux-imx.git

Need flush outer cache after zero CMA allocated memory on arm32 platform.

Change-Id: Ieaa7c62bf65e4490f904d68bed1fa16fb7c5d8fa
Signed-off-by: Richard Liu <xuegang.liu@nxp.com>
Reviewed-by: Bing Song <bing.song@nxp.com>
(cherry picked from commit 2e0f4905de1f634000993abd9f2645507c079107)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/staging/android/ion/ion_cma_heap.c | 26 ++++++++++++++++------
 1 file changed, 19 insertions(+), 7 deletions(-)

diff --git a/drivers/staging/android/ion/ion_cma_heap.c b/drivers/staging/android/ion/ion_cma_heap.c
index 52af33b48e3c..25099ffe15b2 100644
--- a/drivers/staging/android/ion/ion_cma_heap.c
+++ b/drivers/staging/android/ion/ion_cma_heap.c
@@ -14,6 +14,9 @@
 #include <linux/scatterlist.h>
 #include <linux/highmem.h>
 #include <asm/cacheflush.h>
+#ifdef CONFIG_ARM
+#include <asm/outercache.h>
+#endif
 
 #include "ion.h"
 
@@ -47,26 +50,35 @@ static int ion_cma_allocate(struct ion_heap *heap, struct ion_buffer *buffer,
 	if (PageHighMem(pages)) {
 		unsigned long nr_clear_pages = nr_pages;
 		struct page *page = pages;
+#ifdef CONFIG_ARM
+		phys_addr_t base = __pfn_to_phys(page_to_pfn(pages));
+		phys_addr_t end = base + size;
+#endif
 
 		while (nr_clear_pages > 0) {
 			void *vaddr = kmap_atomic(page);
 
 			memset(vaddr, 0, PAGE_SIZE);
-#ifdef CONFIG_ARM64
-			 __flush_dcache_area(vaddr,PAGE_SIZE);
-#else
+#ifdef CONFIG_ARM
 			__cpuc_flush_dcache_area(vaddr,PAGE_SIZE);
+#else
+			__flush_dcache_area(vaddr,PAGE_SIZE);
 #endif
 			kunmap_atomic(vaddr);
 			page++;
 			nr_clear_pages--;
 		}
+#ifdef CONFIG_ARM
+		outer_flush_range(base, end);
+#endif
 	} else {
-		memset(page_address(pages), 0, size);
-#ifdef CONFIG_ARM64
-		__flush_dcache_area(page_address(pages),size);
+		void *ptr = page_address(pages);
+		memset(ptr, 0, size);
+#ifdef CONFIG_ARM
+		__cpuc_flush_dcache_area(ptr,size);
+		outer_flush_range(__pa(ptr), __pa(ptr) + size);
 #else
-		__cpuc_flush_dcache_area(page_address(pages),size);
+		__flush_dcache_area(ptr,size);
 #endif
 	}
 
-- 
2.17.1

