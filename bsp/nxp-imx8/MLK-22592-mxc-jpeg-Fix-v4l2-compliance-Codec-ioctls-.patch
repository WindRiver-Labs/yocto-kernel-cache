From 19b2c4c6e9332d11c4707b9b67dfbdaaa53d9131 Mon Sep 17 00:00:00 2001
From: Mirela Rabulea <mirela.rabulea@nxp.com>
Date: Fri, 6 Sep 2019 20:42:12 +0300
Subject: [PATCH 06/37] MLK-22592: mxc-jpeg: Fix v4l2-compliance, "Codec
 ioctls" tests

commit bfe57921cff659f829a5bf30564511a101b4b679 from
https://source.codeaurora.org/external/imx/linux-imx.git

Fail: v4l2-test-codecs.cpp(51): ret == ENOTTY
Fix: Implement vidioc_try_encoder_cmd/vidioc_try_decoder_cmd, return
     EINVAL for unimplemented commands

Fail: v4l2-test-codecs.cpp(57): ret != 0
Fix: Clear the flags in vidioc_try_encoder_cmd/vidioc_try_decoder_cmd

Fail: v4l2-test-codecs.cpp(69): ret != 0
Fix: Pretend CMD_START is implemented in vidioc_try_encoder_cmd

Fail: v4l2-test-codecs.cpp(127): ret != 0
Fix: Do not return EINVAL for decoder command on encoder, instead,
     return silently

Fail: v4l2-test-codecs.cpp(142): cmd.start.format == ~0U
Fix: clear start.speed & start.format in try_decoder_cmd

Signed-off-by: Mirela Rabulea <mirela.rabulea@nxp.com>
Reviewed-by: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Reviewed-by: Robert Chiras <robert.chiras@nxp.com>
(cherry picked from commit 15c360981b005edb3dca6bcff39558cbab5effc0)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-jpeg.c | 79 +++++++++++++++++---------
 1 file changed, 51 insertions(+), 28 deletions(-)

diff --git a/drivers/media/platform/imx8/mxc-jpeg.c b/drivers/media/platform/imx8/mxc-jpeg.c
index 985e80b8c5eb..922820072d74 100644
--- a/drivers/media/platform/imx8/mxc-jpeg.c
+++ b/drivers/media/platform/imx8/mxc-jpeg.c
@@ -916,18 +916,39 @@ static void mxc_jpeg_device_run(void *priv)
 	spin_unlock_irqrestore(&ctx->mxc_jpeg->hw_lock, flags);
 }
 
+static int mxc_jpeg_try_decoder_cmd(struct file *file, void *fh,
+				    struct v4l2_decoder_cmd *c)
+{
+	if (c->cmd != V4L2_DEC_CMD_STOP && c->cmd != V4L2_DEC_CMD_START)
+		return -EINVAL;
+
+	c->flags = 0;
+
+	if (c->cmd == V4L2_DEC_CMD_START) {
+		c->start.speed = 0;
+		c->start.format = 0;
+	}
+
+	return 0;
+}
+
 static int mxc_jpeg_decoder_cmd(struct file *file, void *priv,
 				struct v4l2_decoder_cmd *cmd)
 {
 	struct v4l2_fh *fh = file->private_data;
 	struct mxc_jpeg_ctx *ctx = mxc_jpeg_fh_to_ctx(fh);
 	struct device *dev = ctx->mxc_jpeg->dev;
+	int ret;
 
-	switch (cmd->cmd) {
-	case V4L2_DEC_CMD_START:
-		dev_dbg(dev, "V4L2_DEC_CMD_START not implemented");
-		break;
-	case V4L2_DEC_CMD_STOP:
+	ret = mxc_jpeg_try_decoder_cmd(file, fh, cmd);
+	if (ret < 0)
+		return ret;
+
+	/* Ignore decoder command silently in encoder context */
+	if (ctx->mode != MXC_JPEG_DECODE)
+		return 0;
+
+	if (cmd->cmd == V4L2_DEC_CMD_STOP) {
 		dev_dbg(dev, "Received V4L2_DEC_CMD_STOP");
 		if (v4l2_m2m_num_src_bufs_ready(fh->m2m_ctx) == 0) {
 			/* No more src bufs, notify app EOS */
@@ -936,16 +957,19 @@ static int mxc_jpeg_decoder_cmd(struct file *file, void *priv,
 			/* will send EOS later*/
 			ctx->stopping = 1;
 		}
-		return 0;
-	case V4L2_DEC_CMD_PAUSE:
-		dev_dbg(dev, "V4L2_DEC_CMD_PAUSE not implemented");
-		break;
-	case V4L2_DEC_CMD_RESUME:
-		dev_dbg(dev, "V4L2_DEC_CMD_RESUME not implemented");
-		break;
-	default:
-		return -EINVAL;
 	}
+
+	return 0;
+}
+
+static int mxc_jpeg_try_encoder_cmd(struct file *file, void *fh,
+				    struct v4l2_encoder_cmd *c)
+{
+	if (c->cmd != V4L2_ENC_CMD_STOP && c->cmd != V4L2_ENC_CMD_START)
+		return -EINVAL;
+
+	c->flags = 0;
+
 	return 0;
 }
 
@@ -955,12 +979,17 @@ static int mxc_jpeg_encoder_cmd(struct file *file, void *priv,
 	struct v4l2_fh *fh = file->private_data;
 	struct mxc_jpeg_ctx *ctx = mxc_jpeg_fh_to_ctx(fh);
 	struct device *dev = ctx->mxc_jpeg->dev;
+	int ret;
 
-	switch (cmd->cmd) {
-	case V4L2_ENC_CMD_START:
-		dev_dbg(dev, "V4L2_ENC_CMD_START not implemented");
-		break;
-	case V4L2_ENC_CMD_STOP:
+	ret = mxc_jpeg_try_encoder_cmd(file, fh, cmd);
+	if (ret < 0)
+		return ret;
+
+	/* Ignore encoder command silently in decoder context */
+	if (ctx->mode != MXC_JPEG_ENCODE)
+		return 0;
+
+	if (cmd->cmd == V4L2_ENC_CMD_STOP) {
 		dev_dbg(dev, "Received V4L2_ENC_CMD_STOP");
 		if (v4l2_m2m_num_src_bufs_ready(fh->m2m_ctx) == 0) {
 			/* No more src bufs, notify app EOS */
@@ -969,16 +998,8 @@ static int mxc_jpeg_encoder_cmd(struct file *file, void *priv,
 			/* will send EOS later*/
 			ctx->stopping = 1;
 		}
-		return 0;
-	case V4L2_ENC_CMD_PAUSE:
-		dev_dbg(dev, "V4L2_ENC_CMD_PAUSE not implemented");
-		break;
-	case V4L2_ENC_CMD_RESUME:
-		dev_dbg(dev, "V4L2_ENC_CMD_RESUME not implemented");
-		break;
-	default:
-		return -EINVAL;
 	}
+
 	return 0;
 }
 
@@ -1936,7 +1957,9 @@ static const struct v4l2_ioctl_ops mxc_jpeg_ioctl_ops = {
 
 	.vidioc_subscribe_event		= mxc_jpeg_subscribe_event,
 	.vidioc_unsubscribe_event	= v4l2_event_unsubscribe,
+	.vidioc_try_decoder_cmd		= mxc_jpeg_try_decoder_cmd,
 	.vidioc_decoder_cmd		= mxc_jpeg_decoder_cmd,
+	.vidioc_try_encoder_cmd		= mxc_jpeg_try_encoder_cmd,
 	.vidioc_encoder_cmd		= mxc_jpeg_encoder_cmd,
 
 	.vidioc_qbuf			= mxc_jpeg_qbuf,
-- 
2.17.1

