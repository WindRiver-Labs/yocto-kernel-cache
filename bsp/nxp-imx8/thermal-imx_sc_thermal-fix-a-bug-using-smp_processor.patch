From eb167c035c2dae67b9652d1e2c09942f5e12ac79 Mon Sep 17 00:00:00 2001
From: Xiaolei Wang <xiaolei.wang@windriver.com>
Date: Thu, 19 Mar 2020 21:47:25 +0800
Subject: [PATCH 15/22] thermal: imx_sc_thermal: fix a bug using
 smp_processor_id() in preemptible

fix a bug using smp_processor_id() when preemptible.But because
imx_sc_tsens_get_temp uses sc_call_rpc interface, this will call
mutex_lock function, so preempt_disable() function cannot be used to
turn off preemption, so we use raw_smp_processor_id()

Signed-off-by: Xiaolei Wang <xiaolei.wang@windriver.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/thermal/imx_sc_thermal.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/thermal/imx_sc_thermal.c b/drivers/thermal/imx_sc_thermal.c
index 8c5049020cd8..f0b25df2f057 100644
--- a/drivers/thermal/imx_sc_thermal.c
+++ b/drivers/thermal/imx_sc_thermal.c
@@ -70,7 +70,7 @@ static int imx_sc_tsens_get_temp(void *data, int *temp)
 	 */
 	if (sciErr != SC_ERR_NONE) {
 		sciErr = sc_misc_get_temp(tsens_ipcHandle,
-			sensor_hw_id[topology_physical_package_id(smp_processor_id())],
+			sensor_hw_id[topology_physical_package_id(raw_smp_processor_id())],
 			SC_C_TEMP, &celsius, &tenths);
 		if (sciErr != SC_ERR_NONE) {
 			pr_err("read temp sensor:%d failed\n", sensor->hw_id);
-- 
2.17.1

