From f237042327c65d0fc77dc22555b0d26d4b96565b Mon Sep 17 00:00:00 2001
From: Limeng <Meng.Li@windriver.com>
Date: Mon, 8 Jun 2020 18:15:46 +0800
Subject: [PATCH 7/9] driver: usb: cdns3: only execute gadget disconnection
 operation when gadget driver has been initialized.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

During kernel boots up, there is a usb related crash as below:
Call trace:
 usb_gadget_disconnect+0x98/0x160
 cdns3_gadget_disable.isra.0+0x48/0x58
 cdns3_gadget_exit+0x3c/0xf8
 cdns3_probe+0x6cc/0x71c
 platform_drv_probe+0x58/0xa8
 …...
 cdns3_driver_platform_register+0x24/0x2c
 ……
 ret_from_fork+0x10/0x1c

Because the USB typec phy driver is still not initialized when usb
Controller driver is initialized. In this way, usb controller driver
get return value -EPROBE_DEFER, and call usb_gadget_disconnect()
function. But in kernel v5.2, there is a upstream commit
0a55187a1ec8("USB: gadget core: Issue ->disconnect() callback
from usb_gadget_disconnect()"), combining with the usb controller
driver from nxp-imx-sdk4.19 will cause gadget->udc->driver->disconnect()
is invoked when gadget driver is still not initialized, and triggr kernel
crash.
Therefore, refer to sdk-nxp-imx5.4, only execute gadget disconnection
operation when gadget driver has been initialized.

Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/usb/cdns3/gadget.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/usb/cdns3/gadget.c b/drivers/usb/cdns3/gadget.c
index e27cb2b62214..2234ba9a1718 100644
--- a/drivers/usb/cdns3/gadget.c
+++ b/drivers/usb/cdns3/gadget.c
@@ -2158,10 +2158,11 @@ static void cdns3_gadget_disable(struct cdns3 *cdns)
 
 	priv_dev = cdns->gadget_dev;
 
-	if (priv_dev->gadget_driver)
+	if (priv_dev->gadget_driver) {
 		priv_dev->gadget_driver->disconnect(&priv_dev->gadget);
+		usb_gadget_disconnect(&priv_dev->gadget);
+	}
 
-	usb_gadget_disconnect(&priv_dev->gadget);
 	priv_dev->gadget.speed = USB_SPEED_UNKNOWN;
 }
 
-- 
2.17.1

