From 1e5195072d675f547cd2aba99bb35948ca0b5d94 Mon Sep 17 00:00:00 2001
From: ming_qian <ming.qian@nxp.com>
Date: Thu, 7 Nov 2019 13:45:41 +0800
Subject: [PATCH 14/37] MLK-22920:VPU Encoder: change the writeable flag
 synchronously

commit 2dc7fcba91111305b702a55abb42413505afc229 from
https://source.codeaurora.org/external/imx/linux-imx.git

If the writeable flag is not change synchronously,
the flag may not changed correct,
it'll case the encode stream hang.
It's likely to happen when small resolution stream do suspend.

Signed-off-by: ming_qian <ming.qian@nxp.com>
Reviewed-by: Shijie Qin <shijie.qin@nxp.com>
(cherry picked from commit b5eff51cdaf7cf4db7df0a307da6c40ec01bc002)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/mxc/vpu_windsor/vpu_encoder_b0.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/mxc/vpu_windsor/vpu_encoder_b0.c b/drivers/mxc/vpu_windsor/vpu_encoder_b0.c
index 5e0d7f47c9a1..e5dce2814238 100644
--- a/drivers/mxc/vpu_windsor/vpu_encoder_b0.c
+++ b/drivers/mxc/vpu_windsor/vpu_encoder_b0.c
@@ -2632,8 +2632,10 @@ static int handle_event_start_done(struct vpu_ctx *ctx)
 	if (!ctx)
 		return -EINVAL;
 
+	down(&ctx->q_data[V4L2_SRC].drv_q_lock);
 	set_bit(VPU_ENC_STATUS_START_DONE, &ctx->status);
 	set_queue_rw_flag(&ctx->q_data[V4L2_SRC], VPU_ENC_FLAG_WRITEABLE);
+	up(&ctx->q_data[V4L2_SRC].drv_q_lock);
 	submit_input_and_encode(ctx);
 
 	enable_fps_sts(get_vpu_ctx_attr(ctx));
@@ -2827,8 +2829,10 @@ static void vpu_enc_event_handler(struct vpu_ctx *ctx,
 		handle_event_stop_done(ctx);
 		break;
 	case VID_API_ENC_EVENT_FRAME_INPUT_DONE:
+		down(&ctx->q_data[V4L2_SRC].drv_q_lock);
 		set_queue_rw_flag(&ctx->q_data[V4L2_SRC],
 				VPU_ENC_FLAG_WRITEABLE);
+		up(&ctx->q_data[V4L2_SRC].drv_q_lock);
 		response_stop_stream(ctx);
 		submit_input_and_encode(ctx);
 		break;
-- 
2.17.1

