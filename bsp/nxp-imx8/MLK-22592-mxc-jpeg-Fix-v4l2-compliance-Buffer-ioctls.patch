From 35d8aeabf7d173af02e4cc09061c292bf61157b3 Mon Sep 17 00:00:00 2001
From: Mirela Rabulea <mirela.rabulea@nxp.com>
Date: Tue, 10 Sep 2019 13:13:06 +0300
Subject: [PATCH 07/37] MLK-22592: mxc-jpeg: Fix v4l2-compliance, "Buffer
 ioctls", VIDIOC_CREATE_BUFS

commit 49b4a10986e3bae0d1644d98e5897596ed8ed3a7 from
https://source.codeaurora.org/external/imx/linux-imx.git

Fail: v4l2-test-buffers.cpp(715): q.create_bufs(node, 1, &fmt) != EINVAL
Fix: Add sanity checks for queue_setup/CREATE_BUFS, t oaddress failure when
     passed a buffer that is too small. Queue_setup wasn't handling the
     case where *nplanes != 0, as used from CREATE_BUFS (requiring the
     driver to sanity check the provided buffer parameters. It was assuming
     that it was always being used in the REQBUFS case where it provides
     the buffer properties.
     Similar with upstream commit 1029e7a71e51 ("staging: bcm2835-camera:
     Add sanity checks for queue_setup/CREATE_BUFS")

Signed-off-by: Mirela Rabulea <mirela.rabulea@nxp.com>
Reviewed-by: Laurentiu Palcu <laurentiu.palcu@nxp.com>
Reviewed-by: Robert Chiras <robert.chiras@nxp.com>
(cherry picked from commit d437af7611cecbdd5e195b545bf02208237ff405)
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/media/platform/imx8/mxc-jpeg.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/drivers/media/platform/imx8/mxc-jpeg.c b/drivers/media/platform/imx8/mxc-jpeg.c
index 922820072d74..d594e9d5d5da 100644
--- a/drivers/media/platform/imx8/mxc-jpeg.c
+++ b/drivers/media/platform/imx8/mxc-jpeg.c
@@ -1030,8 +1030,8 @@ static void mxc_jpeg_job_abort(void *priv)
 }
 
 static int mxc_jpeg_queue_setup(struct vb2_queue *q,
-				unsigned int *num_buffers,
-				unsigned int *num_planes,
+				unsigned int *nbuffers,
+				unsigned int *nplanes,
 				unsigned int sizes[],
 				struct device *alloc_ctxs[])
 {
@@ -1043,15 +1043,19 @@ static int mxc_jpeg_queue_setup(struct vb2_queue *q,
 	if (!q_data)
 		return -EINVAL;
 
-	*num_planes = q_data->fmt->colplanes;
+	/* Handle CREATE_BUFS situation - *nplanes != 0 */
+	if (*nplanes) {
+		for (i = 0; i < *nplanes; i++) {
+			if (sizes[i] < q_data->sizeimage[i])
+				return -EINVAL;
+		}
+	}
 
-	for (i = 0; i < *num_planes; i++) {
-		/* assuming worst case jpeg compression: 6 x raw file size */
-		sizes[i] = q_data->w * q_data->h * 6;
+	/* Handle REQBUFS situation */
+	*nplanes = q_data->fmt->colplanes;
+	for (i = 0; i < *nplanes; i++)
+		sizes[i] = q_data->sizeimage[i];
 
-		if (q_data->sizeimage[i] > 0)
-			sizes[i] = q_data->sizeimage[i];
-	}
 	return 0;
 }
 static int mxc_jpeg_start_streaming(struct vb2_queue *q, unsigned int count)
-- 
2.17.1

