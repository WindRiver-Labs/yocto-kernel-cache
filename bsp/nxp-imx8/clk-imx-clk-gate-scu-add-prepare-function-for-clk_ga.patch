From 495d5d72a5deb51e59e6000a119ab095a82b9988 Mon Sep 17 00:00:00 2001
From: Xulin Sun <xulin.sun@windriver.com>
Date: Fri, 7 Feb 2020 13:31:28 +0800
Subject: [PATCH 14/22] clk: imx: clk-gate-scu: add prepare function for
 clk_gate2_scu

clk enable/disable are not allowed to sleep, but prepare function is
allowed. So operation populate_gate_pd() that include sleep should
be moved to prepare function.

[    0.717183] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:239
[    0.723982] in_atomic(): 1, irqs_disabled(): 128, pid: 1, name: swapper/0
[    0.729453] Preemption disabled at:
[    0.729473] [<ffff0000085f3664>] clk_enable_lock+0x2c/0xb0
[    0.735802] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.18.45-yocto-standard #1
[    0.741788] Hardware name: Freescale i.MX8QXP MEK (DT)
[    0.745612] Call trace:
[    0.746746]  dump_backtrace+0x0/0x168
[    0.749088]  show_stack+0x24/0x30
[    0.751090]  dump_stack+0x80/0xa4
[    0.753086]  ___might_sleep+0x148/0x170
[    0.755601]  __might_sleep+0x58/0x90
[    0.757864]  mutex_lock+0x2c/0x60
[    0.759864]  genpd_get_from_provider.part.9+0x34/0xa8
[    0.763594]  genpd_get_from_provider+0x28/0x38
[    0.766726]  populate_gate_pd.isra.1+0x54/0x90
[    0.769852]  clk_gate2_scu_enable+0x94/0xb0

Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/clk/imx/clk-gate-scu.c | 23 ++++++++++++++---------
 1 file changed, 14 insertions(+), 9 deletions(-)

diff --git a/drivers/clk/imx/clk-gate-scu.c b/drivers/clk/imx/clk-gate-scu.c
index 7bd3bc6e32d4..b85700ddf3de 100644
--- a/drivers/clk/imx/clk-gate-scu.c
+++ b/drivers/clk/imx/clk-gate-scu.c
@@ -248,9 +248,6 @@ static int clk_gate2_scu_enable(struct clk_hw *hw)
 	if (!ccm_ipc_handle)
 		return -1;
 
-	if (gate->pd == NULL && gate->pd_name)
-		populate_gate_pd(gate);
-
 	if (IS_ERR_OR_NULL(gate->pd))
 		return -1;
 
@@ -275,9 +272,6 @@ static void clk_gate2_scu_disable(struct clk_hw *hw)
 	if (!ccm_ipc_handle)
 		return;
 
-	if (gate->pd == NULL && gate->pd_name)
-		populate_gate_pd(gate);
-
 	if (IS_ERR_OR_NULL(gate->pd))
 		return;
 
@@ -296,9 +290,6 @@ static int clk_gate2_scu_is_enabled(struct clk_hw *hw)
 	struct clk_gate2_scu *gate = to_clk_gate2_scu(hw);
 	u32 val;
 
-	if (gate->pd == NULL && gate->pd_name)
-		populate_gate_pd(gate);
-
 	if (IS_ERR_OR_NULL(gate->pd))
 		return 0;
 
@@ -314,8 +305,22 @@ static int clk_gate2_scu_is_enabled(struct clk_hw *hw)
 	return 0;
 }
 
+/* Prepare to get power domain. */
+static int clk_gate2_scu_prepare(struct clk_hw *hw)
+{
+	struct clk_gate2_scu *gate = to_clk_gate2_scu(hw);
+
+	if (!ccm_ipc_handle)
+		return -1;
+
+	if (gate->pd == NULL && gate->pd_name)
+		populate_gate_pd(gate);
+
+	return 0;
+}
 
 static struct clk_ops clk_gate2_scu_ops = {
+	.prepare = clk_gate2_scu_prepare,
 	.enable = clk_gate2_scu_enable,
 	.disable = clk_gate2_scu_disable,
 	.is_enabled = clk_gate2_scu_is_enabled,
-- 
2.17.1

