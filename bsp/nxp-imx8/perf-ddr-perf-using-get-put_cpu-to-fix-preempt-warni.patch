From 9d2ccd317826cf16c6e8d395fd5a0a0604edbf5c Mon Sep 17 00:00:00 2001
From: Quanyang Wang <quanyang.wang@windriver.com>
Date: Mon, 15 Apr 2019 14:38:51 +0800
Subject: [PATCH 18/22] perf: ddr-perf: using get/put_cpu to fix preempt
 warning

When booting kernel with DEBUG_PREEMPT enabled, it dumps the warning
as below:

BUG: using smp_processor_id() in preemptible [00000000] code: swapper/0/1
caller is debug_smp_processor_id+0x1c/0x28
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.18.31-yocto-standard+ #462
Hardware name: Freescale i.MX8MQ EVK (DT)
Call trace:
 dump_backtrace+0x0/0x1d0
 show_stack+0x24/0x30
 dump_stack+0x8c/0xac
 check_preemption_disabled+0xf8/0x100
 debug_smp_processor_id+0x1c/0x28
 ddr_perf_probe+0x138/0x1f0
 platform_drv_probe+0x58/0xa8
 driver_probe_device+0x224/0x300
 __driver_attach+0xe4/0xe8
 bus_for_each_dev+0x84/0xd8
 driver_attach+0x30/0x40
 bus_add_driver+0x1c4/0x230
 driver_register+0x64/0x110
 __platform_driver_register+0x54/0x60
 imx_ddr_pmu_init+0x20/0x28
 do_one_initcall+0x68/0x258
 kernel_init_freeable+0x2e4/0x3e8
 kernel_init+0x18/0x110
 ret_from_fork+0x10/0x1c

This happens because smp_processor_id() is called in preempt enabled condition.
So use get/put_cpu to avoid it.

Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
Signed-off-by: Meng Li <Meng.Li@windriver.com>
---
 drivers/perf/ddr-perf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/perf/ddr-perf.c b/drivers/perf/ddr-perf.c
index cd3e4e8f099c..2bb98b228163 100644
--- a/drivers/perf/ddr-perf.c
+++ b/drivers/perf/ddr-perf.c
@@ -497,7 +497,8 @@ static int ddr_perf_probe(struct platform_device *pdev)
 
 	pmu->devtype = (struct fsl_ddr_devtype_data *)of_id->data;
 
-	cpumask_set_cpu(smp_processor_id(), &pmu->cpu);
+	cpumask_set_cpu(get_cpu(), &pmu->cpu);
+	put_cpu();
 	ret = perf_pmu_register(&(pmu->pmu), name, -1);
 	if (ret)
 		goto ddr_perf_err;
-- 
2.17.1

